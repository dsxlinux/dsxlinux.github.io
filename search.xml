<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux系统备份与还原]]></title>
    <url>%2F2018%2F06%2F12%2Flinux-system-backup%2F</url>
    <content type="text"><![CDATA[本文主要介绍centos系统的备份和还原。我们在使用Windows时，可以使用ghost工具对系统进行备份，那么Linux系统是如何备份的呢 1. 备份系统在linux系统中，有一句话叫做一切都是文件，既然是文件，我们就可以通过打包的方式来备份。 使用root身份登录系统，进行打包操作。 12345678# tar cvpzf /backup.tgz –exclude=/proc –exclude=/lost+found –exclude=/backup.tgz –exclude=/mnt –exclude=/sys –exclude=/sys /参数说明：c 按照man手册，直译创建一个新的存档，意思是打包文件backup.tgz不存在，需要创建v 显示打包过程和细节p 保留文件的权限z gzip格式压缩，和windows上的rar格式或zip格式差不多f 文件，cf一起的意思是创建文件exclude 是排除那些文件不打包进去 上面的命令将/下的所有东西打成一个包，有些系统上动态的文件可以不用打包，排除出去，比如：/proc，/sys。也可以把不用备份的文件排除出去。 2. 系统还原在进行恢复系统的操作时一定要小心！如果你不清楚自己在做什么，那么你有可能把重要的数据弄丢，请务必小心！ 切换到root用户，并把文件“backup.tgz”拷贝到分区的根目录下。 1# tar xvpfz /backup.tgz -C / 恢复命令结束时，你的工作还没完成，别忘了重新创建那些在备份时被排除在外的目录： 1234# mkdir proc# mkdir lost+found# mkdir mnt# mkdir sys 保险起见，最好是执行一下如下命令： 1# restorecon -Rv / restorecon命令是用来恢复文件的SELinux配置信息的。 最后重启服务器，重新启动时观察一下，有没有服务没有起来。 3. 还原到其他的Linux中有时候会出现这种情况，备份的Linux系统已经损坏，比如硬盘坏了，上面的备份文件还有，那么是否可以恢复呢，答案是肯定的。 重新准备一台服务器，最好是分区、系统版本和损坏的服务器是一致的，安装好相同版本的Linux系统。将备份文件backup.tgz拷贝到新的服务器中。 12# mkdir /mnt/backup/# awk 'BEGIN &#123; cmd="cp -ari /mnt/backup/* /"; print "n" |cmd; &#125;' 上面的命令是”cp -ari /mnt/backup/* /“，意思是拷贝所有的备份文件，将/下的目录进行覆盖。print “n”的意思是同名文件不覆盖。这样做就是将老系统中的文件复制到新系统，不覆盖已经存在的文件。 那么为什么不能覆盖呢？每个Linux系统中有一些唯一的信息不能覆盖，否则系统会坏掉。比如： 1234567# blkid/dev/sda5: UUID="5d938847-6503-40cf-845d-a85777d4d1e1" TYPE="ext4" /dev/sda1: UUID="86215e74-789c-4a32-ad2a-7d2a1a06a587" TYPE="ext4" /dev/sda2: UUID="1031afbe-2bf8-474c-9d3f-93a77d5751df" TYPE="ext4" /dev/sda3: UUID="83898300-4d9d-41de-951a-62896cde5025" TYPE="ext4" /dev/sda6: UUID="381b6c24-de6a-4d01-8382-9b3bb3a9ecc3" TYPE="ext4" /dev/sda7: UUID="c0793320-2302-4018-8482-130fbc4dca06" TYPE="swap" 每个系统的分区都有一个UUID，这个是唯一的，覆盖之后就会出问题。 123456789101112131415161718# cat /etc/fstab ## /etc/fstab# Created by anaconda on Tue Dec 22 15:16:37 2015## Accessible filesystems, by reference, are maintained under '/dev/disk'# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info#UUID=5d938847-6503-40cf-845d-a85777d4d1e1 / ext4 defaults 1 1UUID=1031afbe-2bf8-474c-9d3f-93a77d5751df /appslog ext4 defaults 1 2UUID=86215e74-789c-4a32-ad2a-7d2a1a06a587 /boot ext4 defaults 1 2UUID=83898300-4d9d-41de-951a-62896cde5025 /opt ext4 defaults 1 2UUID=381b6c24-de6a-4d01-8382-9b3bb3a9ecc3 /usr ext4 defaults 1 2UUID=c0793320-2302-4018-8482-130fbc4dca06 swap swap defaults 0 0tmpfs /dev/shm tmpfs defaults 0 0devpts /dev/pts devpts gid=5,mode=620 0 0sysfs /sys sysfs defaults 0 0proc /proc proc defaults 0 0 系统中的fstab中用到了UUID，覆盖了文件会导致系统启动不了。 然后执行： 1# restorecon -Rv / 这一步是必须的，否则重启系统会报错。 最后就是观察重启系统时，是否有服务没启动，需要手动将其启动。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux网络工具]]></title>
    <url>%2F2018%2F06%2F10%2Flinux-net-tools%2F</url>
    <content type="text"><![CDATA[本文主要介绍Linux系统中常用的网络工具。 1. curl命令curl 命令行访问URL的工具 12345678910111213141516171819202122# curl http://www.baidu.com 直接将百度网页的源码输出到屏幕上# curl http://www.baidu.com –o baidu.html 将百度网页的源码保存起来# curl -O http://www.linux.com/hello.sh 将hello.sh文件下载下来# curl -# -O http://www.linux.com/dodo1.JPG 显示下载进度条# curl -C -O http://www.linux.com/dodo1.JPG 断点续传# curl -o /dev/null -s -w %&#123;http_code&#125; www.baidu.com 测试网页返回值，非常有用# curl -o /dev/null -s -w %&#123;http_code&#125;:%&#123;http_connect&#125;:%&#123;content_type&#125;:%&#123;time_namelookup&#125;:%&#123;time_redirect&#125;:%&#123;time_pretransfer&#125;:%&#123;time_connect&#125;:%&#123;time_starttransfer&#125;:%&#123;time_total&#125;:%&#123;speed_download&#125; digdeeply.org# curl -x 192.168.100.100:1080 http://www.linux.com -x参数是设置代理的# curl -I http://static.futunn.com/passport/images/global/logo_futunn-b9fab8d8f683775e9c3c5ade78e822ec.png -x 211.162.36.175:80# curl -I www.sina.com.cn -x 124.42.245.30:80# curl -I 124.42.245.30# curl -I 124.42.245.30 -H 'host:www.sina.com.cn'# curl -s -D header.txt http://www.linux.com -o /dev/null 保存访问网站的header信息# curl -I http://www.linux.com 在屏幕上显示header信息# curl -c cookie.txt http://www.linux.com 保存访问网站的cookie信息# curl -A "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.0)" http://www.linux.com 模仿浏览器# curl -e "www.abc.com" http://mail.linux.com 伪造referer# curl -T dodo1.JPG -u 用户名:密码 ftp://www.linux.com/img/ 上传文件# curl ip.cn# curl myip.ipip.net# curl ip.cip.cc 2. nmap命令Nmap 是一款开放源代码的 网络探测和安全审核的工具。 它的设计目标是快速地扫描大型网络 。 123456789101112131415161718192021# nmap -sP 192.168.1.0/24 使用ping检测10.0.0.0/24这个网段# nmap --iflist# nmap -e eth0 192.168.1.5 扫描ip开放的端口# nmap 192.168.1.1 -p 1-500 自定义扫描端口# nmap -sn 192.168.1.0/2 只进行主机发现，不进行端口扫描# nmap 192.168.1.1 -P0 端口扫描(Pn)# nmap 192.168.1.1-100 多个ip# nmap -F 192.168.1.* 多个ip，-F 快速扫描# nmap -sS 192.168.1.153 Tcp SYN Scan (sS)# nmap -sT 192.168.1.153 Tcp connect() scan(sT)# nmap -sU 192.168.1.153 Udp scan(sU)# nmap -sF 192.168.1.153 FINscan(sF)# nmap -sV 192.168.1.153 版本检测(sV)# nmap 192.168.1.153 -p U:22,80,T:21-25,80,139,8080 TCP、UDP端口扫描# nmap --traceroute www.baidu.com 路由跟踪# nmap -O 192.168.1.153 操作系统# nmap -A 192.168.1.153 激进方式扫描，扫描端口和os# nmap -sV -p 22 -oG grep-output.txt 192.168.1.0/24 输出格式，可检索的# nmap -sV -p 22 -oA grep-output.txt 192.168.1.0/24 输出格式，-oA所有，可检索的、常规的和XML文件# nmap -sV -p 22 -oX grep-output.txt 192.168.1.0/24 输出格式，XML# nmap -sV -p 22 -oN grep-output.txt 192.168.1.0/24 输出格式，常规格式 3. nc命令 (1) 安装 1# yum install -y nc (2) 远程拷贝文件 1234server1：# nc -l 1234 &gt; test.txtserver2：# nc 192.168.1.3 &lt; test.txt (3) 传输目录 1234server1：# nc -l 1234 | tar xzv-server2：# tar czv- nginx | nc 192.168.48.47 1234 (4) 简单聊天工具 1234在192.168.1.2上： # nc -l 1234在192.168.1.3上： # nc 192.168.1.2 1234 (5) 端口扫描 1# nc -v -w 2 192.168.2.34 -z 21-24 (6) 克隆硬盘或分区 12# nc -l -p 1234 | dd of=/dev/sda# dd if=/dev/sda | nc 192.168.228.222 1234 (7) 保存Web页面 1# while true; do nc -l -p 80 -q 1 &lt; somepage.html; done 4. wget命令wget是一个下载文件的工具 。 命令格式： wget [参数] [URL地址 ] wget下载单个文件 1# wget http://ftp.gnu.org/gnu/wget/wget-1.16.2.tar.gz 下载并以不同的文件名保存 1# wget http://ftp.gnu.org/gnu/wget/wget-1.16.2.tar.gz -o wget.tgz 限速下载 1# wget --limit-rate=300k http://ftp.gnu.org/gnu/wget/wget-1.16.2.tar.gz 断点续传 1# wget -c http://ftp.gnu.org/gnu/wget/wget-1.16.2.tar.gz 后台下载 1# wget -b http://ftp.gnu.org/gnu/wget/wget-1.16.2.tar.gz 测试下载链接 1# wget --spider http://ftp.gnu.org/gnu/wget/wget-1.16.2.tar.gz 复制整个网站（镜像） 1# wget --mirror --convert-links http://exampledomain.com 访问需要认证的HTTP或FTP页面 1# wget --user username --password pass URL 指定目录下载 1# wget -P /home/download http://ftp.gnu.org/gnu/wget/wget-1.16.2.tar.gz 下载目录中的所有文件 12345678910# wget -r -np -nd http://mirrors.163.com/centos/6/isos/x86_64/# wget -r -p -np -k http://mirrors.163.com/centos/6/isos/x86_64/参数说明：-r, --recursive 递归下载-k, --convert-links 让下载得到的 HTML 或 CSS 中的链接指向本地文件-m, --mirror -N -r -l inf --no-remove-listing 的缩写形式-np, --no-parent 不追溯至父目录-nd, --no-directories 不创建目录-l, --level=NUMBER 最大递归深度 (inf 或 0 代表无限制，即全部下载)-c, --continue 断点续传下载文件]]></content>
      <categories>
        <category>linux-basic</category>
      </categories>
      <tags>
        <tag>linux-basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux系统相关命令]]></title>
    <url>%2F2018%2F06%2F10%2Flinux-system%2F</url>
    <content type="text"><![CDATA[本文主要介绍Linux系统相关命令，比如关机，查看硬件信息等。 1. 关机命令12345678# shutdown -h now 关机# init 0 关机# telinit 0 关机# # shutdown -h hours:minutes &amp; 按预定时间关机# shutdown -c 取消按预定时间关闭系统# shutdown -r now 重启 # reboot 重启 # logout 注销 2. 硬件相关12345# dmidecode -q 硬件相关信息 # hdparm -tT /dev/sda 在磁盘上执行测试性读取操作 # lscpu 查看CPU# lspci 查看主板# lsblk 查看磁盘分区 3. 网络命令 ifconfig命令 12345678# ifconfig 显示一个以太网卡的配置，常用选项：# ifconfig eth0# ifconfig eth0 down# ifconfig eth0 up# ifconfig eth0 192.168.1.99 broadcast 192.168.1.255 netmask 255.255.255.0# ifconfig eth0:0 192.168.1.100 netmask 255.255.255.0 添加虚拟网卡# ifup eth0 启用一个 'eth0' 网络设备 # ifdown eth0 禁用一个 'eth0' 网络设备 ip命令 12345678910# ip 网络配置工具，常用选项：# ip a# ip addr show# ip addr show dev eth0 查看服务器ip地址# ip -s link list# ip -s link ls eth0 查看接口统计(ethtool -S eth0)# ip route list 查看路由表# ip neigh list 查看邻居表（arp -an）# ip addr add 192.168.0.215/24 label eth0:1 dev eth0 添加虚拟网卡# ip addr del 192.168.0.215/24 label eth0:1 dev eth0 删除虚拟网卡 netstat命令 12345# netstat -an | grep LISTEN -a 显示所有socket，包括正在监听的, -n 以网络IP地址代替名称# netstat -ntlup 查看系统网络的状态信息，t=tcp，u=udp，p=程序名称，l=监听# netstat -s 按照各个协议分别显示其统计数据# netstat -i 显示网卡接口信息# netstat –r 显示关于路由表的信息(rount -n) 4. 系统监控和性能分析命令 iostat命令 12345# iostat 直接运行，显示所有设备负载情况# iostat 2 3 每2秒显示一次，总共显示3次# iostat -c 查看cpu# iostat -d 查看磁盘# iostat -d -x 1 x参数是详细信息 vmstat命令 123# vmstat 虚拟内存统计# vmstat 2 2 每2秒显示一次，总共显示2次# vmstat 2 2 -S m -S参数是单位，可以是k、m等 free命令 123# free 查看内存# free -m -m是单位# free -m -s 2 -s是时间，每2秒查看一次 dstat命令 12345# dstat 信息统计工具# dstat -n n是net# dstat -d d是disk# dstat -m m是memory# dstat -l l是load average 显示系统负载情况]]></content>
      <categories>
        <category>linux-basic</category>
      </categories>
      <tags>
        <tag>linux-basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux进程管理]]></title>
    <url>%2F2018%2F06%2F10%2Flinux-process%2F</url>
    <content type="text"><![CDATA[本文主要介绍Linux进程相关的命令，ps、kill、top等。 1. ps命令ps常规用法 12345678910111213141516# ps aux 查看所有进程# ps -ef 查看所有进程# ps -f -u apache 查看某个用户的进程# ps -f -C httpd 通过进程名显示进程# ps -f -p 3150,7298,6544 通过进程id显示进程# ps aux --sort=-pcpu,+pmem 以cpu使用量排序，如果cpu使用量相同，则以内存使用量排序# ps -f --forest -C httpd 显示ASCII进程树# ps -o pid,uname,comm -C httpd 显示父进程的子进程# ps -o pid,uname,comm --ppid 3438 # ps -e -o pid,comm,etime 显示进程已运行的时间# watch -n 1 'ps -e -o pid,uname,cmd,pmem,pcpu --sort=-pmem,-pcpu | head -15'还有一个pstree命令# pstree# pstree -a# pstree -p apache 2. top相关命令 top命令 123# top# top -b -n 1# top -b -n 1 -p 1 htop命令 123456# yum install htop -y 没有htop命令就安装# htop# htop -d 2 2秒刷新一次# htop -C 没有颜色# htop -u apache u=user# htop -p xxx，xxx p=pid dstat 命令 12345# dstat 直接运行# dstat -n n是net# dstat -d d是disk# dstat -m m是memory# dstat -l l是load average 显示系统负载情况 glances命令 123456789# yum install epel-release -y# yum install glances -y 没有glances命令就安装# glances# glances -t 2 刷新频率2秒，默认是1秒# yum install python-jinja2 -y# glances -o csv -f glances.csv 输出为csv格式# glances -o HTML -f /var/www/html/ 输出为html格式# glances -s -B 192.168.1.153 -p 4000 -P123 在服务器端启动# glances -c 192.168.1.153 -p 4000 -P123 再客户端连接 3. kill命令发送指定的信号到相应进程。 12# kill -l 查看有那些信号# kill -9 xxx 给xxx进程发生9号信号 查找进程PID的命令 12345# ps -ef | grep httpd# pstree -p apache# pidof httpd# pgrep httpd# lsof /usr/sbin/httpd 杀死进程的命令 1234# kill -9 pid# killall httpd# pkill httpd# skill httpd 4 . 前台进程和后台进程(1)command &amp;让进程在后台运行(2) jobs –l 查看后台运行的进程(3)fg %n 让后台运行的进程n到前台来(4)bg %n 让进程n到后台去 123456# glances -s -B 127.0.0.1 &amp;# glances -s -B 127.0.0.1 暂停程序运行CTRL+Z# jobs -l 查看暂停的程序# bg %1 切换程序至后台# fg %1 切换程序至前台# kill %1 终止后台程序]]></content>
      <categories>
        <category>linux-basic</category>
      </categories>
      <tags>
        <tag>linux-basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux文本文件处理(4)]]></title>
    <url>%2F2018%2F06%2F10%2Flinux-sed%2F</url>
    <content type="text"><![CDATA[本文主要介绍sed命令的用法。 1. awk简介Sed：Stream Editor 流式编辑器 又称行编辑器，每次只编辑一行。 2. 基本用法1# sed [OPTION]... &#123;script-only-if-no-other-script&#125; [input-file]... 选项与参数：-n：只显示sed匹配到的行。其余行不显示。-i：可以直接操作原文件。默认情况下sed不会改变原文件，但是-i选项可以修改原文件，此选项应慎用。-r：可以使用标准正则表达式。默认情况下sed只支持基本正则表达式，但是加上-r选项后则支持扩展正则表达式-e：可以同时执行多个命令常用格式：(1)Sed [options] ‘script’ input_file……(2)Sed [options] -f script_file input_file……(3)Sed [options] ‘ADDR1,ADDR2command’ input_file……(4)Sed [options] ‘/PATTERN/command’ input_file……(5)Sed ‘/PATTERN1/,/PATTERN2/command’ input_file…… 常用命令(command)如下： 打印p 123456789101112131415161718192021222324252627282930# sed -n '3p' /etc/passwd --打印第3行# sed -n '1,3p' /etc/passwd --打印第1到第3行# sed -n '1,$p' /etc/passwd# nl /etc/passwd | sed -n '5,7p' --打印第5到第7行# head -5 /etc/passwd |sed -ne '1p;4p' --打印第1行和第4行# nl /etc/passwd | sed -n '/root/p' --查找包含root的行# cat /etc/passwd | sed -n '/^root/p'# ifconfig eth1 | sed -n '2p' | awk -F: '&#123;print $2&#125;' | awk '&#123;print $1&#125;' --截取ip# head -5 /etc/passwd |sed -ne '/^[[:upper:]]/p;/^[a-z]/p' --分别打印大写字母开头的行和小写字母开头的行# head -5 /etc/passwd |sed -ne '/^[[:upper:]]/,/^[a-z]/p' --用正则表达式实现范围打印# head -5 /etc/passwd |sed -ne '/^[[:upper:]]/,/nologin$/p'# head -5 /etc/passwd |sed -n '/^[^[:blank:]]/p' --打印非空格开头的行下面三条都是把有Accepted关键字的行打印出来# awk '$0~"Accepted" &#123;print $0&#125;' /var/log/ssh.log # sed -n '/Accepted/p' /var/log/ssh.log # cat /var/log/ssh.log | grep Accepted比较awk# head -5 /etc/passwd |cat -n | sed -n '1,4p'# head -5 /etc/passwd |cat -n | awk 'NR&lt;5 &#123;print $0&#125;'# head -5 /etc/passwd |cat -n | sed -n '1p;3p;5p'# head -5 /etc/passwd |cat -n | awk 'NR==1 || NR==3 || NR==5 &#123;print $0&#125;'# head -5 /etc/passwd |cat -n | sed -n '/root/p;/daemon/p;/lp/p'# head -5 /etc/passwd |cat -n | awk '$0~"root" || $0~"daemon" || $0~"lp" &#123;print $0&#125;' 删除esed删除语法：sed ‘范围d’ file以行为单位删除，如果不指定范围，默认范围是整个文件。 123456789101112131415161718# sed '1d' /etc/passwd 删除第一行，第二行2d，第三行3d，以此类推，最后一行$d# sed '1,3d' /etc/passwd 删除第1行到第3行，中间是逗号# sed '1d;3d' /etc/passwd 删除第1行和第3行，中间是分号# sed -e '1d' -e '3d' /etc/passwd 删除第1行和第3行# sed --expression='1d' --expression='3d' /etc/passwd# sed '/^root/d' /etc/passwd 使用正则表达式，要加双斜杠# sed '/root/,/sync/d' /etc/passwd 删除包含root到sync的行# sed '/root/!d' /etc/passwd !表示后面的命令对所有没有被选定的行发生作用 # head -n 5 /etc/passwd |cat -n |sed '2d' 指定删除第二行# head -n 5 /etc/passwd |cat -n |sed '2,3d' 删除第二行到第三行，中间为逗号，表示范围# head -n 5 /etc/passwd |cat -n |sed '1d;5d' 删除第一行和第五行，中间为分号，表示单独操作# head -n 5 /etc/passwd |cat -n |sed '1d;5d;3d'# head -n 5 /etc/passwd |cat -n |sed '1,3d;5d'# head -5 /etc/passwd |sed '/daemon/d'删除vsftpd.conf里所有的注释和空行# sed '/^#/d;/^$/d' /etc/vsftpd/vsftpd.conf 替换sed替换语法：sed ‘范围 s/老字符/新字符/标记’ filesed ‘范围 s#老字符#新字符#标记’ file如果不指定范围，默认范围是整个文件。sed ‘y/老字符/新字符/‘ 12345678# head -5 /etc/passwd | nl |sed '1,4s/nologin/NOLOGIN/g'# sed 's#nologin#NOLOGIN#g' /etc/passwd g是标记，表示全部，也可以使用数字，1,2,3等进行替换，#号只有替换的时候才能用# sed 's/nologin/NOLOGIN/g' /etc/passwd# sed '1s/root/--&amp;--/2' /etc/passwd 老字符支持正则表达式，新字符不支持正则表达式，除了"\n\&amp;"，这里的"&amp;"表示前面的关键字# sed '1&#123;s/root/ROOT/;s/bin/BIN/&#125;' /etc/passwd 多次替换使用花括号和分号# sed 'y/abc/xyz/' file y也是替换，a-&gt;x b-&gt;y c-&gt;z# cat /etc/sysconfig/network-scripts/ifcfg-eth0 | sed '/^onboot/c\onboot=yes' 将onboot开头的行替换成onboot=yes，行替换# cat /etc/sysconfig/network-scripts/ifcfg-eth0 | sed 's/ONBOOT="no"/ONBOOT="yes"/' 修改之后保存 1# sed -i '/^root/a\the first line' file --修改源文件的操作要谨慎]]></content>
      <categories>
        <category>linux-basic</category>
      </categories>
      <tags>
        <tag>linux-basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux文本文件处理(3)]]></title>
    <url>%2F2018%2F06%2F09%2Flinux-awk%2F</url>
    <content type="text"><![CDATA[本文主要介绍awk命令的用法。 1. awk简介awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk。awk名字来源于三位创造者Aho、Weinberger和Kernighan统称。awk擅长处理文本数据。 2. 基本用法awk [-Ffs] [-v var=value] [program | -f progfile …] [file …]选项与参数：-F 指定域分隔符，例如：-F “|”，即以|作为域分隔符，默认分隔符为一个或多个空格或TAB，即”[[:space:]][[:space:]]*”。-v 定义变量，从shell给awk传递变量，如-vDATE=$DATE，即将shell中$DATE变量值传递给awk变量DATE。-f 指定脚本文件，例如-f progfile。program 操作模块 示例： 123456# awk -F ":" '&#123;print $1,$2&#125;' /etc/passwd -F 分隔符 $1是第一列 $2是第二列# awk '&#123;print $0&#125;' /etc/passwd 打印所有列# awk -F: '&#123;print $1&#125;' /etc/passwd 打印第一列# awk -F: '&#123;print $1"\thaha\t"$3&#125;' /etc/passwd 打印第一，三列# awk -F":" '&#123;print $1" 的uid是 "$3&#125;' /etc/passwd# echo "haha,hehe.heihei" |awk -F"[,.]" '&#123;print $1&#125;' 分隔符可以有多个 模式匹配格式：awk ‘/patten/ {action} ‘ filename //纯字符匹配 !//纯字符不匹配 ~//字段值匹配 !~//字段值不匹配 ~/a1|a2/字段值匹配a1或a2 123456789101112131415# awk '/mysql/' /etc/passwd# awk '/mysql/&#123;print &#125;' /etc/passwd# awk '/mysql/&#123;print $0&#125;' /etc/passwd --三条指令结果一样# awk '!/mysql/&#123;print $0&#125;' /etc/passwd --输出不匹配mysql的行# awk '/mysql|mail/&#123;print&#125;' /etc/passwd# awk '/mysql|postfix|root/' /etc/passwd# awk '!/mysql|mail/&#123;print&#125;' /etc/passwd# awk '/mail/,/mysql/&#123;print&#125;' /etc/passwd --区间匹配# awk '/^root/,/^mail/' /etc/passwd --区间匹配# awk '/[2][7][7]*/&#123;print $0&#125;' /etc/passwd --匹配包含27为数字开头的行，如27，277，2777...# awk -F: '$1~/mail/&#123;print $1&#125;' /etc/passwd --$1匹配指定内容才显示# awk -F: '$3~/^0$/&#123;print $1&#125;' /etc/passwd# awk -F: '&#123;if($1~/mail/) print $1&#125;' /etc/passwd --与上面相同# awk -F: '$1!~/mail/&#123;print $1&#125;' /etc/passwd --不匹配# awk -F: '$1!~/mail|mysql/&#123;print $1&#125;' /etc/passwd 操作模块 awk [-Ffs] ‘BEGIN {处理文件前执行的代码块} ｛处理文件过程中执行的代码块} END {处理文件后执行的代码块}’ filename BEGIN｛｝｛ ｝END｛｝ BEGIN和END只执行一次。 12345678910111213# awk -F: '&#123;print "用户名\t\tUID"&#125;&#123;print $1"\t"$3&#125;' /etc/passwd# awk -F: 'BEGIN&#123;print "用户名\t\tUID"&#125;&#123;print $1"\t"$3&#125;' /etc/passwd# head -1 /etc/passwd |awk -F: '&#123;print $7":"$6":"$5":"$4":"$3":"$2":"$1&#125;'# head -1 /etc/passwd |awk -F: 'BEGIN &#123;OFS=":"&#125;&#123;print $7,$6,$5,$4,$3,$2,$1&#125;'# head -1 /etc/passwd | awk 'BEGIN&#123;FS=":"&#125;&#123;OFS="@"; print $7,$6,$5,$4,$3,$2,$1&#125;'# head -1 /etc/passwd | awk 'BEGIN&#123;FS=":";OFS="#"&#125;&#123;print $7,$6,$5,$4,$3,$2,$1&#125;'awk可以用做小数（浮点数）的运算# echo $[1.23*2] --错误做法# echo |awk '&#123;print 1.23*2&#125;' --正确做法# echo 1.23*2 | bc --正确做法# awk 'BEGIN&#123;print 1.23*2&#125;' 内置变量 属性 说明 $0 当前记录行，代表一行记录 $1到n 当前记录的第n个字段，字段间由FS分隔 FS 输入字段分隔符，默认是空格或tab NF 当前记录中的字段个数，就是有多少列，一般取最后一列字段 NR 已经读出的记录数，就是行号，从1开始 RS 输入的记录分隔符，默认为换行符 OFS 输出字段分隔符，默是空格 ORS 输出的记录分隔符，默认为换行符 示例 1234567891011121314151617打印第五行# head -5 /etc/passwd |tail -1# awk 'NR==5 &#123;print $0&#125;' /etc/passwd# awk '&#123;if (NR==5) print $0&#125;' /etc/passwd打印第五行和第六行# awk 'NR==5 || NR==6 &#123;print $0&#125;' /etc/passwd# awk 'NR&gt;=5 &amp;&amp; NR&lt;=6 &#123;print $0&#125;' /etc/passwd打印五到十行，并在前面加上行号# awk 'NR&lt;=10 &amp;&amp; NR&gt;=5 &#123;print FNR,$0&#125;' /etc/passwd打印奇数行 (删除偶数行)# awk 'NR%2==1 &#123;print FNR,$0&#125;' /etc/passwd打印偶数行 (删除奇数行)# awk 'NR%2==0 &#123;print FNR,$0&#125;' /etc/passwd]]></content>
      <categories>
        <category>linux-basic</category>
      </categories>
      <tags>
        <tag>linux-basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux文本文件处理(2)]]></title>
    <url>%2F2018%2F06%2F09%2Flinux-grep%2F</url>
    <content type="text"><![CDATA[本文主要介绍grep命令的用法。 1. grep的简介文本搜索工具，根据用户指定的文本模式对目标文件进行逐行搜索，显示能够被模式所匹配到的行。配合正则表达式的使用可以实现强大的文本处理。 2. 基础用法1234567# grep [-cinv] [--color=auto] &apos;搜寻字符串&apos; filename选项与参数：-c ：计算找到 &apos;搜寻字符串&apos; 的次数-i ：忽略大小写的不同，所以大小写视为相同-n ：顺便输出行号-v ：反向选择，亦即显示出没有 &apos;搜寻字符串&apos; 内容的那一行！--color=auto ：可以将找到的关键词部分加上颜色的显示喔！ 示例： 123456789101112131415# grep root /etc/passwd# grep -n root /etc/passwd -n:输出行号# grep -c &quot;bash&quot; /etc/passwd -c:个数# grep -v root /etc/passwd -v:反向匹配# echo &quot;hello world&quot; | grep -i &quot;HELLO&quot; -i:忽略大小写# dmesg | grep -n --color=auto &apos;eth&apos; --color颜色高亮# dmesg | grep -n -A3 -B2 --color=auto &apos;eth&apos; -A -B -C 将匹配到的那一行的前面后面的行显示出来# cat patfile bash nologin# grep -f patfile /etc/passwd --color -f:文件# grep &quot;root&quot; / -r --color=auto -r:递归# grep &quot;main()&quot; . -r --include *.&#123;php,html&#125; --include:包含# grep &quot;main()&quot; . -r --exclude &quot;README&quot; --exclude:不包含# grep &quot;main()&quot; . -r --exclude-from filelist 3. 正则表达式1234567891011121314151617181920212223242526. 单个字符^ 开始$ 结尾* 匹配零个或多个先前字符[] 匹配一个指定范围内的字符[^] 匹配一个不在指定范围内的字符x\&#123;m\&#125; 重复字符x，m次，如：&apos;0\&#123;5\&#125;&apos;匹配包含5个o的行x\&#123;m,\&#125; 重复字符x,至少m次，如：&apos;o\&#123;5,\&#125;&apos;匹配至少有5个o的行w 匹配文字和数字字符，也就是[A-Za-z0-9]W w的反置形式，匹配一个或多个非单词字符，如点号句号等+ 匹配一个或多个先前的字符? 匹配零个或多个先前的字符a|b|c 匹配a或b或cx&#123;m&#125;,x&#123;m,&#125;,x&#123;m,n&#125; 作用同x\&#123;m\&#125;,x\&#123;m,\&#125;,x\&#123;m,n\&#125;[:alnum:] 文字数字字符[:alpha:] 文字字符[:digit:] 数字字符[:graph:] 非空字符（非空格、控制字符）[:lower:] 小写字符[:cntrl:] 控制字符[:print:] 非空字符（包括空格）[:punct:] 标点符号[:space:] 所有空白字符（新行，空格，制表符）[:upper:] 大写字符[:xdigit:] 十六进制数字（0-9，a-f，A-F） 示例： 1234567891011# grep -E &apos;r..t&apos; /etc/passwd --color# grep -E &apos;r.*t&apos; /etc/passwd --color# grep -E &apos;r.+t&apos; /etc/passwd --color# cat /etc/httpd/conf/httpd.conf | grep -v &apos;^#&apos; | grep -v &apos;^$&apos;# cat /etc/httpd/conf/httpd.conf | grep -v -e &apos;^#&apos; -e &apos;^$&apos;# cat /etc/httpd/conf/httpd.conf | grep -v -E &apos;#|^$&apos;# grep -E &apos;[io]n&apos; /etc/passwd --color# grep -E &apos;[^io]n&apos; /etc/passwd --color# grep &apos;ro\&#123;2\&#125;&apos; /etc/passwd --color 不要加-E# grep &apos;ro\&#123;1,\&#125;&apos; /etc/passwd --color 贪婪模式，尽可能多的匹配# grep &apos;ro\&#123;1,3\&#125;&apos; /etc/passwd --color 至少1次，最多3次]]></content>
      <categories>
        <category>linux-basic</category>
      </categories>
      <tags>
        <tag>linux-basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux文本文件处理(1)]]></title>
    <url>%2F2018%2F06%2F08%2Flinux-text%2F</url>
    <content type="text"><![CDATA[本文主要介绍Linux下文本文件的查看等操作相关的命令。 1. 文本文件查看命令cat命令 查看文件内容123cat 1.txt 查看文本文件内容cat -n 1.txt 显示行号，空行也算一行cat -nb 1.txt 显示行号，空行忽略 head命令 显示文件前十行的内容(默认)123head 1.txthead -n 20 1.txt 显示文件前20行的内容head -20 1.txt 显示文件前20行的内容 tail命令 查看文件最后十行的内容(默认)1234tail -n 5 1.txt 最后5行tail -5 1.txt 最后5行tail -f 1.txt 动态查看文件内容tailf 1.txt 动态查看文件内容 more命令 分页显示1more 1.txt less命令 分页显示1less 1.txt tac命令 文件内容的输出上下反，不影响源文件1tac 1.txt tac 反过来 cat rev命令 左右反，不影响源文件1rev 1.txt tee命令 将数据重定向到文件和标准输出12ls | tee out.txtls | tee out.txt | cat -n 2. 其他命令wc命令 字符统计123cat /etc/passwd | wc -lcat /etc/passwd | wc -ccat /etc/passwd | wc -w cut命令123who|cut -b 3-5cut -f2 -d&quot;;&quot; test2.txt -d分隔符是&quot;:&quot;，-f是列 cut -f2 --complement test.txt --complement 选项提取指定字段之外的列 tr命令1234567echo &quot;HELLO WORLD&quot; | tr &apos;A-Z&apos; &apos;a-z&apos; 将输入字符由大写转换为小写hello worldecho &quot;hello 123 world 456&quot; | tr -d &apos;0-9&apos; 使用tr删除字符hello world cat text | tr &apos;\t&apos; &apos; &apos; 将制表符转换为空格 sort命令 排序1sort -t &apos; &apos; -k 1.2 facebook.txt uniq命令 忽略文件中的重复行12sort file.txt | uniq sort -u file.txt]]></content>
      <categories>
        <category>linux-basic</category>
      </categories>
      <tags>
        <tag>linux-basic</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[yum命令详解]]></title>
    <url>%2F2018%2F06%2F08%2Flinux-yum%2F</url>
    <content type="text"><![CDATA[本文主要介绍centos系统程序包管理软件Yum命令的详细使用方法。Yum软件包管理方式，在Red Hat,Fedora,CentOS等发行版本上运用广泛。 1. Yum的工作机制将诸多程序的包信息和头文件提取出来，放到一个集中的地方，记录其依赖关系。在下次安装的时候，均于存储的库文件查找相应的对应关系，再安装所依赖的软件程序。 2. Yum配置文件主配置文件：/etc/yum.conf12345678[main]：主名称，固定名称cachedir=/var/cache/yum/$basearch/$releasever 缓存目录keepcache=0 是否保存缓存debuglevel=2 调试级别exactarch=1 是否做精确严格的平台匹配gpgcheck=1 检查来源法性和完整性plugins=1 是否支持插件installonly_limit=4 同时安装几个 子配置文件：/etc/yum.repos.d/*.repo12345678910111213141516[repository ID] ：ID名称，即仓库名称，不可与其他ID重命name= (对ID名称的说明)baserul=URL1URL2URL3 （如果同一个源有多个镜像，可以在此我写几个，但每个URL需换行）mirrorlist= (有一台服务器在网络上，保存了多个baseurl，如果使用这项，就不使用baseurl项）enabled=&#123;1|0&#125;gpgcheck=&#123;1|0&#125;repo_gpgcheck= (检查仓库的元数据的签名信息)gpgkey=URL (gpg密钥文件）enablegroups= &#123;1|0&#125;&#125; (是否在此仓库中上使用组来指管理程序包)failovermethod= roundrobin|priority (对多个baseurl做优先级的，roundrobin为轮循，priority为优先级，默认为轮循，意为随机）keepalive= (如果对方是http 1.0是否要保持连接)username= (yum的验证用户)password= (yum的验证用户密码)cost= (默认baseurl都为1000) Yum仓库的配置文件示例12345678[epel]name=Extra Packages for Enterprise Linux 6 - $basearch#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearchmirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearchfailovermethod=priorityenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6 其中使用了变量$releasever:当前os的发行版本的主版本号$arch:平台$basearch:基础平台 3. 常用的国内Yum源 中科大http://mirrors.ustc.edu.cn/centos/CentOS-Base.5.mirrors.repohttp://mirrors.ustc.edu.cn/centos/6/os/x86_64/ 搜狐http://mirrors.sohu.com/help/CentOS-Base-sohu.repohttp://mirrors.sohu.com/centos/6/os/x86_64/ REMIhttp://rpms.remirepo.net/ REMI网站https://mirrors.tuna.tsinghua.edu.cn/remi/ REMI中国镜像http://rpms.remirepo.net/enterprise/http://rpms.remirepo.net/enterprise/remi-release-6.rpm 163源http://mirrors.163.com/centos/ 阿里云https://opsx.alibaba.com/mirror 中国科技大学http://centos.ustc.edu.cn/centos/ rpm包常用下载地址https://centos.pkgs.org/http://rpmfind.net/http://dl.fedoraproject.org/pub/epel/ 4. 制作Yum源上面介绍的都是网络上做好的yum源，我们也可以自己来制作yum源。 本地光盘源 123456789mkdir /media/cdrommount /dev/cdrom /media/cdrom/cd /etc/yum.repos.d/vim cdrom.repo[cdrom]name=cdrom repolistbaseurl=file:///media/cdrom/gpgcheck=0enabled=1 文件夹源 1234567891011mkdir /yumyum -y install createrepomv *.rpm /yumcreaterepo /yumcd /etc/yum.repos.d/vim cdrom.repo[local]name=local directory repolistbaseurl=file:///media/cdrom/gpgcheck=0enabled=1 网络yum源 123yum install httpd -yln -s /yum /var/www/html/service httpd start 添加新的yum源：yum install yum-utils -yyum-config-manager –add-repo=file:///yum/ 5. yum命令使用安装软件1yum install packagename 升级软件1yum update packagename 卸载软件1yum remove packagename 搜索已安装软件包1yum search keyword 查看软件包额外信息1yum info packagename 查看可安装的软件包1yum list | less 列出已安装软件包1yum list installed | less 显示仓库的所有程序包1yum list 查看特定文件属于哪个软件包1yum provides /etc/sysconfig/nfs 列出可获得的软件组1yum grouplist 安装某个特定软件组1yum groupinstall 升级软件组1yum groupupdate &apos;Graphical Internet&apos; 卸载软件组1yum groupremove &apos;DNS Name Server&apos; 列出当前yum软件源1yum repolist 查看yum安装的历史123yum historyyum history info 3yum history undo 4 安装及升级本地程序包12yum localinstall rpmfile1yum localupdate rpmfile1]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Centos下Yum安装PHP5.5、PHP5.6、PHP7.0]]></title>
    <url>%2F2018%2F06%2F08%2Flinux-php-version%2F</url>
    <content type="text"><![CDATA[本文主要介绍centos系统上如何升级php的版本。Centos系统默认有php，但是默认的版本太低，手动安装有一些麻烦，于是使用Yum来安装。 1. 检查当前安装的PHP包1yum list installed | grep php 如果已经安装PHP的包，先卸载掉。1yum remove php.x86_64 php-cli.x86_64 php-common.x86_64 php-gd.x86_64 php-ldap.x86_64 php-mbstring.x86_64 php-mcrypt.x86_64 php-mysql.x86_64 php-pdo.x86_64 2. 安装新的Yum源Centos 5.x1rpm -Uvh http://mirror.webtatic.com/yum/el5/latest.rpm CentOs 6.x1rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm CentOs 7.x12rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm 3. 安装PHP1yum install php55w.x86_64 php55w-cli.x86_64 php55w-common.x86_64 php55w-gd.x86_64 php55w-ldap.x86_64 php55w-mbstring.x86_64 php55w-mcrypt.x86_64 php55w-mysql.x86_64 php55w-pdo.x86_64 1yum install php56w.x86_64 php56w-cli.x86_64 php56w-common.x86_64 php56w-gd.x86_64 php56w-ldap.x86_64 php56w-mbstring.x86_64 php56w-mcrypt.x86_64 php56w-mysql.x86_64 php56w-pdo.x86_64 1yum install php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64 php70w-mysql.x86_64 php70w-pdo.x86_64 4. 安装PHP FPM123yum install php55w-fpmyum install php56w-fpmyum install php70w-fpm]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux基础02篇]]></title>
    <url>%2F2018%2F06%2F08%2Flinux-basic-02%2F</url>
    <content type="text"><![CDATA[本文主要介绍文件系统、文件权限、文件打包和解包及软件包管理方面的命令。 1. 文件系统 磁盘分区磁盘分区主要使用fdisk（sfdisk）命令和parted命令。 1234# sfdisk-l# sfdisk-s# cfdisk-Ps# fdisk -l 格式化mkfs命令 12# mkfs.ext4# mfks -t ext4 /dev/sda6 挂载mount命令 123# mount /dev/sda5 /test# mount /soft/rhel-server-6.3-x86_64-dvd.iso /yum/ -o loop# mount -o remount,noexec / 查看磁盘 12345678# df –h 显示已经挂载的分区列表# df –T 显示分区列表的文件系统类型# du -sh dir1 估算目录 'dir1' 已经使用的磁盘空间# fsck 文件系统修复# dumpe2fs /dev/sda1 显示磁盘状态# findmnt 查找已经被挂载的文件系统# blkid# 2. 文件权限 基本的权限-rw——- 1 root root 1112 Mar 27 03:14 anaconda-ks.cfgrw- — — 权限用九位来表示前三位代表用户u(user），中间三位代表组g(group），后三位代表o（others）基本权限有三种 r(read)读 w(write)写 x(execute)执行 a表示allr 读权限 针对目录，有r权限，就代表能对此目录有列表的功能 (就是ls列出来的功能） 针对文件，有r权限，就代表能对此文件有阅读的功能 (就是指cat一类的命令）w 写权限 针对目录，有w权限，就代表在此目录下创建文件或者子目录 (touch,mkdir等） 针对文件，有w权限，就代表能在此文件写入内容或者修改 (&gt; ,&gt;&gt;, vi 再写等）x 执行权限 针对目录，有x权限，就代表能进入此目录 （cd) 针对文件，有x权限，就代表能执行它 （命令，可执行文件等）1234567# chmod a+x 1.txt# chmod g+x 1.txt# chmod a+x 1.txt# chmod a-r 1.txt# chmod o-rwx 1.txt # chmod u-w,g+x,o+x abc --也可以一次性连写# chmod o=rwx 1.txt rw- — —110 000 000 –二进制 600 –十进制 权限用数字来表示 (r,w,x都可以用数字来表示）r 4w 2x 1 -rw-r–r– 这个以数字表示为644 修改文件所有者和组123456789101112# touch 1.txt# ll 1.txt -rw-r--r-- 1 root root 0 Aug 20 15:28 1.txt# chown user2.user2 1.txt # ll 1.txt -rw-r--r-- 1 user2 user2 0 Aug 20 15:28 1.txt# chown user3:user3 1.txt # ll 1.txt -rw-r--r-- 1 user3 user3 0 Aug 20 15:28 1.txt# chown user2:user3 1.txt # ll 1.txt -rw-r--r-- 1 user2 user3 0 Aug 20 15:28 1.txt 特殊权限s权限：一个可执行文件拥有s位时，当别的用户来执行这个可执行文件的话，使用的权限是此可执行文件属主或者属组的权限只针对前三位，中间三位。对目录可以加，但是无效，因为目录不是命令，根本不能执行它12345678910# ll /usr/bin/passwd-rwsr-xr-x. 1 root root 30768 Feb 17 2012 /usr/bin/passwd# ll /etc/shadow----------. 1 root root 1434 Jul 17 09:27 /etc/shadow``` t权限，只针对目录有效有t位的目录，任何用户在有权限的情况下是可以创建文件和目录，但是自己只能删除自己创建的目录。```markdown# ll -d /tmp/ s位和t位注意的地方：用数字表示前三位上加s 4中间三位加s 2后三位加t 1 s位和t位大小写的区别小写的话就表示 有x执行权限大写的话就表示 没有x执行权限 隐藏属性12345678# chattr +a file1 只允许以追加方式读写文件# chattr +c file1 允许这个文件能被内核自动压缩/解压# chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件# chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接# chattr +s file1 允许一个文件被安全地删除# chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘# chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件# lsattr 显示特殊的属性 3.文件打包和解包示例：123456789101112# tar -cvf archive.tar file1 创建一个非压缩的 tarball# tar -cvf archive.tar file1 file2 dir1 创建一个包含了 'file1', 'file2' 以及 'dir1'的档案文件# tar -tf archive.tar 显示一个包中的内容# tar -xvf archive.tar 释放一个包# tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下# tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包# tar -xvfj archive.tar.bz2 解压一个bzip2格式的压缩包# tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包# tar -xvfz archive.tar.gz 解压一个gzip格式的压缩包# zip file1.zip file1 创建一个zip格式的压缩包# zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包# unzip file1.zip 解压一个zip格式压缩包 4. 软件包管理 rpm包管理 1234567891011121314# rpm -ivh package.rpm 安装一个rpm包# rpm -ivh --nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告# rpm -U package.rpm 更新一个rpm包但不改变其配置文件# rpm -e package_name.rpm 删除一个rpm包# rpm -qa 显示系统中所有已经安装的rpm包# rpm -qa | grep httpd 显示所有名称中包含 "httpd" 字样的rpm包# rpm -qi package_name 获取一个已安装包的特殊信息# rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表# rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表# rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供# rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表# rpm --import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书# rpmbuild --rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包# yum管理工具 123456789# yum install package_name 下载并安装一个rpm包# yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系# yum update package_name.rpm 更新当前系统中所有安装的rpm包# yum update package_name 更新一个rpm包# yum remove package_name 删除一个rpm包# yum list 列出当前系统中安装的所有包# yum search package_name 在rpm仓库中搜寻软件包# yum clean packages 清理rpm缓存删除下载的包# yum clean all 删除所有缓存的包]]></content>
      <categories>
        <category>linux-basic</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux基础01篇]]></title>
    <url>%2F2018%2F06%2F07%2Flinux-basic-01%2F</url>
    <content type="text"><![CDATA[本文主要介绍文件和目录、文件搜素相关的命令。 1. 文件和目录 cd命令 123456789cd /进入系统根目录# cd /cd /home进入根下的home目录# cd /homecd ..进入当前目录的上一级目录# cd ..cd -进入上次所在的目录# cd - ls和pwd命令 12345ls注意ls的参数# ls -a -l -d -hpwd显示当前工作路径# pwd mkdir命令 1234mkdir /test在根目录下创建test目录# mkdir /testmkdir -p /a/b/c/d创建多级目录，-p参数是不报错的# mkdir -p /a/b/c/d cp命令 1234cp file1 file2复制一个文件# cp a.txt b.txtcp -ar dir1 dir2 复制一个目录# cp -ar /abc /test mv命令 1234mv /opt/a /root/移动文件# mv /opt/a /root/mv /opt/a /root/移动文件# mv /opt/a /root/b touch命令 1234567touch 1.txt创建文件# touch 1.txt# touch &#123;a..z&#125;# touch &#123;a..z..2&#125;# touch a&#123;1..5&#125;# touch a&#123;1..5&#125;.txt# touch &#123;1..5&#125;&#123;a..f&#125; file命令 12查看文件的类型# file /dev/sda tree命令 123显示文件和目录由根目录开始的树形结构# yum install tree# tree –L 1 2. 文件搜素 whereis和which命令 123查找二进制文件# which cat# whereis whereis find命令 按名称查找1234# find /etc/ -name grub.conf# find /etc/ -name "*.conf"# find /etc/ -name ".*"# find /test/ -iname Abc 按类型查找1234567# find / -type f# find / -type b# find / -type s# find / -type c# find / -type p# find / -type d# find / -type l 按大小查找123456# find / -size +500M# find / -size +1G# find / -size +50k# find / -size -1M# find / -size +3c# find / -size +80M -size -100M 按时间查找123456789101112131415# stat 1 |tail -3Access: 2014-07-23 11:56:42.297572398 +0800 --atime 阅读过，用cat,tail,head,more,less命令等或者vi访问过，但没有修改；执行过也会改变Modify: 2014-07-23 11:56:44.836572907 +0800--mtime 修改过内容，用vi修改过或者echo一个值重定向Change: 2014-07-23 11:56:44.856885177 +0800 —ctime 改变过内容，属主，属组，权限，创建软链接，硬链接等找出 3 天”以前”被改动过的文件(&gt; 72 小时)find /var/log/ -mtime +3 -type f找出 3 天内被改动过的文件(0 ~ 72 小时内)find /var/log/ -mtime -3 -type f找出前第 3 天被改动过的文件(72 ~ 96 小时)find /var/log/ -mtime 3 -type ffind /var/log/ -mtime +2 -mtime -4 -type f在20-50天内修改过的文件find ./ -mtime +20 -a -mtime -50 -type f在2018-04-11当天修改的文件find / -type f -newermt '2018-04-11 00:00' -a -not -newermt '2018-04-11 23:56' locate命令 速度快，通过系统带的一个数据库去查找，数据是非实时的。速度快，通过系统带的一个数据库去查找，数据是非实时的。系统每天自动更新一次，是通过时间任务执行的：/etc/cron.daily/mlocate.cron/usr/bin/updatedb主要用来更新数据库，通过crontab自动完成的/usr/bin/locate 查询文件位置/etc/updatedb.confupdatedb的配置文件/var/lib/mlocate/mlocate.db 存放文件信息的文件1# locate passwd]]></content>
      <categories>
        <category>linux-basic</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
</search>
