<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech2k18</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dsxlinux.github.io/"/>
  <updated>2018-09-13T09:59:05.852Z</updated>
  <id>https://dsxlinux.github.io/</id>
  
  <author>
    <name>Dong Shouxin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://dsxlinux.github.io/2018/09/13/linux-live/"/>
    <id>https://dsxlinux.github.io/2018/09/13/linux-live/</id>
    <published>2018-09-13T09:59:05.865Z</published>
    <updated>2018-09-13T09:59:05.852Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html><head>    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">    <meta property="og:title" content="直播地址">    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">    <title>直播</title></head><body><div style="width:100%; height:auto;"><p> 这里是直播的观看地址，可以直接观看，不需要其他播放器的支持。<b style="color:red">请允许您的浏览器支持flash插件。</b>原来使用播放器播放的方式也是可以的。<br><div><div id="id_video_container" style="width:100%; height:auto;"></div><script src="//qzonestyle.gtimg.cn/open/qcloud/video/live/h5/live_connect.js" charset="utf-8"></script><script type="text/javascript">    (function () {        var player = new qcVideo.Player("id_video_container", {            "live_url" : "http://2117.liveplay.myqcloud.com/live/2117_3336024a8a.flv",    "live_url2" : "http://2117.liveplay.myqcloud.com/live/2117_3336024a8a.m3u8",            "width" : 480,            "height" : 320        });    })()</script></div></p></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot;&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux下磁盘分区表的备份和恢复</title>
    <link href="https://dsxlinux.github.io/2018/08/30/partition/"/>
    <id>https://dsxlinux.github.io/2018/08/30/partition/</id>
    <published>2018-08-30T03:55:35.000Z</published>
    <updated>2018-08-30T03:56:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍linux系统下磁盘分区表的备份和恢复方法。<br><a id="more"></a></p><h4 id="1-磁盘分区类型"><a href="#1-磁盘分区类型" class="headerlink" title="1.磁盘分区类型"></a>1.磁盘分区类型</h4><p>最常接触的磁盘分区类型： MBR(Master Boot Record), GPT(Globe Partition Table)和Apple Partition(Mixed分区）。</p><h4 id="2-MBR分区表"><a href="#2-MBR分区表" class="headerlink" title="2.MBR分区表"></a>2.MBR分区表</h4><ul><li>MBR简介</li></ul><p>MBR = Main Boot Record，主引导分区。</p><p>整个硬盘可分为MBR，DBR（Dos Boot Record，Dos引导记录），FAT（File Assign Table，文件分配表 ），BD（Boot Directory，根目录）和数据区。 </p><p>MBR分区表位于硬盘第一个物理扇区（绝对扇区）柱面0，磁头0，扇区1处 。</p><p>MBR的结构：</p><table><thead><tr><th>字节偏移（16进制）</th><th>字节数</th><th>描述</th></tr></thead><tbody><tr><td>00~1BD</td><td>446</td><td>引导代码</td></tr><tr><td>1BE~1CD</td><td>16</td><td>分区表项1</td></tr><tr><td>1CE~1DD</td><td>16</td><td>分区表项2</td></tr><tr><td>1DE~1ED</td><td>16</td><td>分区表项3</td></tr><tr><td>1EE~1FD</td><td>16</td><td>分区表项4</td></tr><tr><td>1FE-1FF</td><td>2</td><td>签名值’55AA’</td></tr></tbody></table><p>MBR总共512 = 446 + 64 + 2</p><ul><li>MBR备份和恢复</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">备份MBR</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=/dev/sda of=/backup/mbr.backup  bs=1  count=512</span></span><br><span class="line">恢复MBR</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=/backup/mbr.backup  of=/dev/sda</span></span><br></pre></td></tr></table></figure><ul><li>备份分区表</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">备份分区表</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=/dev/sda of=/backup/partition_table.bak bs=1 count=64 skip=446</span></span><br><span class="line">恢复分区表</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=/backup/partition_table.bak of=/dev/sda bs=1 seek=446</span></span><br></pre></td></tr></table></figure><h4 id="3-GPT分区表"><a href="#3-GPT分区表" class="headerlink" title="3.GPT分区表"></a>3.GPT分区表</h4><ul><li>GPT简介</li></ul><p>GUID = Globally Unique Identifier，全局唯一标识符，一个随机生成的字符串。</p><p>GPT = GUID Partition Table，GUID分区表 </p><p>GPT是一种新的标准，并在逐渐取代MBR。 </p><p>支持几乎无限个分区数量，限制只在于操作系统——Windows支持最多128个GPT分区。</p><p>MBR磁盘上，分区和启动信息是保存在一起的。如果这部分数据被覆盖或破坏，一切就over了。</p><p>GPT在整个磁盘上保存多个这部分信息的副本， 并可以恢复被破坏的这部分信息。  </p><p>MBR和GPT分区对比：</p><table><thead><tr><th>Basic MBR Disk</th><th>Basic GPT Disk</th></tr></thead><tbody><tr><td>Master Boot Code</td><td>Master Boot Code</td></tr><tr><td>1st Partition Table Entry</td><td>1st Partition Table Entry</td></tr><tr><td>2nd Partition Table Entry</td><td>2nd Partition Table Entry</td></tr><tr><td>3rd Partition Table Entry</td><td>3rd Partition Table Entry</td></tr><tr><td>4th Partition Table Entry</td><td>4th Partition Table Entry</td></tr><tr><td>0x55 AA</td><td>0x55 AA</td></tr><tr><td></td><td>Primary GUID Partition Table Header</td></tr><tr><td></td><td>GUID Partition Entry 1</td></tr><tr><td></td><td>GUID Partition Entry 2</td></tr><tr><td></td><td>GUID Partition Entry n</td></tr><tr><td></td><td>GUID Partition Entry 128</td></tr><tr><td></td><td></td></tr><tr><td></td><td>GUID Partition Entry 1</td></tr><tr><td></td><td>GUID Partition Entry 2</td></tr><tr><td></td><td>GUID Partition Entry n</td></tr><tr><td></td><td>GUID Partition Entry 128</td></tr><tr><td></td><td>Backup GUID Partition Table Header</td></tr></tbody></table><ul><li>GPT备份和还原</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">备份Protective MBR</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=/dev/sda of=gpt-mbr bs=512 count=1</span></span><br><span class="line">恢复Protective MBR</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=gpt-mbr of=/dev/sda bs=512 count=1</span></span><br><span class="line"></span><br><span class="line">备份完整的GPT分区表</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=/dev/sda of=gpt-partition bs=512 count=34</span></span><br><span class="line">恢复完整的GPT分区表</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=gpt--partition of=/dev/sda bs=512 count=34</span></span><br><span class="line"></span><br><span class="line">仅备份GPT头和GPT分区</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=/dev/sda of=gpt-partition bs=512 skip=1 count=33</span></span><br><span class="line">恢复单独的GPT分区信息</span><br><span class="line"><span class="meta">#</span><span class="bash"> dd <span class="keyword">if</span>=gpt-partition of=/dev/sda bs=512 skip=1 seek=1 count=33</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍linux系统下磁盘分区表的备份和恢复方法。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos6搭建Gitlab服务</title>
    <link href="https://dsxlinux.github.io/2018/08/28/gitlab/"/>
    <id>https://dsxlinux.github.io/2018/08/28/gitlab/</id>
    <published>2018-08-28T02:57:42.000Z</published>
    <updated>2018-08-29T01:45:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x搭建Gitlab服务并汉化。<br><a id="more"></a></p><h4 id="1-安装必要的依赖关系"><a href="#1-安装必要的依赖关系" class="headerlink" title="1.安装必要的依赖关系"></a>1.安装必要的依赖关系</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install curl openssh-server openssh-clients postfix cronie</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> service postfix start</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig postfix on</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum -y install lokkit</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> lokkit -s http -s ssh</span></span><br></pre></td></tr></table></figure><h4 id="2-下载并安装"><a href="#2-下载并安装" class="headerlink" title="2.下载并安装"></a>2.下载并安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install gitlab-ce</span></span><br></pre></td></tr></table></figure><p>gitlab-ce是社区版，免费的<br>gitlab-ee是企业版，收费的</p><h4 id="3-配置和启动"><a href="#3-配置和启动" class="headerlink" title="3.配置和启动"></a>3.配置和启动</h4><p>安装完毕后配置URL，gitlab配置文件在/etc/gitlab/gitlab.rb。将external_url修改为你的ip和url。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/gitlab/gitlab.rb </span></span><br><span class="line">external_url 'http://192.168.1.xx/'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> gitlab-ctl reconfigure</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> gitlab-ctl restart</span></span><br></pre></td></tr></table></figure></p><h4 id="4-访问gitlab"><a href="#4-访问gitlab" class="headerlink" title="4.访问gitlab"></a>4.访问gitlab</h4><p>在浏览器打开上面配置的external_url地址。<br>第一次访问要先修改登录密码，默认用户是root。<br>进去之后和github的操作类似，可以创建项目。</p><h4 id="5-汉化"><a href="#5-汉化" class="headerlink" title="5.汉化"></a>5.汉化</h4><p>先查看gitlab版本<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cat /opt/gitlab/embedded/service/gitlab-rails/VERSION</span></span><br><span class="line">11.2.1</span><br></pre></td></tr></table></figure></p><p>下载中文补丁包，下载地址：<a href="https://gitlab.com/xhang/gitlab/tags" target="_blank" rel="noopener">https://gitlab.com/xhang/gitlab/tags</a><br>找到对应版本的下载下来。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ls gitlab-v11.2.1-zh.tar.gz</span></span><br><span class="line">gitlab-v11.2.1-zh.tar.gz</span><br></pre></td></tr></table></figure></p><p>覆盖之前安装的gitlab，完成汉化<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cp -r /opt/gitlab/embedded/service/gitlab-rails&#123;,.ori&#125;//先备份</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tar xf gitlab-v11.2.1-zh.tar.gz</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> \cp -rf gitlab-ce-v11.2.1/* /opt/gitlab/embedded/service/gitlab-rails///覆盖</span></span><br><span class="line">cp: cannot overwrite non-directory `/opt/gitlab/embedded/service/gitlab-rails/log' with directory `gitlab-10-3-stable-zh/log'</span><br><span class="line">cp: cannot overwrite non-directory `/opt/gitlab/embedded/service/gitlab-rails/tmp' with directory `gitlab-10-3-stable-zh/tmp'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> gitlab-ctl reconfigure//重新配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gitlab-ctl restart//重启</span></span><br></pre></td></tr></table></figure></p><p>再次使用浏览器访问：<a href="http://192.168.1.xx/" target="_blank" rel="noopener">http://192.168.1.xx/</a> 可以看到界面是中文的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x搭建Gitlab服务并汉化。&lt;br&gt;
    
    </summary>
    
      <category term="git" scheme="https://dsxlinux.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://dsxlinux.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Python远程部署利器Fabric详解</title>
    <link href="https://dsxlinux.github.io/2018/08/27/fabric/"/>
    <id>https://dsxlinux.github.io/2018/08/27/fabric/</id>
    <published>2018-08-27T03:42:54.000Z</published>
    <updated>2018-08-27T08:02:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x下Python远程部署利器Fabric的使用。<br>本文参考：<a href="http://python.jobbole.com/87241/" target="_blank" rel="noopener">http://python.jobbole.com/87241/</a><br><a id="more"></a></p><h4 id="1-安装Fabric"><a href="#1-安装Fabric" class="headerlink" title="1.安装Fabric"></a>1.安装Fabric</h4><p>前提是python版本必须是2.7以上。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> python -V</span></span><br><span class="line">Python 2.7.13</span><br></pre></td></tr></table></figure></p><p>推荐用pip来安装，也可以从github上clone下来安装。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pip install fabric==1.14.0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> fab -V</span></span><br><span class="line">Fabric 1.14.0</span><br><span class="line">Paramiko 2.4.1</span><br></pre></td></tr></table></figure></p><h4 id="2-第一个例子"><a href="#2-第一个例子" class="headerlink" title="2.第一个例子"></a>2.第一个例子</h4><p>创建一个fabfile.py文件，然后写入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Hello Fabric!"</span></span><br></pre></td></tr></table></figure></p><p>fabfile.py文件中每个函数就是一个任务，任务名即函数名，上例中是”hello”。</p><p>查看任务<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fab -l</span></span><br><span class="line">Available commands:</span><br><span class="line"></span><br><span class="line">    hello</span><br></pre></td></tr></table></figure></p><p>任务可以带参数，将hello函数改为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(name, value)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Hello Fabric! %s=%s"</span> % (name,value)</span><br></pre></td></tr></table></figure></p><p>此时执行hello任务时，就要传入参数值：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fab hello:name=Year,value=2018</span></span><br></pre></td></tr></table></figure></p><p>Fabric的脚本建议写在”fabfile.py”文件中，如果想要想换文件名就要在”fab”命令中用”-f”指定：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fab -f script.py hello</span></span><br></pre></td></tr></table></figure></p><h4 id="3-执行本地命令"><a href="#3-执行本地命令" class="headerlink" title="3.执行本地命令"></a>3.执行本地命令</h4><p>“fabric.api”包里的”local()”方法可以用来执行本地Shell命令。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> local</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    local(<span class="string">'ls -l /'</span>)</span><br></pre></td></tr></table></figure></p><p>“local()”方法有一个”capture”参数用来捕获标准输出，比如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> local</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    output = local(<span class="string">'echo Hello'</span>, capture=<span class="keyword">True</span>)</span><br><span class="line"><span class="keyword">print</span> output</span><br></pre></td></tr></table></figure></p><h4 id="4-执行远程命令"><a href="#4-执行远程命令" class="headerlink" title="4.执行远程命令"></a>4.执行远程命令</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> run, env</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'192.168.0.213'</span>, <span class="string">'192.168.0.214'</span>]</span><br><span class="line"><span class="comment"># env.hosts = ['root@192.168.0.213', 'root@192.168.0.214']</span></span><br><span class="line">env.user = <span class="string">'root'</span></span><br><span class="line">env.password = <span class="string">'123456'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    run(<span class="string">'ls -l /home/'</span>)</span><br></pre></td></tr></table></figure><p>“fabric.api”包里的”run()”方法可以用来执行远程Shell命令。<br>如果不在env.hosts里面指定host的信息，可以在命令行上指定。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fab -H root@192.168.0.213,root@192.168.0.214 hello</span></span><br></pre></td></tr></table></figure><p>对于不同的服务器，我们想执行不同的任务，上面的方法似乎做不到，我们要对服务器定义角色：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, roles, run, execute, cd</span><br><span class="line"> </span><br><span class="line">env.roledefs = &#123;</span><br><span class="line">    <span class="string">'staging'</span>: [<span class="string">'bjhee@example1.com'</span>,<span class="string">'bjhee@example2.com'</span>],</span><br><span class="line">    <span class="string">'build'</span>: [<span class="string">'build@example3.com'</span>]</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">env.passwords = &#123;</span><br><span class="line">    <span class="string">'staging'</span>: <span class="string">'11111'</span>,</span><br><span class="line">    <span class="string">'build'</span>: <span class="string">'123456'</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@roles('build')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> cd(<span class="string">'/home/build/myapp/'</span>):</span><br><span class="line">        run(<span class="string">'git pull'</span>)</span><br><span class="line">        run(<span class="string">'python setup.py'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="meta">@roles('staging')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deploy</span><span class="params">()</span>:</span></span><br><span class="line">    run(<span class="string">'tar xfz /tmp/myapp.tar.gz'</span>)</span><br><span class="line">    run(<span class="string">'cp /tmp/myapp /home/bjhee/www/'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task</span><span class="params">()</span>:</span></span><br><span class="line">    execute(build)</span><br><span class="line">    execute(deploy)</span><br></pre></td></tr></table></figure></p><p>执行：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fab task</span></span><br></pre></td></tr></table></figure></p><p>如果某一任务上没有指定某个角色，但是你又想让这个角色的服务器也能运行该任务，你可以通过”-R”来指定角色名，多个角色用逗号分隔：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fab -R build deploy</span></span><br></pre></td></tr></table></figure></p><h4 id="5-SSH功能函数"><a href="#5-SSH功能函数" class="headerlink" title="5.SSH功能函数"></a>5.SSH功能函数</h4><ul><li>get(remote, local): 从远程机器上下载文件到本地</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> get, env</span><br><span class="line"></span><br><span class="line">env.hosts = [<span class="string">'192.168.0.213'</span>]</span><br><span class="line">env.user = <span class="string">'root'</span></span><br><span class="line">env.password = <span class="string">'123456'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    get(<span class="string">'/root/boot.log'</span>, <span class="string">'/root/'</span>)</span><br></pre></td></tr></table></figure><ul><li>put(local, remote): 从本地上传文件到远程机器上</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> put, env</span><br><span class="line"></span><br><span class="line">env.hosts = [<span class="string">'192.168.0.213'</span>]</span><br><span class="line">env.user = <span class="string">'root'</span></span><br><span class="line">env.password = <span class="string">'123456'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    put(<span class="string">'/root/install.log'</span>, <span class="string">'/var/log/'</span>)</span><br></pre></td></tr></table></figure><ul><li>prompt: 提示输入</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, get, prompt</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'bjhee@example.com'</span>,]</span><br><span class="line">env.password = <span class="string">'111111'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    filename = prompt(<span class="string">'Please input file name: '</span>)</span><br><span class="line"><span class="comment"># port = prompt('Please input port number: ', default=8080, validate=int)</span></span><br><span class="line">    get(<span class="string">'/var/log/myapp.log'</span>, <span class="string">'%s.log'</span> % filename)</span><br></pre></td></tr></table></figure><ul><li>reboot: 重启服务器</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, reboot</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'bjhee@example.com'</span>,]</span><br><span class="line">env.password = <span class="string">'111111'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">restart</span><span class="params">()</span>:</span></span><br><span class="line">    reboot(wait=<span class="number">60</span>)</span><br></pre></td></tr></table></figure><h4 id="6-上下文管理器"><a href="#6-上下文管理器" class="headerlink" title="6.上下文管理器"></a>6.上下文管理器</h4><ul><li>cd: 设置远程机器的当前工作目录</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, cd, put</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'bjhee@example1.com'</span>, ]</span><br><span class="line">env.password = <span class="string">'111111'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> cd(<span class="string">'/var/www/'</span>):</span><br><span class="line">        put(<span class="string">'/tmp/myapp-0301.tar.gz'</span>, <span class="string">'myapp.tar.gz'</span>)</span><br></pre></td></tr></table></figure><ul><li>lcd: 设置本地工作目录</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, cd, lcd, put</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'bjhee@example1.com'</span>, ]</span><br><span class="line">env.password = <span class="string">'111111'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> cd(<span class="string">'/var/www/'</span>):</span><br><span class="line">        <span class="keyword">with</span> lcd(<span class="string">'/tmp/'</span>):</span><br><span class="line">            put(<span class="string">'myapp-0301.tar.gz'</span>, <span class="string">'myapp.tar.gz'</span>)</span><br></pre></td></tr></table></figure><ul><li>path: 添加远程机的PATH路径</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, run, path</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'bjhee@example1.com'</span>, ]</span><br><span class="line">env.password = <span class="string">'111111'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> path(<span class="string">'/home/bjhee/tmp'</span>):</span><br><span class="line">        run(<span class="string">'echo $PATH'</span>)</span><br><span class="line">    run(<span class="string">'echo $PATH'</span>)</span><br></pre></td></tr></table></figure><ul><li>settings: 设置Fabric环境变量参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, run, settings</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'bjhee@example1.com'</span>, ]</span><br><span class="line">env.password = <span class="string">'111111'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> settings(warn_only=<span class="keyword">True</span>):</span><br><span class="line">        run(<span class="string">'echo $USER'</span>)</span><br></pre></td></tr></table></figure><ul><li>shell_env: 设置Shell环境变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, run, local, shell_env</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'bjhee@example1.com'</span>, ]</span><br><span class="line">env.password = <span class="string">'111111'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> shell_env(JAVA_HOME=<span class="string">'/opt/java'</span>):</span><br><span class="line">        run(<span class="string">'echo $JAVA_HOME'</span>)</span><br><span class="line">        local(<span class="string">'echo $JAVA_HOME'</span>)</span><br></pre></td></tr></table></figure><ul><li>prefix: 设置命令执行前缀</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, run, local, shell_env</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'bjhee@example1.com'</span>, ]</span><br><span class="line">env.password = <span class="string">'111111'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> shell_env(JAVA_HOME=<span class="string">'/opt/java'</span>):</span><br><span class="line">        run(<span class="string">'echo $JAVA_HOME'</span>)</span><br><span class="line">        local(<span class="string">'echo $JAVA_HOME'</span>)</span><br></pre></td></tr></table></figure><h4 id="7-错误处理"><a href="#7-错误处理" class="headerlink" title="7.错误处理"></a>7.错误处理</h4><p>默认情况下，Fabric在任务遇到错误时就会退出，如果我们希望捕获这个错误而不是退出任务的话，就要开启”warn_only”参数。<br>在上面介绍”settings()”上下文管理器时，我们已经看到了临时开启”warn_only”的方法了，如果要全局开启，有两个办法：<br>1.在命令行添加<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fab -w hello</span></span><br></pre></td></tr></table></figure></p><p>2.设置”env.warn_only”环境参数为True<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env</span><br><span class="line"></span><br><span class="line">env.warn_only = <span class="keyword">True</span></span><br></pre></td></tr></table></figure></p><p>如何捕捉错误？<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env, cd, put</span><br><span class="line"> </span><br><span class="line">env.hosts = [<span class="string">'bjhee@example1.com'</span>, ]</span><br><span class="line">env.password = <span class="string">'111111'</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> cd(<span class="string">'/var/www/'</span>):</span><br><span class="line">        upload = put(<span class="string">'/tmp/myapp-0301.tar.gz'</span>, <span class="string">'myapp.tar.gz'</span>)</span><br><span class="line">        <span class="keyword">if</span> upload.failed:</span><br><span class="line">            sudo(<span class="string">'rm myapp.tar.gz'</span>)</span><br><span class="line">            put(<span class="string">'/tmp/myapp-0301.tar.gz'</span>, <span class="string">'myapp.tar.gz'</span>, use_sudo=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure></p><h4 id="8-并行执行"><a href="#8-并行执行" class="headerlink" title="8.并行执行"></a>8.并行执行</h4><p>怎么开启并行执行呢？办法有两个<br>1.在命令行加参数<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fab -P hello</span></span><br></pre></td></tr></table></figure></p><p>2.设置”env.parallel”环境参数为True<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> env</span><br><span class="line"> </span><br><span class="line">env.parallel = <span class="keyword">True</span></span><br></pre></td></tr></table></figure></p><p>如果只想对某一任务做并行的话，我们可以在任务函数上加上”@parallel”装饰器：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> parallel</span><br><span class="line"> </span><br><span class="line"><span class="meta">@parallel</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runs_in_parallel</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runs_serially</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p><h4 id="9-补充"><a href="#9-补充" class="headerlink" title="9.补充"></a>9.补充</h4><ul><li><p>终端输出带颜色</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.colors <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> green(<span class="string">"Successful"</span>)</span><br><span class="line">    <span class="keyword">print</span> yellow(<span class="string">"Warning"</span>)</span><br><span class="line">    <span class="keyword">print</span> red(<span class="string">"Error"</span>)</span><br></pre></td></tr></table></figure></li><li><p>限制任务只能被执行一次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> execute, runs_once</span><br><span class="line"> </span><br><span class="line"><span class="meta">@runs_once</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Hello Fabric!"</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    execute(hello)</span><br><span class="line">    execute(hello)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x下Python远程部署利器Fabric的使用。&lt;br&gt;本文参考：&lt;a href=&quot;http://python.jobbole.com/87241/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://python.jobbole.com/87241/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://dsxlinux.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://dsxlinux.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>自动化运维之SaltStack实践</title>
    <link href="https://dsxlinux.github.io/2018/08/22/SaltStack/"/>
    <id>https://dsxlinux.github.io/2018/08/22/SaltStack/</id>
    <published>2018-08-22T02:24:28.000Z</published>
    <updated>2018-08-23T01:24:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍自动化运维工具SaltStack的使用方法。<br><a id="more"></a></p><h4 id="1-saltstack简介"><a href="#1-saltstack简介" class="headerlink" title="1.saltstack简介"></a>1.saltstack简介</h4><p>saltstack是基于python开发的一套C/S架构配置管理工具，它的底层使用ZeroMQ消息队列pub/sub方式通信，使用SSL证书签发的方式进行认证管理。ZeroMQ使SaltStack能快速在成千上万台机器上进行各种操作，之前已经介绍过了puppet mco的框架，比较类似。而且采用RSA Key方式确认身份，传输采用AES加密，使传输的安全性得到保障。</p><h4 id="2-SaltStack安装"><a href="#2-SaltStack安装" class="headerlink" title="2.SaltStack安装"></a>2.SaltStack安装</h4><p>在SaltsStack架构中服务端叫作Master，客户端叫作Minion。我们使用2台服务器来来实验。<br>配置主机名<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> cat /etc/hosts</span><br><span class="line">192.168.0.213rzx213</span><br><span class="line">192.168.0.214rzx214</span><br></pre></td></tr></table></figure></p><ul><li><p>服务端安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> yum install -y epel-release</span><br><span class="line"><span class="meta">#</span> yum install -y salt-master salt-minion</span><br></pre></td></tr></table></figure></li><li><p>客户端安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> yum install -y epel-release</span><br><span class="line"><span class="meta">#</span> yum install -y salt-minion</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-SaltStack配置"><a href="#3-SaltStack配置" class="headerlink" title="3.SaltStack配置"></a>3.SaltStack配置</h4><p>分别在服务端和客户端中打开/etc/salt/minion文件，做如下修改：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> vim /etc/salt/minion</span><br><span class="line">master: 192.168.0.213//在文件第16行，打开注释，指定master的ip地址。</span><br></pre></td></tr></table></figure></p><h4 id="4-启动服务"><a href="#4-启动服务" class="headerlink" title="4.启动服务"></a>4.启动服务</h4><ul><li><p>服务端启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt-master start &amp;</span><br><span class="line"><span class="meta">#</span> salt-minion start &amp;</span><br></pre></td></tr></table></figure></li><li><p>客户端启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt-minion start &amp;</span><br></pre></td></tr></table></figure></li></ul><p>minion在第一次启动时，会在/etc/salt/pki/minion/（该路径在/etc/salt/minion里面设置）下自动生成minion.pem（private key）和 minion.pub（public key），然后将 minion.pub发送给master。master在接收到minion的public key后，通过salt-key命令accept minion public key，这样在master的/etc/salt/pki/master/minions下的将会存放以minion id命名的 public key，然后master就能对minion发送指令了。</p><h4 id="5-配置认证"><a href="#5-配置认证" class="headerlink" title="5.配置认证"></a>5.配置认证</h4><p>在服务端进行如下操作：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt-key -a rzx213</span><br><span class="line"><span class="meta">#</span> salt-key -a rzx214</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt-key</span><br><span class="line">Accepted Keys:</span><br><span class="line">rzx213</span><br><span class="line">rzx214</span><br><span class="line">Denied Keys:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">Rejected Keys:</span><br></pre></td></tr></table></figure></p><p>上面操作是手动配置认证，大规模部署Minion的时候，可以自动接受指定等待认证的 key。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> cp /etc/salt/master /etc/salt/master.bak</span><br><span class="line"><span class="meta">#</span> vim /etc/salt/master</span><br><span class="line">auto_accept: True//215行，注释打开，修改为True</span><br></pre></td></tr></table></figure></p><p>测试验证<br>先重新启动salt服务端和客户端，再执行：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt '*' cmd.run   'df -h'//在服务端执行，其中*表示认证过的服务器</span><br></pre></td></tr></table></figure></p><h4 id="6-管理对象"><a href="#6-管理对象" class="headerlink" title="6.管理对象"></a>6.管理对象</h4><ul><li><p>正则匹配</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt 'rzx*' network.ip_addrs</span><br><span class="line">rzx214:</span><br><span class="line">    - 192.168.0.214</span><br><span class="line">rzx213:</span><br><span class="line">    - 192.168.0.213</span><br></pre></td></tr></table></figure></li><li><p>列表匹配</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt -L rzx213,rzx214 test.ping//-L, –list 列表匹配</span><br><span class="line">rzx213:</span><br><span class="line">    True</span><br><span class="line">rzx214:</span><br><span class="line">    True</span><br></pre></td></tr></table></figure></li><li><p>Grians匹配</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt -G 'os:CentOS' test.ping//os:CentOS，这里的对象是一组键值对， 这里用到了Minion的Grains的键值对。</span><br></pre></td></tr></table></figure></li><li><p>组匹配</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> vim /etc/salt/master</span><br><span class="line"><span class="meta">#</span>####         Node Groups           #####</span><br><span class="line"><span class="meta">#</span>#########################################</span><br><span class="line"><span class="meta">#</span> Node groups allow for logical groupings of minion nodes. A group consists of a group</span><br><span class="line"><span class="meta">#</span> name and a compound target.</span><br><span class="line"><span class="meta">#</span>nodegroups:</span><br><span class="line"><span class="meta">#</span>  group1: 'L@foo.domain.com,bar.domain.com,baz.domain.com and bl*.domain.com'</span><br><span class="line"><span class="meta">#</span>  group2: 'G@os:Debian and foo.domain.com'</span><br></pre></td></tr></table></figure></li></ul><p>L@ 和G@ 分别表示minion和grain信息 L@开通的是指定的以逗号分隔的多个minionId</p><table><thead><tr><th>Letter</th><th>Match Type</th><th>Example</th><th>Alt Delimiter?</th></tr></thead><tbody><tr><td>G</td><td>Grains glob</td><td>G@os:Ubuntu</td><td>Yes</td></tr><tr><td>E</td><td>PCRE Minion ID</td><td>`E@web\d+.(dev</td><td>qa</td></tr><tr><td>P</td><td>Grains PCRE</td><td>P@os:(RedHat</td><td>Fedora</td></tr><tr><td>L</td><td>List of minions</td><td><a href="mailto:L@minion1.example.com" target="_blank" rel="noopener">L@minion1.example.com</a>,minion3.domain.com or bl*.domain.com</td><td>No</td></tr><tr><td>I</td><td>Pillar glob</td><td>I@pdata:foobar</td><td>Yes</td></tr><tr><td>J</td><td>Pillar PCRE</td><td>`J@pdata:^(foo</td><td>bar)$`</td></tr><tr><td>S</td><td>Subnet/IP address</td><td><a href="mailto:S@192.168.1.0" target="_blank" rel="noopener">S@192.168.1.0</a>/24 or <a href="mailto:S@192.168.1.100" target="_blank" rel="noopener">S@192.168.1.100</a></td><td>No</td></tr><tr><td>R</td><td>Range cluster</td><td>R@%foo.bar</td><td>No</td></tr></tbody></table><p>修改group1为:<br>nodegroups:                                //打开注释<br>    group1: ‘L@rzx213,rzx214’            //修改配置，注意前面有空格</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt -N group1 test.ping//-N, –nodegroup 组匹配</span><br></pre></td></tr></table></figure><h4 id="7-管理对象属性"><a href="#7-管理对象属性" class="headerlink" title="7.管理对象属性"></a>7.管理对象属性</h4><ul><li>通过Minion配置文件定义Grains<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> vim /etc/salt/minion</span><br><span class="line">rzx213:</span><br><span class="line">  role:</span><br><span class="line">    - webserver</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt 'rzx213' grains.item role</span><br><span class="line"><span class="meta">#</span> salt -G role:webserver cmd.run 'hostname'</span><br></pre></td></tr></table></figure></li></ul><h4 id="8-pillar"><a href="#8-pillar" class="headerlink" title="8.pillar"></a>8.pillar</h4><p>在服务端配置：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> vim /etc/salt/master//打开注释</span><br><span class="line">pillar_roots:</span><br><span class="line">    base:</span><br><span class="line">    - /srv/pillar</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> mkdir /srv/pillar</span><br><span class="line"><span class="meta">#</span> vim /srv/pillar/test.sls</span><br><span class="line">conf: /etc/test123.conf</span><br><span class="line">myname: hadron</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vim /srv/pillar/top.sls</span><br><span class="line">base:</span><br><span class="line">  'rzx213':</span><br><span class="line">    - test</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> /etc/init.d/salt-master restart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt 'rzx213' pillar.items</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt -I 'conf:/etc/test123.conf' test.ping</span><br><span class="line"><span class="meta">#</span> salt -I 'conf:/etc/test123.conf' cmd.run 'w'</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>名称</th><th>存储位置</th><th>数据类型</th><th>数据采集更新方式</th><th>应用</th></tr></thead><tbody><tr><td>Grains</td><td>minion端</td><td>静态数据</td><td>minion启动时收集，也可以使用saltutil.sync_grains进行刷新。</td><td>存储minion基本数据，比如用于匹配minion,自身数据可以用来做资产管理等。</td></tr><tr><td>Pillar</td><td>master端</td><td>动态数据</td><td>在master端定义，指定给对应的minion，可以使用saltutil.refresh_pillar刷新</td><td>存储Master指定的数据，只有指定的minion可以看到，用于敏感数据保存。</td></tr></tbody></table><h4 id="9-配置管理安装Apache"><a href="#9-配置管理安装Apache" class="headerlink" title="9.配置管理安装Apache"></a>9.配置管理安装Apache</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> vim /etc/salt/master</span><br><span class="line">file_roots:</span><br><span class="line">  base:</span><br><span class="line">    - /srv/salt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> mkdir /srv/salt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vim /srv/salt/top.sls</span><br><span class="line">base:</span><br><span class="line">  'rzx213':</span><br><span class="line">    - apache</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vim /srv/salt/apache.sls</span><br><span class="line">apache-service:</span><br><span class="line">  pkg.installed:</span><br><span class="line">    - names:</span><br><span class="line">      - httpd</span><br><span class="line">      - httpd-devel</span><br><span class="line">  service.running:</span><br><span class="line">    - name: httpd</span><br><span class="line">    - enable: True</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> /etc/init.d/salt-minion restart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt 'rzx213' state.highstate</span><br><span class="line">rzx213:</span><br><span class="line">----------</span><br><span class="line">          ID: apache-service</span><br><span class="line">    Function: pkg.installed</span><br><span class="line">        Name: httpd</span><br><span class="line">      Result: True</span><br><span class="line">     Comment: Package httpd is already installed.</span><br><span class="line">     Started: 15:50:59.361911</span><br><span class="line">    Duration: 2092.768 ms</span><br><span class="line">     Changes:   </span><br><span class="line">----------</span><br><span class="line">          ID: apache-service</span><br><span class="line">    Function: pkg.installed</span><br><span class="line">        Name: httpd-devel</span><br><span class="line">      Result: True</span><br><span class="line">     Comment: Package httpd-devel is already installed.</span><br><span class="line">     Started: 15:51:01.454917</span><br><span class="line">    Duration: 0.615 ms</span><br><span class="line">     Changes:   </span><br><span class="line">----------</span><br><span class="line">          ID: apache-service</span><br><span class="line">    Function: service.running</span><br><span class="line">        Name: httpd</span><br><span class="line">      Result: True</span><br><span class="line">     Comment: Service httpd is already enabled, and is in the desired state</span><br><span class="line">     Started: 15:51:01.456326</span><br><span class="line">    Duration: 43.071 ms</span><br><span class="line">     Changes:   </span><br><span class="line"></span><br><span class="line">Summary</span><br><span class="line">------------</span><br><span class="line">Succeeded: 3</span><br><span class="line">Failed:    0</span><br><span class="line">------------</span><br><span class="line">Total states run:     3</span><br></pre></td></tr></table></figure><h4 id="9-states文件"><a href="#9-states文件" class="headerlink" title="9.states文件"></a>9.states文件</h4><p>salt states的核心是sls文件，该文件使用YAML语法定义了一些k/v的数据。<br>sls文件存放根路径在master配置文件中定义，默认为/srv/salt,该目录在操作系统上不存在，需要手动创建。<br>在salt中可以通过salt://代替根路径，例如你可以通过salt://top.sls访问/srv/salt/top.sls。<br>在states中top文件也由master配置文件定义，默认为top.sls，该文件为states的入口文件。  一个简单的sls文件如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apache:</span><br><span class="line"> pkg.installed</span><br><span class="line"> service.running</span><br><span class="line">   - require:</span><br><span class="line">     - pkg: apache</span><br></pre></td></tr></table></figure></p><p>说明：此SLS数据确保叫做”apache”的软件包(package)已经安装,并且”apache”服务(service)正在运行中。</p><h4 id="10-文件目录管理"><a href="#10-文件目录管理" class="headerlink" title="10.文件目录管理"></a>10.文件目录管理</h4><ul><li><p>文件管理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">服务端配置：</span><br><span class="line"><span class="meta">#</span> vim /srv/salt/top.sls</span><br><span class="line">base:</span><br><span class="line">  'rzx213':</span><br><span class="line">    - apache</span><br><span class="line">  'rzx214':</span><br><span class="line">    - filetest</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vim /srv/salt/filetest.sls</span><br><span class="line">file-test:</span><br><span class="line">  file.managed:</span><br><span class="line">    - name: /tmp/filetest.txt</span><br><span class="line">    - source: salt://test/123/1.txt</span><br><span class="line">    - user: root</span><br><span class="line">    - group: root</span><br><span class="line">    - mode: 644</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> mkdir -p /srv/salt/test/123/</span><br><span class="line"><span class="meta">#</span> echo "file test" &gt; /srv/salt/test/123/1.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt 'rzx214' state.highstate</span><br><span class="line">rzx214:</span><br><span class="line">----------</span><br><span class="line">          ID: file-test</span><br><span class="line">    Function: file.managed</span><br><span class="line">        Name: /tmp/filetest.txt</span><br><span class="line">      Result: True</span><br><span class="line">     Comment: File /tmp/filetest.txt updated</span><br><span class="line">     Started: 15:59:04.959125</span><br><span class="line">    Duration: 65.433 ms</span><br><span class="line">     Changes:   </span><br><span class="line">              ----------</span><br><span class="line">              diff:</span><br><span class="line">                  New file</span><br><span class="line">              mode:</span><br><span class="line">                  0644</span><br><span class="line"></span><br><span class="line">Summary</span><br><span class="line">------------</span><br><span class="line">Succeeded: 1 (changed=1)</span><br><span class="line">Failed:    0</span><br><span class="line">------------</span><br><span class="line">Total states run:     1</span><br><span class="line"></span><br><span class="line">客户端验证：</span><br><span class="line"><span class="meta">#</span> cat /tmp/filetest.txt </span><br><span class="line">file test</span><br></pre></td></tr></table></figure></li><li><p>目录管理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">服务端配置：</span><br><span class="line"><span class="meta">#</span> vim /srv/salt/top.sls</span><br><span class="line">base:</span><br><span class="line">  'rzx213':</span><br><span class="line">    - apache</span><br><span class="line">  'rzx214':</span><br><span class="line">    - filedir</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vim /srv/salt/filedir.sls</span><br><span class="line">file-dir:</span><br><span class="line">  file.recurse:</span><br><span class="line">    - name: /tmp/testdir</span><br><span class="line">    - source: salt://test/123</span><br><span class="line">    - user: root</span><br><span class="line">    - file_mode: 644</span><br><span class="line">    - dir_mode: 755</span><br><span class="line">    - mkdir: True</span><br><span class="line">    - clean: True</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> ls /srv/salt/test/123</span><br><span class="line"><span class="meta">#</span> salt 'rzx214' state.highstate</span><br><span class="line"></span><br><span class="line">客户端验证:</span><br><span class="line"><span class="meta">#</span> ls /tmp/testdir/</span><br></pre></td></tr></table></figure></li><li><p>测试增删功能</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">服务端配置：</span><br><span class="line"><span class="meta">#</span> cd /srv/salt/test/123</span><br><span class="line"><span class="meta">#</span> mkdir newDir</span><br><span class="line"><span class="meta">#</span> echo "Hello" &gt; newDir/a</span><br><span class="line"><span class="meta">#</span> rm -rf 1.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt 'rzx214' state.highstate</span><br><span class="line">客户端验证:</span><br><span class="line"><span class="meta">#</span> ls /tmp/testdir/</span><br></pre></td></tr></table></figure></li></ul><h4 id="11-远程执行"><a href="#11-远程执行" class="headerlink" title="11.远程执行"></a>11.远程执行</h4><ul><li><p>远程执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> vim /srv/salt/top.sls</span><br><span class="line">base:</span><br><span class="line">  'rzx213':</span><br><span class="line">    - cmdtest</span><br><span class="line">  'rzx214':</span><br><span class="line">    - filedir</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vim /srv/salt/cmdtest.sls</span><br><span class="line">cmd-test:  </span><br><span class="line">  cmd.run:</span><br><span class="line">    - onlyif: test -f /tmp/1.txt</span><br><span class="line">    - names:</span><br><span class="line">      - touch /tmp/cmdtest.txt</span><br><span class="line">      - mkdir /tmp/cmdtest</span><br><span class="line">    - user: root</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> echo "hello" &gt; /tmp/1.txt</span><br><span class="line"><span class="meta">#</span> salt 'rzx123' state.highstate</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> ll /tmp|grep cmd</span><br></pre></td></tr></table></figure></li><li><p>远程执行脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">服务端配置：</span><br><span class="line"><span class="meta">#</span> vim /srv/salt/top.sls</span><br><span class="line">base:</span><br><span class="line">  'rzx213':</span><br><span class="line">    - cmdtest</span><br><span class="line">  'rzx214':</span><br><span class="line">    - shelltest</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vim /srv/salt/shelltest.sls</span><br><span class="line">shell-test:</span><br><span class="line">  cmd.script:</span><br><span class="line">    - source: salt://test/1.sh</span><br><span class="line">    - user: root</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vim /srv/salt/test/1.sh</span><br><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">touch /tmp/shelltest.txt</span><br><span class="line">if [ -d /tmp/shelltest ]</span><br><span class="line">then</span><br><span class="line">    rm -rf /tmp/shelltest</span><br><span class="line">else</span><br><span class="line">    mkdir /tmp/shelltest</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span> salt 'rzx214' state.highstate</span><br><span class="line"></span><br><span class="line">客户端验证:</span><br><span class="line"><span class="meta">#</span> ll /tmp|grep shell</span><br></pre></td></tr></table></figure></li></ul><h4 id="12-管理任务计划"><a href="#12-管理任务计划" class="headerlink" title="12.管理任务计划"></a>12.管理任务计划</h4><ul><li><p>建立 cron</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">服务端配置：</span><br><span class="line"><span class="meta">#</span> vim /srv/salt/top.sls</span><br><span class="line">base:</span><br><span class="line">  'rzx213':</span><br><span class="line">    - crontest</span><br><span class="line">  'rzx214':</span><br><span class="line">    - shelltest</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> vim /srv/salt/crontest.sls</span><br><span class="line">cron-test:</span><br><span class="line">  cron.present:</span><br><span class="line">    - name: /bin/touch /tmp/111.txt</span><br><span class="line">    - user: root</span><br><span class="line">    - minute: '*'</span><br><span class="line">    - hour: 20</span><br><span class="line">    - daymonth: 1-10</span><br><span class="line">    - month: '3,5'</span><br><span class="line">    - dayweek: '*'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt 'rzx213' state.highstate</span><br><span class="line"></span><br><span class="line">客户端验证：</span><br><span class="line"><span class="meta">#</span> crontab -l</span><br></pre></td></tr></table></figure></li><li><p>删除cron</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> 服务端配置：</span><br><span class="line"><span class="meta">#</span> vim /srv/salt/crontest.sls</span><br><span class="line">cron-test:</span><br><span class="line">  cron.absent:</span><br><span class="line">    - name: /bin/touch /tmp/111.txt</span><br><span class="line">    - user: root</span><br><span class="line">    - minute: '*'</span><br><span class="line">    - hour: 20</span><br><span class="line">    - daymonth: 1-10</span><br><span class="line">    - month: '3,5'</span><br><span class="line">    - dayweek: '*'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt 'rzx213' state.highstate</span><br><span class="line"></span><br><span class="line">客户端验证:</span><br><span class="line"><span class="meta">#</span> crontab -l</span><br></pre></td></tr></table></figure></li></ul><h4 id="13-Saltstack常用命令"><a href="#13-Saltstack常用命令" class="headerlink" title="13.Saltstack常用命令"></a>13.Saltstack常用命令</h4><ul><li><p>拷贝文件到客户端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt 'rzx213' cp.get_file salt://apache.sls /tmp/cp.txt</span><br></pre></td></tr></table></figure></li><li><p>拷贝目录到客户端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt 'rzx213' cp.get_dir salt://test /tmp</span><br></pre></td></tr></table></figure></li><li><p>显示存活的客户端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> salt-run manage.up</span><br></pre></td></tr></table></figure></li><li><p>命令下执行服务端的脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> vim /srv/salt/test/shell.sh</span><br><span class="line"><span class="meta">#</span>! /bin/bash</span><br><span class="line">echo "hadron.cn" &gt; /tmp/shell.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> salt 'rzx214' cmd.script salt://test/shell.sh</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍自动化运维工具SaltStack的使用方法。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS下搭建Jenkins服务器</title>
    <link href="https://dsxlinux.github.io/2018/08/20/jenkins/"/>
    <id>https://dsxlinux.github.io/2018/08/20/jenkins/</id>
    <published>2018-08-20T08:59:47.000Z</published>
    <updated>2018-08-20T09:10:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x搭建Jenkins服务器。<br><a id="more"></a></p><h4 id="1-卸载OpenJDK"><a href="#1-卸载OpenJDK" class="headerlink" title="1.卸载OpenJDK"></a>1.卸载OpenJDK</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> rpm -qa|grep java</span></span><br><span class="line">tzdata-java-2018d-1.el6.noarch</span><br><span class="line">javassist-3.9.0-6.el6.noarch</span><br><span class="line">java-1.7.0-openjdk-1.7.0.171-2.6.13.0.el6_9.x86_64</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum remove java java-* -y</span></span><br></pre></td></tr></table></figure><h4 id="2-安装JDK"><a href="#2-安装JDK" class="headerlink" title="2.安装JDK"></a>2.安装JDK</h4><p>下载地址：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> rpm -ivh jdk-8u101-linux-x64.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/profile</span></span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">source</span> /etc/profile</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> java -version</span></span><br><span class="line">java version "1.8.0_101"</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_101-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)</span><br></pre></td></tr></table></figure></p><h4 id="3-安装Tomcat"><a href="#3-安装Tomcat" class="headerlink" title="3.安装Tomcat"></a>3.安装Tomcat</h4><p>Tomcat下载地址：<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> tar xf  apache-tomcat-9.0.10.tar.gz -C /usr/<span class="built_in">local</span>/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mv apache-tomcat-9.0.10 tomcat</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ls -l</span></span><br><span class="line">    bin             --启动命令目录</span><br><span class="line">    conf           --配置文件目录</span><br><span class="line">    lib             --库文件目录</span><br><span class="line">    logs           --日志文件目录</span><br><span class="line">    temp--临时缓存文件</span><br><span class="line">    webapps  --web应用家目录</span><br><span class="line">    work         --工作缓存目录</span><br><span class="line"></span><br><span class="line">环境变量</span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /usr/<span class="built_in">local</span>/tomcat/bin/startup.sh              --tomcat的启动程序</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /usr/<span class="built_in">local</span>/tomcat/bin/shutdown.sh             --tomcat的关闭程序</span></span><br><span class="line">加入如下内容：</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line">export TOMCAT_HOME=/usr/local/tomcat</span><br><span class="line">export CATALINA_HOME=/usr/local/tomcat</span><br><span class="line">export CLASS_PATH=$JAVA_HOME/bin/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tool.jar</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$TOMCAT_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">启动Tomcat</span><br><span class="line"><span class="meta">#</span><span class="bash"> /usr/<span class="built_in">local</span>/tomcat/bin/startup.sh</span></span><br></pre></td></tr></table></figure></p><h4 id="4-安装Jenkins"><a href="#4-安装Jenkins" class="headerlink" title="4.安装Jenkins"></a>4.安装Jenkins</h4><p>从官网下载jenkins的war包，地址<a href="https://jenkins.io/" target="_blank" rel="noopener">https://jenkins.io/</a><br>下载后可以直接运行：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar jenkins.war --httpPort=8080</span><br></pre></td></tr></table></figure></p><p>把下载的包放到如下目录：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ls /usr/<span class="built_in">local</span>/tomcat/webapps/ROOT</span></span><br></pre></td></tr></table></figure></p><p>解压war包<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> jar xf jenkins.war</span></span><br></pre></td></tr></table></figure></p><p>使用浏览器访问：<a href="http://ip:8080/" target="_blank" rel="noopener">http://ip:8080/</a>   进入安装界面即可完成安装。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x搭建Jenkins服务器。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS下搭建http代理服务器(TinyProxy)</title>
    <link href="https://dsxlinux.github.io/2018/08/20/tiny-proxy/"/>
    <id>https://dsxlinux.github.io/2018/08/20/tiny-proxy/</id>
    <published>2018-08-20T08:21:30.000Z</published>
    <updated>2018-08-20T08:40:00.834Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x搭建TinyProxy服务器。<br><a id="more"></a></p><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install epel-release -y</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install tinyproxy -y</span></span><br></pre></td></tr></table></figure><h4 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h4><p>配置文件：/etc/opt/ss5/ss5.conf<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> egrep -v <span class="string">'#|^$'</span> /etc/tinyproxy/tinyproxy.conf//默认配置内容如下</span></span><br><span class="line">User tinyproxy</span><br><span class="line">Group tinyproxy</span><br><span class="line">Port 8888</span><br><span class="line">Timeout 600</span><br><span class="line">DefaultErrorFile "/usr/share/tinyproxy/default.html"</span><br><span class="line">StatFile "/usr/share/tinyproxy/stats.html"</span><br><span class="line">LogFile "/var/log/tinyproxy/tinyproxy.log"</span><br><span class="line">LogLevel Info</span><br><span class="line">PidFile "/var/run/tinyproxy/tinyproxy.pid"</span><br><span class="line">MaxClients 100</span><br><span class="line">MinSpareServers 5</span><br><span class="line">MaxSpareServers 20</span><br><span class="line">StartServers 10</span><br><span class="line">MaxRequestsPerChild 0</span><br><span class="line">Allow 127.0.0.1</span><br><span class="line">ViaProxyName "tinyproxy"</span><br><span class="line">ConnectPort 443</span><br><span class="line">ConnectPort 563</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">Port是监听的端口</span><br><span class="line">Allow IP服务限制。如果不想限制，可以注释掉</span><br></pre></td></tr></table></figure></p><h4 id="3-启动"><a href="#3-启动" class="headerlink" title="3.启动"></a>3.启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> service tinyproxy start</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig --level 35 tinyproxy on</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> netstat -ntlp | grep tinyproxy</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x搭建TinyProxy服务器。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS下搭建SS5(SOCKS5)代理服务器</title>
    <link href="https://dsxlinux.github.io/2018/08/20/socks5-proxy/"/>
    <id>https://dsxlinux.github.io/2018/08/20/socks5-proxy/</id>
    <published>2018-08-20T07:31:10.000Z</published>
    <updated>2018-08-20T08:40:34.871Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x搭建SOCKS5代理服务器。<br><a id="more"></a></p><h4 id="1-从官网下载源码"><a href="#1-从官网下载源码" class="headerlink" title="1.从官网下载源码"></a>1.从官网下载源码</h4><p>官网：<a href="http://ss5.sourceforge.net/software.htm" target="_blank" rel="noopener">http://ss5.sourceforge.net/software.htm</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> wget https://nchc.dl.sourceforge.net/project/ss5/ss5/3.8.9-8/ss5-3.8.9-8.tar.gz</span></span><br></pre></td></tr></table></figure></p><h4 id="2-解决依赖"><a href="#2-解决依赖" class="headerlink" title="2.解决依赖"></a>2.解决依赖</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum -y install gcc automake make</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum -y install pam-devel openldap-devel cyrus-sasl-devel openssl-devel</span></span><br></pre></td></tr></table></figure><h4 id="3-编译安装"><a href="#3-编译安装" class="headerlink" title="3.编译安装"></a>3.编译安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> tar xvf ss5-3.8.9-8.tar.gz</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> ss5-3.8.9/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ./configure &amp;&amp; make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><h4 id="4-配置"><a href="#4-配置" class="headerlink" title="4.配置"></a>4.配置</h4><p>配置文件：/etc/opt/ss5/ss5.conf<br>第一步：修改认证方式<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/opt/ss5/ss5.conf</span></span><br><span class="line">87  auth    0.0.0.0/0               -               u//将第87行注释打开，最后修改成u</span><br><span class="line">203 permit u    0.0.0.0/0   -   0.0.0.0/0   -   -   -   -   -//将第203行注释打开，中间加一个u，表示用户认证</span><br></pre></td></tr></table></figure></p><p>第二步：添加用户名及密码<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/opt/ss5/ss5.passwd</span></span><br><span class="line">rzx rzx@1218</span><br></pre></td></tr></table></figure></p><p>第三步：修改端口<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/sysconfig/ss5</span></span><br><span class="line">SS5_OPTS=" -u root -b 0.0.0.0:10808"//默认是1080端口，修改成10808</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> chmod 755 /etc/rc.d/init.d/ss5</span></span><br></pre></td></tr></table></figure></p><h4 id="5-启动"><a href="#5-启动" class="headerlink" title="5.启动"></a>5.启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> chmod +x /etc/rc.d/init.d/ss5</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/rc.d/init.d/ss5 restart</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> netstat -an | grep 10808</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> more /var/<span class="built_in">log</span>/ss5/ss5.log</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig --add ss5</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig --level 345 ss5 on</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x搭建SOCKS5代理服务器。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>inotify-tools使用方法介绍</title>
    <link href="https://dsxlinux.github.io/2018/08/15/inotify/"/>
    <id>https://dsxlinux.github.io/2018/08/15/inotify/</id>
    <published>2018-08-15T09:19:04.000Z</published>
    <updated>2018-08-15T09:47:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍inotify-tools工具套件的使用方法。<br><a id="more"></a></p><h4 id="1-关于inotify"><a href="#1-关于inotify" class="headerlink" title="1.关于inotify"></a>1.关于inotify</h4><p>Inotify是一种文件变化通知机制，Linux内核从2.6.13开始引入。<br>inotify-tools提供两种工具，一是inotifywait，它是用来监控文件或目录的变化，二是inotifywatch，它是用来统计文件系统访问的次数。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> grep INOTIFY_USER /boot/config-$(uname -r)</span></span><br></pre></td></tr></table></figure></p><p>如果输出(‘CONFIG_INOTIFY_USER=y’)，表示支持Inotify机制。</p><h4 id="2-安装inotify-tools"><a href="#2-安装inotify-tools" class="headerlink" title="2.安装inotify-tools"></a>2.安装inotify-tools</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install epel-release -y</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install inotify-tools -y</span></span><br></pre></td></tr></table></figure><h4 id="3-inotifywait使用"><a href="#3-inotifywait使用" class="headerlink" title="3.inotifywait使用"></a>3.inotifywait使用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> inotifywait -h</span></span><br><span class="line"></span><br><span class="line">参数说明:</span><br><span class="line">inotifywait [-hcmrq] [-e ] [-t ] [–format ] [–timefmt ] [ … ]</span><br><span class="line">-h,–help</span><br><span class="line">输出帮助信息</span><br><span class="line">@</span><br><span class="line">排除不需要监视的文件，可以是相对路径，也可以是绝对路径。</span><br><span class="line">–fromfile</span><br><span class="line">从文件读取需要监视的文件或排除的文件，一个文件一行，排除的文件以@开头。</span><br><span class="line">-m, –monitor</span><br><span class="line">接收到一个事情而不退出，无限期地执行。默认的行为是接收到一个事情后立即退出。</span><br><span class="line">-d, –daemon</span><br><span class="line">跟–monitor一样，除了是在后台运行，需要指定–outfile把事情输出到一个文件。也意味着使用了–syslog。</span><br><span class="line">-o, –outfile</span><br><span class="line">输出事情到一个文件而不是标准输出。</span><br><span class="line">-s, –syslog</span><br><span class="line">输出错误信息到系统日志</span><br><span class="line">-r, –recursive</span><br><span class="line">监视一个目录下的所有子目录。</span><br><span class="line">-q, –quiet</span><br><span class="line">指定一次，不会输出详细信息，指定二次，除了致命错误，不会输出任何信息。</span><br><span class="line">–exclude</span><br><span class="line">正则匹配需要排除的文件，大小写敏感。</span><br><span class="line">–excludei</span><br><span class="line">正则匹配需要排除的文件，忽略大小写。</span><br><span class="line">-t , –timeout</span><br><span class="line">设置超时时间，如果为0，则无限期地执行下去。</span><br><span class="line">-e , –event</span><br><span class="line">指定监视的事件。</span><br><span class="line">-c, –csv</span><br><span class="line">输出csv格式。</span><br><span class="line">–timefmt</span><br><span class="line">指定时间格式，用于–format选项中的%T格式。</span><br><span class="line">–format</span><br><span class="line">指定输出格式。</span><br><span class="line"><span class="meta">%</span><span class="bash">w 表示发生事件的目录</span></span><br><span class="line"><span class="meta">%</span><span class="bash">f 表示发生事件的文件</span></span><br><span class="line"><span class="meta">%</span><span class="bash">e 表示发生的事件</span></span><br><span class="line"><span class="meta">%</span><span class="bash">Xe 事件以“X”分隔</span></span><br><span class="line"><span class="meta">%</span><span class="bash">T 使用由–timefmt定义的时间格式</span></span><br></pre></td></tr></table></figure><p>可监听事件</p><table><thead><tr><th>access</th><th>文件读取</th></tr></thead><tbody><tr><td>modify</td><td>文件更改。</td></tr><tr><td>attrib</td><td>文件属性更改，如权限，时间戳等。</td></tr><tr><td>close_write</td><td>以可写模式打开的文件被关闭，不代表此文件一定已经写入数据。</td></tr><tr><td>close_nowrite</td><td>以只读模式打开的文件被关闭。</td></tr><tr><td>close</td><td>文件被关闭，不管它是如何打开的。</td></tr><tr><td>open</td><td>文件打开。</td></tr><tr><td>moved_to</td><td>一个文件或目录移动到监听的目录，即使是在同一目录内移动，此事件也触发。</td></tr><tr><td>moved_from</td><td>一个文件或目录移出监听的目录，即使是在同一目录内移动，此事件也触发。</td></tr><tr><td>move</td><td>包括moved_to和 moved_from</td></tr><tr><td>move_self</td><td>文件或目录被移除，之后不再监听此文件或目录。</td></tr><tr><td>create</td><td>文件或目录创建</td></tr><tr><td>delete</td><td>文件或目录删除</td></tr><tr><td>delete_self</td><td>文件或目录移除，之后不再监听此文件或目录</td></tr><tr><td>unmount</td><td>文件系统取消挂载，之后不再监听此文件系统。</td></tr></tbody></table><p>案例：</p><p>通过ftp上传了两种不同的文件（ftp一直在工作中），比如：xxx.zip文件和xxx.dat文件，需要将xxx.dat文件移动到其他目录进行单独处理。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cat inotify.sh </span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">/usr/bin/inotifywait -mrq -e modify,attrib,close,moved_to,create,delete /test/ |while read files</span><br><span class="line">do</span><br><span class="line">mv /test/*.dat /test2/ &amp;&gt;/dev/null</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="4-inotifywatch使用"><a href="#4-inotifywatch使用" class="headerlink" title="4.inotifywatch使用"></a>4.inotifywatch使用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> inotifywatch -h</span></span><br><span class="line">inotifywatch [-hvzrqf] [-e ] [-t ] [-a ] [-d ] [ … ]</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line">-h, –help</span><br><span class="line">输出帮助信息</span><br><span class="line">-v, –verbose</span><br><span class="line">输出详细信息</span><br><span class="line">@</span><br><span class="line">排除不需要监视的文件，可以是相对路径，也可以是绝对路径。</span><br><span class="line">–fromfile</span><br><span class="line">从文件读取需要监视的文件或排除的文件，一个文件一行，排除的文件以@开头。</span><br><span class="line">-z, –zero</span><br><span class="line">输出表格的行和列，即使元素为空</span><br><span class="line">–exclude</span><br><span class="line">正则匹配需要排除的文件，大小写敏感。</span><br><span class="line">–excludei</span><br><span class="line">正则匹配需要排除的文件，忽略大小写。</span><br><span class="line">-r, –recursive</span><br><span class="line">监视一个目录下的所有子目录。</span><br><span class="line">-t , –timeout</span><br><span class="line">设置超时时间</span><br><span class="line">-e , –event</span><br><span class="line">只监听指定的事件。</span><br><span class="line">-a , –ascending</span><br><span class="line">以指定事件升序排列。</span><br><span class="line">-d , –descending</span><br><span class="line">以指定事件降序排列。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> inotifywatch -r -v -e modify,attrib,close,moved_to,create,delete /<span class="built_in">test</span>/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍inotify-tools工具套件的使用方法。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MySQL主键和外键</title>
    <link href="https://dsxlinux.github.io/2018/08/12/mysql-key/"/>
    <id>https://dsxlinux.github.io/2018/08/12/mysql-key/</id>
    <published>2018-08-12T10:57:43.000Z</published>
    <updated>2018-08-13T07:03:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL主键和外键。<br><a id="more"></a></p><h4 id="1-主键"><a href="#1-主键" class="headerlink" title="1.主键"></a>1.主键</h4><ul><li><p>什么是主键<br>主键是能确定一条记录的唯一标识。比如：一条记录包括身份正号，姓名，年龄。身份证号是唯一能确定你这个人的，其他都可能有重复，所以身份证号是主键。 </p></li><li><p>声明主键的方法<br>不设置主键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE t1(</span><br><span class="line"> id int not null,</span><br><span class="line"> name char(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><p>  带主键的<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE t1(</span><br><span class="line"> id int not null primary key,</span><br><span class="line"> name char(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>  复合主键<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE t1(</span><br><span class="line"> id int not null,</span><br><span class="line"> name char(20),</span><br><span class="line"> primary key (id,name)</span><br><span class="line">);</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">主键自增的</span><br><span class="line"> ```mysql</span><br><span class="line">mysql&gt; create table dd(  </span><br><span class="line">  id int primary key not null auto_increment,  </span><br><span class="line">  name varchar(20),  </span><br><span class="line">  time timestamp default current_timestamp  </span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>  创建完后再决定主键<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table t(</span><br><span class="line">  id int not null,</span><br><span class="line">  name varchar(200) not null,</span><br><span class="line">  time timestamp default current_timestamp</span><br><span class="line">);</span><br><span class="line">mysql&gt; alter table t add primary key (id);</span><br><span class="line">mysql&gt; alter table t drop primary key (id);</span><br></pre></td></tr></table></figure></p><h4 id="2-外键"><a href="#2-外键" class="headerlink" title="2.外键"></a>2.外键</h4><ul><li><p>什么是外键<br>一张表中有一个非主键的字段指向了别一张表中的主键，该字段叫做外键。<br>一张表中可以有多个外键。</p></li><li><p>外键作用<br>对子表(外键所在的表)的作用：子表在进行写操作的时候，如果外键字段在父表中找不到对应的匹配，操作就会失败。<br>对父表的作用：对父表的主键字段进行删和改时，如果对应的主键在子表中被引用，操作就会失败。</p></li><li><p>外键条件<br>表储存引擎必须是innodb，否则创建的外键无约束效果。<br>外键的列类型必须与父表的主键类型完全一致。<br>外键的名字不能重复。<br>已经存在数据的字段被设为外键时，必须保证字段中的数据与父表的主键数据对应起来。</p></li><li><p>新增外键<br>在创建时增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table province(</span><br><span class="line">pId int primary key auto_increment,</span><br><span class="line">pName varchar(20)</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   mysql&gt; create table user(</span><br><span class="line">userId int primary key auto_increment,</span><br><span class="line">userName varchar(40),</span><br><span class="line">pid int,</span><br><span class="line">foreign key(pid) references province(pId)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">mysql&gt; create table city(</span><br><span class="line">cityId int primary key auto_increment,</span><br><span class="line">cName varchar(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在创建好的表中增加</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table user add cityId int;</span><br><span class="line">mysql&gt; alter table user add foreign key(cityId) references city(cityId);</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table city add pid int;</span><br><span class="line">mysql&gt; alter table city add foreign key(pid) references province(pId);</span><br></pre></td></tr></table></figure></li></ul><ul><li>删除外键<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table tablename drop foreign key 外键名字;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL主键和外键。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据类型</title>
    <link href="https://dsxlinux.github.io/2018/08/12/mysql-datatype/"/>
    <id>https://dsxlinux.github.io/2018/08/12/mysql-datatype/</id>
    <published>2018-08-12T10:21:19.000Z</published>
    <updated>2018-08-12T10:31:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL各数据类型的、大小及长度。<br><a id="more"></a></p><h4 id="1-数字型"><a href="#1-数字型" class="headerlink" title="1.数字型"></a>1.数字型</h4><table><thead><tr><th><strong>类型</strong></th><th><strong>大小</strong></th><th><strong>范围（有符号）</strong></th><th><strong>范围（无符号）</strong></th><th><strong>用途</strong></th></tr></thead><tbody><tr><td>TINYINT</td><td>1 字节</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 字节</td><td>(-32 768，32 767)</td><td>(0，65 535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 字节</td><td>(-8 388 608，8 388 607)</td><td>(0，16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 字节</td><td>(-2 147 483 648，2 147 483 647)</td><td>(0，4 294 967 295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 字节</td><td>(-9 233 372 036 854 775 808，9 223 372 036 854 775 807)</td><td>(0，18 446 744 073 709 551 615)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4 字节</td><td>(-3.402 823 466 E+38，1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td>0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td>单精度 浮点数值</td></tr><tr><td>DOUBLE</td><td>8 字节</td><td>(1.797 693 134 862 315 7 E+308，2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>双精度 浮点数值</td></tr><tr><td>DECIMAL</td><td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>小数值</td></tr></tbody></table><h4 id="2-字符类型"><a href="#2-字符类型" class="headerlink" title="2.字符类型"></a>2.字符类型</h4><table><thead><tr><th>CHAR</th><th>0-255字节</th><th>定长字符串</th></tr></thead><tbody><tr><td>VARCHAR</td><td>0-255字节</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255字节</td><td>不超过 255 个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0-255字节</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535字节</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535字节</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215字节</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215字节</td><td>中等长度文本数据</td></tr><tr><td>LOGNGBLOB</td><td>0-4 294 967 295字节</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295字节</td><td>极大文本数据</td></tr></tbody></table><h4 id="3-时间类型"><a href="#3-时间类型" class="headerlink" title="3.时间类型"></a>3.时间类型</h4><table><thead><tr><th><strong>类型</strong></th><th><strong>大小(字节)</strong></th><th><strong>范围</strong></th><th><strong>格式</strong></th><th><strong>用途</strong></th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01/9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>‘-838:59:59’/‘838:59:59’</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901/2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00/9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>8</td><td>1970-01-01 00:00:00/2037 年某时</td><td>YYYYMMDD HHMMSS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h4 id="4-枚举集合"><a href="#4-枚举集合" class="headerlink" title="4.枚举集合"></a>4.枚举集合</h4><table><thead><tr><th>类型</th><th>范围</th><th>大小</th></tr></thead><tbody><tr><td>ENUM</td><td>最多65535个成员</td><td>64KB</td></tr><tr><td>SET</td><td>最多64个成员</td><td>64KB</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL各数据类型的、大小及长度。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库备份</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-backup/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-backup/</id>
    <published>2018-08-10T08:46:01.000Z</published>
    <updated>2018-09-13T08:54:38.979Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL数据库备份的方法。<br><a id="more"></a></p><h4 id="mysqldump备份方法"><a href="#mysqldump备份方法" class="headerlink" title="mysqldump备份方法"></a>mysqldump备份方法</h4><p>mysqldump备份提供三种级别的备份：表级，库级和全库级。<br>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">建立一个存放备份的目录</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mkdir /tmp/mysqlbackup</span></span><br><span class="line">改权限</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysql.mysql /tmp/mysqlbackup/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> man mysqldump</span></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump [options] db_name [tables]<span class="comment"># 表级</span></span></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump [options] --database DB1 [DB2 DB3...]<span class="comment"># 库级</span></span></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump [options] --all-databases<span class="comment"># 全库级</span></span></span><br><span class="line"></span><br><span class="line">全库备份：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 --all-databases &gt; /tmp/mysqlbackup/all.sql</span></span><br><span class="line">全库还原：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysql_install_db --datadir=/data --user=mysql    <span class="comment"># 可能需要重新初始化，具体的要看情况</span></span></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysql -u root -p &lt; /tmp/mysqlbackup/all.sql</span></span><br><span class="line"></span><br><span class="line">库级备份：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 --database db1 &gt; /tmp/mysqlbackup/db1.sql</span></span><br><span class="line">库级还原:</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysql -u root -p &lt; /tmp/mysqlbackup/db1.sql </span></span><br><span class="line"></span><br><span class="line">表级备份：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 db1 emp &gt; /tmp/mysqlbackup/emp.sql</span></span><br><span class="line">表级还原：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysql -uroot -p123456 db1 &lt; /tmp/mysqlbackup/emp.sql</span></span><br><span class="line"></span><br><span class="line">只备份表结构：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 --no-data db1 emp&gt; /tmp/mysqlbackup/emp.sql</span></span><br><span class="line"></span><br><span class="line">某些表不备份</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 --ignore-table=db1.emp1 --ignore-table=db1.emp2 db1 emp&gt; /tmp/mysqlbackup/emp.sql</span></span><br><span class="line"></span><br><span class="line">跨主机备份:</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash">  mysqldump -uroot -p123456 --opt --database db1 | mysql -h 192.168.0.214 -uroot -p123456 -C db1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 远程数据库上要存在db1这个库才能备份过去，否则会报错。</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL数据库备份的方法。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之DQL</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-dql/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-dql/</id>
    <published>2018-08-10T06:07:19.000Z</published>
    <updated>2018-09-14T02:28:26.352Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之DML(data query language)操作。<br><a id="more"></a></p><h4 id="1-数据查询语言"><a href="#1-数据查询语言" class="headerlink" title="1.数据查询语言"></a>1.数据查询语言</h4><p>用户能够查询数据库以及操作已有数据库中的数据。主要是SELECT。</p><h4 id="2-SELECT查询"><a href="#2-SELECT查询" class="headerlink" title="2.SELECT查询"></a>2.SELECT查询</h4><ul><li>常规查询<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 准备好2个表格：</span><br><span class="line">mysql&gt; create table emp  (empno int ,ename varchar(20), sex char(1),birthday date , hiredate date, sal decimal(10,2), deptno tinyint(1), managerno int) engine=memory default charset=utf8;</span><br><span class="line">mysql&gt; create table dept (deptno tinyint(1),deptname varchar(30),location varchar(50));</span><br><span class="line">mysql&gt; insert into emp values (1,&apos;boss&apos;,&apos;m&apos;,&apos;1964-08-08&apos;,&apos;1995-01-01&apos;,&apos;20000&apos;,&apos;1&apos;,&apos;1&apos;),(2,&apos;zhangsan&apos;,&apos;m&apos;,&apos;1967-04-05&apos;,&apos;1995-04-11&apos;,&apos;15000&apos;,&apos;2&apos;,&apos;1&apos;),(3,&apos;lisi&apos;,&apos;f&apos;,&apos;1973-01-28&apos;,&apos;1998-11-21&apos;,&apos;13000&apos;,&apos;3&apos;,&apos;1&apos;),(4,&apos;wangwu&apos;,&apos;f&apos;,&apos;1975-06-03&apos;,&apos;1999-12-12&apos;,&apos;12000&apos;,&apos;4&apos;,&apos;1&apos;),(5,&apos;maliu&apos;,&apos;m&apos;,&apos;1982-08-18&apos;,&apos;2001-07-03&apos;,&apos;8000&apos;,&apos;2&apos;,&apos;2&apos;),(6,&apos;tianqi&apos;,&apos;f&apos;,&apos;1983-02-15&apos;,&apos;2002-11-01&apos;,&apos;7000&apos;,&apos;2&apos;,&apos;2&apos;),(7,&apos;mark&apos;,&apos;m&apos;,&apos;1984-08-12&apos;,&apos;2003-10-02&apos;,&apos;6500&apos;,&apos;3&apos;,&apos;3&apos;),(8,&apos;john&apos;,&apos;m&apos;,&apos;1985-09-14&apos;,&apos;2005-04-03&apos;,&apos;6000&apos;,&apos;3&apos;,&apos;3&apos;),(9,&apos;mm&apos;,&apos;f&apos;,&apos;1990-06-08&apos;,&apos;2008-09-13&apos;,&apos;4000&apos;,&apos;4&apos;,&apos;4&apos;);</span><br><span class="line">mysql&gt; insert into dept values (1,&apos;manager&apos;,&apos;beijing&apos;),(2,&apos;it&apos;,&apos;shenzhen&apos;), (3,&apos;sale&apos;,&apos;shanghai&apos;), (4,&apos;services&apos;,&apos;guangzhou&apos;);</span><br><span class="line"></span><br><span class="line"># 查看所有列，不推荐这么查询</span><br><span class="line">mysql&gt; select * from emp;</span><br><span class="line"># 查看其中几列</span><br><span class="line">mysql&gt; select ename,sal from emp limit 3;</span><br><span class="line"># 去除重复行</span><br><span class="line">mysql&gt; select distinct deptno from emp;</span><br><span class="line"></span><br><span class="line"># 查询所有男员工的姓名和工资</span><br><span class="line">mysql&gt; select ename,sal from emp where sex=&apos;m&apos;;</span><br><span class="line"># 查询工资大于8000的员工的所有信息</span><br><span class="line">mysql&gt; select * from emp where sal&gt;8000;</span><br><span class="line"># 查询工资在4000到8000之间的员工的所有信息（包含4000和8000的)</span><br><span class="line">mysql&gt; select * from emp where sal&gt;=4000 and sal&lt;=8000;</span><br><span class="line">mysql&gt; select * from emp where sal between 4000 and 8000;</span><br><span class="line">查询入职时间在2001那年的员工的所有信息</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from emp where hiredate&gt;=&quot;2001-01-01&quot; and hiredate&lt;=&quot;2001-12-31&quot;;</span><br><span class="line">mysql&gt; select * from emp where hiredate like &quot;2001%&quot;;</span><br><span class="line">mysql&gt; select * from emp where year(hiredate)=2001;</span><br><span class="line">mysql&gt; select * from emp where substr(hiredate,1,4)=2001;</span><br><span class="line">mysql&gt; select * from emp where hiredate regexp &apos;2001.*&apos;;</span><br></pre></td></tr></table></figure></li></ul><ul><li>排序<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">  # 最大工资，最小工资</span><br><span class="line">  mysql&gt; select * from emp order by sal;# 以工资排序，默认升序排序</span><br><span class="line">  mysql&gt; select * from emp order by sal asc; # 加不加asc都是升序（ascend)</span><br><span class="line">  mysql&gt; select * from emp order by sal desc;# desc表示降序排序(descend)</span><br><span class="line"></span><br><span class="line">  mysql&gt; select * from emp order by sex,sal;</span><br><span class="line">  # 先按性别排，再按工资排。结果是女的都在一起，以工资从小到大排。男的都在一起，以工资从小到大排。</span><br><span class="line">  mysql&gt; select * from emp order by sex desc,sal desc;</span><br><span class="line"></span><br><span class="line">  # 找出工资最低的三个人的姓名和工资</span><br><span class="line">  mysql&gt; select * from emp order by sal limit 3;</span><br><span class="line"></span><br><span class="line">  # 找出工资最高的三个人的姓名和工资</span><br><span class="line">  mysql&gt; select * from emp order by sal desc limit 3;</span><br><span class="line"></span><br><span class="line">  找出工资最低的女员工的姓名和工资</span><br><span class="line">  mysql&gt; select ename,sal from emp where sex=&apos;f&apos; order by sal limit 1;</span><br><span class="line">  </span><br><span class="line">  #where和order by一起使用时，where在前，order by在后</span><br><span class="line"></span><br><span class="line">  # 找出工资从高到低第三到第五的人的姓名和工资</span><br><span class="line"></span><br><span class="line">  mysql&gt; select ename,sal from emp order by sal desc limit 2,3;   # 从0开始，2是第三，3是三个人</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">- 聚合和分组操作</span><br><span class="line">```mysql</span><br><span class="line">  # 统计记录条数</span><br><span class="line">  mysql&gt; select count(*) from emp;</span><br><span class="line">  mysql&gt; select count(distinct deptno) from emp;</span><br><span class="line">  # 别名</span><br><span class="line">  mysql&gt; select count(distinct deptno) deptcount from emp;</span><br><span class="line">  </span><br><span class="line">  # 统计每个部门的人数</span><br><span class="line">  mysql&gt; select deptno,count(*) from emp group by deptno;</span><br><span class="line">  </span><br><span class="line">  # 统计男，女员工各有多少人</span><br><span class="line">  mysql&gt; select sex,count(*) from emp group by sex;</span><br><span class="line"></span><br><span class="line">  # 统计每个部门里男女员工各有多少个</span><br><span class="line">  mysql&gt; select deptno,sex,count(*) from emp group by deptno,sex;</span><br><span class="line"></span><br><span class="line">  # 查找部门人数大于2的部门号和人数</span><br><span class="line">  mysql&gt; select deptno,count(*) from emp group by deptno having count(*) &gt;2;</span><br><span class="line"></span><br><span class="line">  # 求每个部门的工资总额，最大工资，最小工资，平均工资</span><br><span class="line">  mysql&gt; select deptno,sum(sal),max(sal),min(sal),avg(sal) from emp group by deptno;</span><br></pre></td></tr></table></figure></li></ul><ul><li>表链接（多表查询)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 查出员工姓名和其对应的工资，部门名，部门所在地，并显示</span><br><span class="line"></span><br><span class="line">mysql&gt; select ename,sal,deptname,location from emp,dept where emp.deptno=dept.deptno;</span><br></pre></td></tr></table></figure></li></ul><ul><li>join连接<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">INNER JOIN（内连接）：取得两个表中存在连接匹配关系的记录。</span><br><span class="line">mysql&gt; select a.ename,a.sal,b.deptname,b.location from emp a INNER JOIN dept b on a.deptno=b.deptno;</span><br><span class="line"></span><br><span class="line">为了看到【左连接】和【右连接】的效果，插入两条数据：</span><br><span class="line">mysql&gt; insert into dept(deptno, deptname, location) values (5,&apos;Administration&apos;,&apos;beijing&apos;);   # 加一个行政部</span><br><span class="line">mysql&gt; insert into dept(deptno, deptname, location) values (6,&apos;technology&apos;,&apos;shenzhen&apos;);      # 加一个技术部</span><br><span class="line"></span><br><span class="line">LEFT JOIN（左连接）：取得左表（table1）完全记录，即是右表（table2）并无对应匹配记录</span><br><span class="line">mysql&gt; select * from emp left join dept on emp.deptno=dept.deptno;</span><br><span class="line"></span><br><span class="line">RIGHT JOIN（右连接）：与 LEFT JOIN 相反，取得右表（table2）完全记录，即是左表（table1）并无匹配对应记录</span><br><span class="line">mysql&gt; select * from emp right join dept on emp.deptno=dept.deptno;</span><br></pre></td></tr></table></figure></li></ul><ul><li>子查询<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 查出比wangwu工资高的人的姓名和工资</span><br><span class="line"></span><br><span class="line">mysql&gt; select ename,sal from emp where sal&gt;(select sal from emp where ename=&apos;wangwu&apos;);</span><br></pre></td></tr></table></figure></li></ul><ul><li>复制一个表：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table emp1 like emp;</span><br><span class="line">mysql&gt; insert into emp1 select * from emp;</span><br><span class="line">或者</span><br><span class="line">mysql&gt; create table emp2 select * from emp;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之DML(data query language)操作。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之DCL</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-dcl/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-dcl/</id>
    <published>2018-08-10T03:20:08.000Z</published>
    <updated>2018-08-30T09:02:56.181Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之DCL(data control language)操作。<br><a id="more"></a></p><h4 id="1-MySQL数据控制语言"><a href="#1-MySQL数据控制语言" class="headerlink" title="1.MySQL数据控制语言"></a>1.MySQL数据控制语言</h4><p>用来定义数据库的访问权限和安全级别，及创建用户。包括GRANT、REVOKE等。</p><h4 id="2-GRANT语句"><a href="#2-GRANT语句" class="headerlink" title="2.GRANT语句"></a>2.GRANT语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建用户和授权</span><br><span class="line">mysql&gt; create user &apos;jerry&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;</span><br><span class="line">mysql&gt; grant select,insert on db1.emp to &apos;jerry&apos;@&apos;localhost&apos;;</span><br><span class="line"></span><br><span class="line"># 直接授权</span><br><span class="line">mysql&gt; grant select,insert on db1.emp to &apos;jerry&apos;@&apos;localhost&apos; identified by &apos;123456&apos; with grant option;</span><br><span class="line"># with grant option表示允许用户将自己的权限授权给其它用户</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>  <strong>有哪些权限可以用于授权？</strong></p><table><thead><tr><th>Privilege</th><th>Column</th><th>Context</th></tr></thead><tbody><tr><td>ALL</td><td><code>Synonym for “all privileges”</code></td><td>Server administration</td></tr><tr><td>ALTER</td><td><code>Alter_priv</code></td><td>Tables</td></tr><tr><td>ALTER ROUTINE</td><td><code>Alter_routine_priv</code></td><td>Stored routines</td></tr><tr><td>CREATE</td><td><code>Create_priv</code></td><td>Databases, tables, or indexes</td></tr><tr><td>CREATE ROUTINE</td><td><code>Create_routine_priv</code></td><td>Stored routines</td></tr><tr><td>CREATE TABLESPACE</td><td><code>Create_tablespace_priv</code></td><td>Server administration</td></tr><tr><td>CREATE TEMPORARY TABLES</td><td><code>Create_tmp_table_priv</code></td><td>Tables</td></tr><tr><td>CREATE USER</td><td><code>Create_user_priv</code></td><td>Server administration</td></tr><tr><td>CREATE VIEW</td><td><code>Create_view_priv</code></td><td>Views</td></tr><tr><td>DELETE</td><td><code>Delete_priv</code></td><td>Tables</td></tr><tr><td>DROP</td><td><code>Drop_priv</code></td><td>Databases, tables, or views</td></tr><tr><td>EVENT</td><td><code>Event_priv</code></td><td>Databases</td></tr><tr><td>EXECUTE</td><td><code>Execute_priv</code></td><td>Stored routines</td></tr><tr><td>FILE</td><td><code>File_priv</code></td><td>File access on server host</td></tr><tr><td>GRANT OPTION</td><td><code>Grant_priv</code></td><td>Databases, tables, or stored routines</td></tr><tr><td>INDEX</td><td><code>Index_priv</code></td><td>Tables</td></tr><tr><td>INSERT</td><td><code>Insert_priv</code></td><td>Tables or columns</td></tr><tr><td>LOCK TABLES</td><td><code>Lock_tables_priv</code></td><td>Databases</td></tr><tr><td>PROCESS</td><td><code>Process_priv</code></td><td>Server administration</td></tr><tr><td>PROXY</td><td>See <code>proxies_priv</code> table</td><td>Server administration</td></tr><tr><td>REFERENCES</td><td><code>References_priv</code></td><td>Databases or tables</td></tr><tr><td>RELOAD</td><td><code>Reload_priv</code></td><td>Server administration</td></tr><tr><td>REPLICATION CLIENT</td><td><code>Repl_client_priv</code></td><td>Server administration</td></tr><tr><td>REPLICATION SLAVE</td><td><code>Repl_slave_priv</code></td><td>Server administration</td></tr><tr><td>SELECT</td><td><code>Select_priv</code></td><td>Tables or columns</td></tr><tr><td>SHOW DATABASES</td><td><code>Show_db_priv</code></td><td>Server administration</td></tr><tr><td>SHOW VIEW</td><td><code>Show_view_priv</code></td><td>Views</td></tr><tr><td>SHUTDOWN</td><td><code>Shutdown_priv</code></td><td>Server administration</td></tr><tr><td>SUPER</td><td><code>Super_priv</code></td><td>Server administration</td></tr><tr><td>TRIGGER</td><td><code>Trigger_priv</code></td><td>Tables</td></tr><tr><td>UPDATE</td><td><code>Update_priv</code></td><td>Tables or columns</td></tr><tr><td>USAGE</td><td><code>Synonym for “no privileges”</code></td><td>Server administration</td></tr></tbody></table><h4 id="3-REVOKE语句"><a href="#3-REVOKE语句" class="headerlink" title="3.REVOKE语句"></a>3.REVOKE语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 创建用户和授权</span><br><span class="line">mysql&gt; revoke select on db1.emp from &apos;jerry&apos;@&apos;localhost&apos;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h4 id="4-查看权限"><a href="#4-查看权限" class="headerlink" title="4.查看权限"></a>4.查看权限</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看权限</span><br><span class="line">mysql&gt; show grants for &apos;jerry&apos;@&apos;localhost&apos;;</span><br></pre></td></tr></table></figure><h4 id="5-删除用户"><a href="#5-删除用户" class="headerlink" title="5.删除用户"></a>5.删除用户</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user &apos;jerry&apos;@&apos;localhost&apos;;</span><br></pre></td></tr></table></figure><h4 id="6-创建用户授权"><a href="#6-创建用户授权" class="headerlink" title="6.创建用户授权"></a>6.创建用户授权</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select host,user,password from mysql.user;//mysql5.7之前</span><br><span class="line">mysql&gt; select host,user,authentication_string from mysql.user;//mysql5.7之后</span><br><span class="line">mysql&gt; create user test identified by &apos;123456&apos;;</span><br><span class="line">mysql&gt; grant all privileges on *.* to &apos;test&apos;@&apos;%&apos;identified by &apos;123456&apos; with grant option; </span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; set global validate_password_policy=0;</span><br><span class="line">mysql&gt; set global validate_password_length=1;</span><br><span class="line">mysql&gt; ALTER USER USER() IDENTIFIED BY &apos;12345678&apos;;</span><br><span class="line">mysql&gt; SET PASSWORD = PASSWORD(&apos;new password&apos;);</span><br><span class="line">mysql&gt; delete from mysql.user where User=&apos;test&apos; and Host=&apos;localhost&apos;;</span><br><span class="line"></span><br><span class="line">mysql&gt; CREATE USER &apos;jerry&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123456&apos; PASSWORD EXPIRE INTERVAL 180 DAY;</span><br><span class="line">mysql&gt; alter user &apos;tom&apos;@&apos;localhost&apos; password expire interval 30 day;</span><br><span class="line">mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; PASSWORD EXPIRE NEVER;</span><br><span class="line">mysql&gt; set password for &apos;tom&apos;@&apos;localhost&apos; =  &apos;12345678&apos;;</span><br><span class="line">mysql&gt; ALTER USER &apos;tom&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;654321&apos;;</span><br><span class="line">mysql&gt; update mysql.user set authentication_string=password(&apos;123456&apos;) where user=&apos;tom&apos;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之DCL(data control language)操作。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之DML</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-dml/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-dml/</id>
    <published>2018-08-10T02:47:31.000Z</published>
    <updated>2018-08-23T09:12:06.522Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之DML(data manipulate language)操作。<br><a id="more"></a></p><h4 id="1-数据操纵语言"><a href="#1-数据操纵语言" class="headerlink" title="1.数据操纵语言"></a>1.数据操纵语言</h4><p>DML主要是对数据库里的数据进行操作的语言。包括INSERT、UPDATE、DELETE等。</p><h4 id="2-INSERT语句"><a href="#2-INSERT语句" class="headerlink" title="2.INSERT语句"></a>2.INSERT语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table emp  (empno int ,ename varchar(20), sex char(1),birthday date , hiredate date, sal decimal(10,2), deptno tinyint(1), managerno int) engine=memory default charset=utf8;</span><br><span class="line">mysql&gt; create table dept (deptno tinyint(1),deptname varchar(30),location varchar(50));</span><br><span class="line">mysql&gt; insert into dept values (1,&apos;manager&apos;,&apos;beijing&apos;),(2,&apos;it&apos;,&apos;shenzhen&apos;), (3,&apos;sale&apos;,&apos;shanghai&apos;), (4,&apos;services&apos;,&apos;guangzhou&apos;);</span><br><span class="line"></span><br><span class="line"># 插入单条数据</span><br><span class="line">mysql&gt; insert into emp values (1,&apos;boss&apos;,&apos;m&apos;,&apos;1964-08-08&apos;,&apos;1995-01-01&apos;,&apos;20000&apos;,&apos;1&apos;,&apos;1&apos;);</span><br><span class="line"># 插入多条数据</span><br><span class="line">mysql&gt;insert into emp values</span><br><span class="line">  -&gt; (1,&apos;boss&apos;,&apos;m&apos;,&apos;1964-08-08&apos;,&apos;1995-01-01&apos;,&apos;20000&apos;,&apos;1&apos;,&apos;1&apos;),</span><br><span class="line">  -&gt;(2,&apos;zhangsan&apos;,&apos;m&apos;,&apos;1967-04-05&apos;,&apos;1995-04-11&apos;,&apos;15000&apos;,&apos;2&apos;,&apos;1&apos;);</span><br><span class="line"># 还可以插入特定的列（非所有列），那么没有插入的就成了空值（空值不是0，它做任何运算结果还是空值)</span><br><span class="line">mysql&gt; insert into emp (ename,sex) values (&apos;lisi&apos;,&apos;m&apos;);</span><br><span class="line"># 从其他表中查询到数据后插入</span><br><span class="line">mysql&gt; insert into emp (ename,sex) select ename,sex from emp1 limit 2;</span><br></pre></td></tr></table></figure><h4 id="3-UPDATE语句"><a href="#3-UPDATE语句" class="headerlink" title="3.UPDATE语句"></a>3.UPDATE语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 把wangwu性别改成m</span><br><span class="line">mysql&gt; update emp set sex=&apos;m&apos; where ename=&apos;wangwu&apos;;</span><br><span class="line"></span><br><span class="line"># wangwu的工资加500</span><br><span class="line">mysql&gt; update emp set sal=sal+500 where ename=&apos;wangwu&apos;;</span><br><span class="line"></span><br><span class="line"># 2号部门的所有员工工资涨10%</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where deptno=2;</span><br><span class="line"></span><br><span class="line"># mark由3号部门换成2号部门，同时工资加1000</span><br><span class="line">mysql&gt; update emp set deptno=2 and sal=sal+1000 where ename=&apos;mark&apos;;--错误写法，两个执行动作不能用and</span><br><span class="line">mysql&gt; update emp set deptno=2,sal=sal+1000 where ename=&apos;mark&apos;;--正确写法</span><br><span class="line"></span><br><span class="line"># 工资就john和mark涨10%,其它人不涨</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where ename=&apos;john&apos; or  ename=&apos;mark&apos;;</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where ename in (&apos;john&apos;,&apos;mark&apos;);</span><br><span class="line"></span><br><span class="line"># 工资都涨10%，john和mark犯错误，就他们不涨</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where ename!=&apos;john&apos; and  ename!=&apos;mark&apos;</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where ename not in (&apos;john&apos;,&apos;mark&apos;);</span><br></pre></td></tr></table></figure><h4 id="4-DELETE语句"><a href="#4-DELETE语句" class="headerlink" title="4.DELETE语句"></a>4.DELETE语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 指定条件删除</span><br><span class="line">mysql&gt; delete from emp where empno=9;</span><br><span class="line"># 不指定条件删除</span><br><span class="line">mysql&gt; delete from emp;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之DML(data manipulate language)操作。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之DDL</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-ddl/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-ddl/</id>
    <published>2018-08-10T01:50:31.000Z</published>
    <updated>2018-08-30T09:39:32.389Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之DDL(data define language)操作。<br><a id="more"></a></p><h4 id="1-MySQL数据定义语言"><a href="#1-MySQL数据定义语言" class="headerlink" title="1.MySQL数据定义语言"></a>1.MySQL数据定义语言</h4><p>用于定义和管理数据对象，包括数据库、数据表等。包括CREATE、DROP、ALTER、TRUNCATE、RENAME等。</p><h4 id="2-CREATE语句"><a href="#2-CREATE语句" class="headerlink" title="2. CREATE语句"></a>2. CREATE语句</h4><ul><li><p>CREATE DATABASE建库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 建库语句</span><br><span class="line">mysql&gt; CREATE DATABASE IF NOT EXISTS db1 DEFAULT CHARACTER SET UTF8;</span><br><span class="line"># 其中有一部分可以省略</span><br><span class="line">mysql&gt; CREATE DATABASE db1;</span><br><span class="line"># 查看系统是如何建库的</span><br><span class="line">mysql&gt; SHOW CREATE DATABASE db1;</span><br></pre></td></tr></table></figure></li><li><p>CREATE TABLE建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 建表语句</span><br><span class="line">mysql&gt; CREATE TABLE IF NOT EXISTS emp(id int) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line">mysql&gt; CREATE TABLE IF NOT EXISTS emp1(ID INT NOT NULL DEFAULT 1, NAME CHAR);</span><br><span class="line">mysql&gt; CREATE TABLE IF NOT EXISTS emp2(ID INT NOT NULL AUTO_INCREMENT, NAME CHAR);</span><br><span class="line"># 其中有一部分可以省略</span><br><span class="line">mysql&gt; CREATE TABLE emp(id int);</span><br><span class="line"># 查看系统是如何建表的</span><br><span class="line">mysql&gt; SHOW CREATE TABLE emp;</span><br><span class="line"># 使用like建表，快速建立相同表结构的表</span><br><span class="line"># CREATE TABLE imp LIKE emp;</span><br><span class="line"># DESC emp;</span><br><span class="line"># DESC imp;</span><br></pre></td></tr></table></figure></li><li><p>CREATE USER建用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个用户</span><br><span class="line">mysql&gt; CREATE USER &apos;jeffrey&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;new_password&apos; PASSWORD EXPIRE;</span><br><span class="line"># 查看系统是如何创建的</span><br><span class="line">mysql&gt; SHOW CREATE USER &apos;jeffrey&apos;@&apos;localhost&apos;;</span><br><span class="line"># 创建一个用户，指定过期时间</span><br><span class="line">mysql&gt; CREATE USER &apos;tom&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;new_password&apos; PASSWORD EXPIRE INTERVAL 180 DAY;</span><br><span class="line"># 查看系统是如何创建的</span><br><span class="line">mysql&gt; SHOW CREATE USER &apos;tom&apos;@&apos;localhost&apos;;</span><br><span class="line"># 查看user.assword_last_changed 列来看对应账号密码的最近一次的修改时间</span><br><span class="line">mysql&gt; select user,host,password_expired,password_last_changed,password_lifetime from mysql.user;</span><br></pre></td></tr></table></figure></li></ul><ul><li>CREATE VIEW建视图<br>视图是一个虚拟存在的表，视图的使用方式与表的使用方式一致，不需要实际上的物理存储，数据还是存储在原来的表里。<br>视图可以只展现数据表的一部分数据，对于我们不希望让用户看到全部数据，只希望用户看到部分数据的时候，可以选择使用视图。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 创建视图</span><br><span class="line">mysql&gt; create view emp_view as SELECT * from emp;</span><br><span class="line"># 查看视图表结构</span><br><span class="line">mysql&gt; desc emp_view;</span><br><span class="line"># 查看视图内容</span><br><span class="line">mysql&gt; select * from emp_view limit 1;</span><br><span class="line"># 修改视图</span><br><span class="line">msyql&gt; alter view emp_view as SELECT * FROM emp;</span><br><span class="line">mysql&gt; UPDATE emp_view set ename=&apos;lisi&apos; WHERE ename=&apos;zhangsan&apos;;</span><br><span class="line"># 删除视图</span><br><span class="line">mysql&gt; drop view emp_view;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-ALTER语句"><a href="#3-ALTER语句" class="headerlink" title="3. ALTER语句"></a>3. ALTER语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 建一个测试表</span><br><span class="line">mysql&gt; create table emp  ( ename varchar(20), sex char(1), hiredate date, sal decimal(10,2), deptno tinyint(1)) engine=memory default charset=utf8;</span><br><span class="line">mysql&gt; SHOW COLUMNS FROM emp;</span><br><span class="line"># 修改存储引擎</span><br><span class="line">mysql&gt; ALTER TABLE emp ENGINE=Innodb;</span><br><span class="line"># 修改字符集</span><br><span class="line">mysql&gt; ALTER TABLE emp DEFAULT CHARSET=utf8;</span><br><span class="line"># 修改库字符集</span><br><span class="line">mysql&gt; alter database db1 character set utf8;</span><br><span class="line"># 增加一个列，默认增加到最后</span><br><span class="line">mysql&gt; alter table emp add  age tinyint(1);</span><br><span class="line">mysql&gt; SHOW COLUMNS FROM emp;</span><br><span class="line"># 删除某一列</span><br><span class="line">mysql&gt; alter table emp drop age;</span><br><span class="line">在hiredate这列后面增加一列，使用after关键字</span><br><span class="line">mysql&gt; alter table emp add  manager varchar(30) after hiredate;</span><br><span class="line"># 把一列加到最前面，使用first关键字</span><br><span class="line">mysql&gt; alter table emp add  manager varchar(30) first; </span><br><span class="line"># 使用modify修改一列的数据类型</span><br><span class="line">mysql&gt; alter table emp  modify manager varchar(40);</span><br><span class="line"># 修改列名要使用change去修改</span><br><span class="line">mysql&gt; alter table emp  change manager boss varchar(30);  --</span><br><span class="line"># modify和change的区别，都可以修改数据类型，但change要写原列名;只有change可以修改列名，modify不可以</span><br></pre></td></tr></table></figure><h4 id="4-其他DDL语句"><a href="#4-其他DDL语句" class="headerlink" title="4.其他DDL语句"></a>4.其他DDL语句</h4><ul><li>TRUNCATE语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 截断表，清空了表内的所有数据，但是表的结构还在</span><br><span class="line">mysql&gt; truncate table emp;</span><br></pre></td></tr></table></figure></li></ul><ul><li>RENAME语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改表的名字</span><br><span class="line">mysql&gt; rename table emp to emp1;</span><br></pre></td></tr></table></figure></li></ul><ul><li>DROP语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 删库</span><br><span class="line">mysql&gt; DROP DATABASE IF EXISTS db1;</span><br><span class="line"># 删表</span><br><span class="line">mysql&gt; DROP TABLE IF EXISTS emp;</span><br><span class="line"># 删视图</span><br><span class="line">mysql&gt; drop view emp_view;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之DDL(data define language)操作。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之列属性和索引</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-columns/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-columns/</id>
    <published>2018-08-10T01:50:31.000Z</published>
    <updated>2018-08-23T09:06:36.197Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之列属性。<br><a id="more"></a></p><h4 id="1-关于列属性"><a href="#1-关于列属性" class="headerlink" title="1.关于列属性"></a>1.关于列属性</h4><p>  MySQL中，真正约束字段的是数据类型，但是数据类型的约束太单一，需要有一些额外的约束，来更加保证数据的合法性。<br>  MySQL中的常用列属性有：null、not null、default、primary key、auto_increment和comment。</p><h4 id="2-列属性"><a href="#2-列属性" class="headerlink" title="2.列属性"></a>2.列属性</h4><ul><li><p>空属性<br>两个值：NULL(默认的)/NOT NULL(不为空) 虽然默认的，数据库基本都是字段为空，但是实际上在真实开发的时候，尽可能的要保证所有的数据都不应该为空：空数据没有意义;空数据没有办法参与运算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table user(id varchar(40) not null, name varchar(20) not null,age tinyint,address varchar(40) null,gender enum(&apos;boy&apos;,&apos;girl&apos;,&apos;secret&apos;) default &apos;secret&apos;);</span><br></pre></td></tr></table></figure></li><li><p>列描述<br>列描述 ：comment描述，没有实际含义：是专门用来描述字段，会根据表创建语句保存：用来给程序猿(数据库管理员)来进行了解的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table user(id varchar(40) not null comment &apos;身份证号&apos;, name varchar(20) not null comment &apos;姓名&apos;,age tinyint comment &apos;年龄&apos;,address varchar(40) null comment &apos;地址&apos;,gender enum(&apos;boy&apos;,&apos;girl&apos;,&apos;secret&apos;) default &apos;secret&apos; comment &apos;性别&apos;);</span><br><span class="line">mysql&gt; show full columns from user;</span><br></pre></td></tr></table></figure></li></ul><ul><li>默认值<br>默认值：某一种数据会经常性的出现某个具体的值，可以在一开始就指d定好，在需要真实数据的时候，用户可以选择性的使用默认值 默认值关键字：default<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table user(id varchar(40) not null comment &apos;身份证号&apos;, name varchar(20) not null comment &apos;姓名&apos;,age tinyint comment &apos;年龄&apos;,address varchar(40) null comment &apos;地址&apos;,gender enum(&apos;boy&apos;,&apos;girl&apos;,&apos;secret&apos;) default &apos;secret&apos; comment &apos;性别&apos;);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>主键<br>主键：primary key，一张表只能有一个字段可以使用对应的键,用来唯一的约束该字段里面的数据，不能重复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table user(id varchar(40) not null primary key comment &apos;身份证号&apos;, name varchar(20) not null comment &apos;姓名&apos;,age tinyint comment &apos;年龄&apos;);</span><br></pre></td></tr></table></figure></li><li><p>唯一键<br>一张表往往有很多字段需要具有唯一性，数据不能重复。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table student(id varchar(30) not null, stu_num int unique,name varchar(20));</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table student add unique key(stu_num);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>自动增长<br>自动增长通常是跟主键进行搭配,一般而言,声明为自动增长属性的字段,插入数据的时候系统会自动的在当前最大值的基础上对指定的数据+1。<br>自动增长(auto_increment)有几个必要的条件。<br>任何一个字段要做自动增长的前提是本身是一个索引(key一栏有值)。<br>自动增长必须是数字而且是整型。<br>一张表只能有一个自增长,自动增长的起始默认值是1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table my_auto(id int primary key auto_increment comment &apos;自动增长&apos;,name varchar(10) not null);</span><br><span class="line"></span><br><span class="line">修改自动增长的步长:</span><br><span class="line">mysql&gt; set auto_increment_increment=5;</span><br><span class="line"></span><br><span class="line">删除字段的自动增长的属性:</span><br><span class="line">mysql&gt; alter table my_auto modify id int;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-索引"><a href="#3-索引" class="headerlink" title="3.索引"></a>3.索引</h4><p>  索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。更通俗的说，数据库索引好比是一本书前面的目录，能加快数据库的查询速度。上述SQL语句，在没有索引的情况下，数据库会遍历全部数据后选择符合条件的；而有了相应的索引之后，数据库会直接在索引中查找符合条件的选项。如果我们把SQL语句换成“SELECT * FROM article WHERE id=2000000”，那么你是希望数据库按照顺序读取完200万行数据以后给你结果还是直接在索引中定位呢？上面的两个图片鲜明的用时对比已经给出了答案（注：一般数据库默认都会为主键生成索引）。<br>  索引分为聚簇索引和非聚簇索引两种，聚簇索引是按照数据存放的物理位置为顺序的，而非聚簇索引就不一样了；聚簇索引能提高多行检索的速度，而非聚簇索引对于单行的检索很快。<br>  索引是一种数据结构，可以是B-tree, R-tree, 或者 hash 结构。其中R-tree 常用于查询比较接近的数据；B-trees适合用于查找某范围内的数据，可以很快的从当前数据找到下条数据；hash结构则适用于随机访问的场合，查找每条数据的时间几乎相同。显然，若要查找某个时间段的数据，用B-tree结构要比hash结构快好多。 </p><ul><li>普通索引<br>这是最基本的索引，它没有任何限制。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE mytable(</span><br><span class="line">ID INT NOT NULL,  </span><br><span class="line">username VARCHAR(16) NOT NULL,</span><br><span class="line">INDEX (username(16))</span><br><span class="line">);</span><br><span class="line">如果是CHAR，VARCHAR类型，length可以小于字段实际长度；如果是BLOB和TEXT类型，必须指定 length。这个length的用处是什么?</span><br><span class="line">CREATE INDEX part_of_name ON customer (name(10));</span><br><span class="line">创建索引时，使用col_name(length)语法，对前缀编制索引。前缀包括每列值的前length个字符。使用列的一部分创建索引可以使索引文件大大减小，从而节省了大量的磁盘空间，有可能提高INSERT操作的速度。</span><br><span class="line"></span><br><span class="line">直接创建索引:</span><br><span class="line">mysql&gt; CREATE INDEX index_name ON table(column(length))</span><br><span class="line"></span><br><span class="line">mysql&gt; CREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL );</span><br><span class="line">mysql&gt; create index user_index on mytable(username(16));</span><br><span class="line"></span><br><span class="line">查看索引：</span><br><span class="line">mysql&gt; show index from mytable;</span><br><span class="line"></span><br><span class="line">修改表结构的方式添加索引:</span><br><span class="line">mysql&gt; ALTER TABLE table_name ADD INDEX index_name (column(length))</span><br><span class="line">mysql&gt; alter table mytable add index user_index  (username(16));</span><br><span class="line"></span><br><span class="line">删除索引:</span><br><span class="line">mysql&gt; DROP INDEX index_name ON table</span><br><span class="line"></span><br><span class="line">mysql&gt; drop index user_index on mytable;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>唯一索引<br>与普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值（注意和主键不同）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE mytable(  </span><br><span class="line">ID INT NOT NULL,    </span><br><span class="line">username VARCHAR(16) NOT NULL,   </span><br><span class="line">INDEX (username(16))   </span><br><span class="line">); </span><br><span class="line">直接创建索引:</span><br><span class="line">mysql&gt; CREATE INDEX index_name ON table(column(length))</span><br><span class="line">mysql&gt; create index user_index on mytable(username(16));</span><br><span class="line"></span><br><span class="line">修改表结构的方式添加索引:</span><br><span class="line">mysql&gt; ALTER TABLE table_name ADD UNIQUE indexName (column(length))</span><br><span class="line">mysql&gt; alter table mytable add UNIQUE user_index  (username(16));</span><br><span class="line"></span><br><span class="line">删除索引:</span><br><span class="line">mysql&gt; DROP INDEX index_name ON table</span><br><span class="line">mysql&gt; drop index user_index on mytable;</span><br></pre></td></tr></table></figure><p>其他索引都是类似的，本文不涉及。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之列属性。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>lftp命令详解</title>
    <link href="https://dsxlinux.github.io/2018/07/12/linux-lftp/"/>
    <id>https://dsxlinux.github.io/2018/07/12/linux-lftp/</id>
    <published>2018-07-12T09:16:50.000Z</published>
    <updated>2018-07-12T10:11:43.105Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍FTP客户端工具lftp的使用方法。<br><a id="more"></a></p><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install lftp</span></span><br></pre></td></tr></table></figure><h4 id="2-登录"><a href="#2-登录" class="headerlink" title="2.登录"></a>2.登录</h4><p>登录方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lftp ftp://ftpuser:123456@192.168.0.213:21# ftp://可以省略，ftp协议端口是21</span></span><br><span class="line"><span class="comment"># lftp ftp://ftpuser@192.168.0.213:21# 密码可以单独输入</span></span><br><span class="line"><span class="comment"># lftp sftp://ftpuser:123456@192.168.0.213:22# sftp协议，端口是22</span></span><br><span class="line"><span class="comment"># lftp sftp://ftpuser@192.168.0.213:22# 密码可以单独输入</span></span><br></pre></td></tr></table></figure><h4 id="3-用法"><a href="#3-用法" class="headerlink" title="3.用法"></a>3.用法</h4><ul><li>查看或者改变目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span><span class="comment"># 进入远程目录</span></span><br><span class="line"><span class="built_in">cd</span> ..<span class="comment"># 进入上一级目录</span></span><br><span class="line">ls<span class="comment"># 查看文件列表</span></span><br></pre></td></tr></table></figure><ul><li>文件下载</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">get xxx<span class="comment"># 下载xxx文件</span></span><br><span class="line">mget *.txt<span class="comment"># 使用通配符下载</span></span><br><span class="line">mget -c xxx<span class="comment"># 断点续传</span></span><br><span class="line">mirror aaa/ <span class="comment"># 将aaa目录整个的下载下来，子目录也会自动复制</span></span><br><span class="line">pget -c -n 10 file.dat  <span class="comment"># 可以多线程下载</span></span><br></pre></td></tr></table></figure><ul><li>文件上传</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">put xxx</span><br><span class="line">mput xxx1 xxx2 xxx3</span><br><span class="line">mirror -R 本地目录名<span class="comment"># 将本地目录以迭代（包括子目录）的方式反向上传</span></span><br></pre></td></tr></table></figure><ul><li>其他</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p a/b/c<span class="comment"># 创建多级目录</span></span><br><span class="line">rm -rf a/<span class="comment"># 删除文件或目录</span></span><br><span class="line">cata.txt<span class="comment"># 查看远程文件内容</span></span><br><span class="line">queue get 123.txt <span class="comment"># 将任务加入任务列表</span></span><br><span class="line">queue put 234.txt</span><br><span class="line">queue mirror aaa/</span><br><span class="line">queue <span class="comment"># 查看任务列表</span></span><br><span class="line">queue start<span class="comment"># 开始任务列表</span></span><br><span class="line">queue stop<span class="comment"># 停止任务列表</span></span><br><span class="line"><span class="built_in">jobs</span>   <span class="comment"># 查看后台任务列表</span></span><br><span class="line"><span class="built_in">kill</span> all<span class="comment"># 删除全部的jobs</span></span><br><span class="line">mv<span class="comment"># 重命名文件</span></span><br><span class="line">open 127.0.0.1 <span class="comment"># 连接ftp</span></span><br></pre></td></tr></table></figure><h4 id="4-脚本"><a href="#4-脚本" class="headerlink" title="4.脚本"></a>4.脚本</h4><ul><li>上传脚本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"script start at  `date "</span>+%Y-%m-%d %H:%M:%S<span class="string">"` "</span></span><br><span class="line"></span><br><span class="line">lftp &lt;&lt; EOF</span><br><span class="line">open ftp://ftpuser:123456@127.0.0.1:21</span><br><span class="line">mirror -R /root/upload/<span class="built_in">test</span>  /code/</span><br><span class="line">close </span><br><span class="line"><span class="built_in">bye</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"script  end  at  `date "</span>+%Y-%m-%d %H:%M:%S<span class="string">"` "</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍FTP客户端工具lftp的使用方法。&lt;br&gt;
    
    </summary>
    
      <category term="linux-basic" scheme="https://dsxlinux.github.io/categories/linux-basic/"/>
    
    
      <category term="linux-basic" scheme="https://dsxlinux.github.io/tags/linux-basic/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装vsftpd及配置详解</title>
    <link href="https://dsxlinux.github.io/2018/07/02/vsftpd/"/>
    <id>https://dsxlinux.github.io/2018/07/02/vsftpd/</id>
    <published>2018-07-02T03:50:21.000Z</published>
    <updated>2018-07-03T02:06:24.408Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x安装vsftpd、配置文件、以及客户端的使用。<br><a id="more"></a></p><h4 id="1-FTP服务端和客户端的安装"><a href="#1-FTP服务端和客户端的安装" class="headerlink" title="1.FTP服务端和客户端的安装"></a>1.FTP服务端和客户端的安装</h4><p>Centos默认Yum源自带了ftp的服务端和客户端软件，直接使用Yum安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install vsftpd ftp</span></span><br></pre></td></tr></table></figure></p><h4 id="2-FTP主动模式与FTP被动模式"><a href="#2-FTP主动模式与FTP被动模式" class="headerlink" title="2.FTP主动模式与FTP被动模式"></a>2.FTP主动模式与FTP被动模式</h4><ul><li>主动模式</li></ul><p>主动：默认情况下，ftp服务是开放了21端口，用来接受控制命令，服务器用20端口去发送数据（连接客户端大于1024的随机端口）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">serverclient</span><br><span class="line">21 &lt;-----------命令----------- 随机端口</span><br><span class="line">20 ------------数据----------&gt; 随机端口</span><br></pre></td></tr></table></figure><ul><li>被动模式</li></ul><p>被动：ftp服务也是开放21端口，用来接受命令控制，进行数据传输时，客户端会告知服务端打开一个大于1024的端口，然后客户端去主动连接服务</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">serverclient</span><br><span class="line">21 &lt;-----------命令----------- 随机端口</span><br><span class="line">随机端口 ---------数据-----------&gt; 随机端口</span><br></pre></td></tr></table></figure><p>主动模式：建立数据链路时由sever端去主动连接客户端的大于1024的随机端口<br>被动模式：建立数据链路时由client端去主动连服务端的随机端口</p><p>vsftpd默认使用被动模式。</p><h4 id="3-FTP匿名登录"><a href="#3-FTP匿名登录" class="headerlink" title="3. FTP匿名登录"></a>3. FTP匿名登录</h4><p>先启动vsftpd服务端：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># /etc/init.d/vsftpd start</span></span><br></pre></td></tr></table></figure><p>使用ftp客户端连接：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># ftp localhost</span></span><br><span class="line">Trying ::1...</span><br><span class="line">ftp: connect to address ::1Connection refused</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to localhost (127.0.0.1).</span><br><span class="line">220 (vsFTPd 2.2.2)</span><br><span class="line">Name (localhost:root): ftp</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure><p>匿名用户有两个：</p><p>用户名：anonymous    密码：空</p><p>用户名：ftp     密码：空</p><h4 id="4-配置文件"><a href="#4-配置文件" class="headerlink" title="4.配置文件"></a>4.配置文件</h4><ul><li>默认配置文件</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># cat  /etc/vsftpd/vsftpd.conf  |grep -v ^# |grep -v ^$</span></span><br><span class="line">anonymous_enable=YES#允许匿名用户登录</span><br><span class="line">local_enable=YES#允许本地用户登录</span><br><span class="line">write_enable=YES#允许本地用户登录后可写</span><br><span class="line">local_umask=022#建立文件或者目录的权限掩码</span><br><span class="line">dirmessage_enable=YES#启用目录的说明或者欢迎信息</span><br><span class="line">xferlog_enable=YES#打开日志功能 （只记录文件的上传和下载信息）</span><br><span class="line">connect<span class="emphasis">_from_</span>port_20=YES#默认支持主动模式（两个模式都是开启的，直接使用的话是使用的被动模式）</span><br><span class="line">xferlog<span class="emphasis">_std_</span>format=YES#日志使用xferlog而不是vsftpd.log，改为NO的话，则相反</span><br><span class="line">listen=YES#默认运行在stand alone下</span><br><span class="line">pam<span class="emphasis">_service_</span>name=vsftpd#支持pam（可植入模块）</span><br><span class="line">userlist_enable=YES#打开用户列表的功能</span><br><span class="line">tcp<span class="emphasis">_wrappers=YES#支持tcp_</span>wrappers</span><br></pre></td></tr></table></figure><ul><li><p>匿名用户（anonymous）设置</p><ul><li>不允许匿名用户登录</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">anonymous_enable=NO#修改配置文件</span><br><span class="line"><span class="section"># /etc/init.d/vsftpd   reload</span></span><br></pre></td></tr></table></figure><ul><li>匿名用户下载</li></ul><p>匿名用户默认是可以登录，也可以下载。默认使用匿名用户登录的服务端的/var/ftp目录下。</p><ul><li>匿名用户上传</li></ul><p>默认是不允许匿名用户上传的</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">anonymous_enable=YES#允许匿名用户登录</span><br><span class="line">anon<span class="emphasis">_upload_</span>enable=YES#允许匿名用户上传文件</span><br><span class="line">anon<span class="emphasis">_mkdir_</span>write_enable=YES#允许匿名用户创建目录</span><br><span class="line">anon<span class="emphasis">_other_</span>write_enable=yes#允许匿名用户可以删除文件和重命名文件</span><br><span class="line"><span class="section"># chmod 777 /var/ftp/pub#把pub改为可写，用于上传</span></span><br></pre></td></tr></table></figure></li><li><p>普通用户（local）设置</p><ul><li>普通用户登录</li></ul><p>配置文件中local_enable=YES，默认是允许普通用户登录的。如果要限制普通用户登录，可以通过户列表来控制。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">userlist_enable=yes#打开用户列表功能</span><br><span class="line">userlist_deny=YES#这一句可加可不加，默认就是有这一句的</span><br><span class="line"><span class="section"># vim /etc/vsftpd/user_list#加上要禁止的用户，一个用户写一行</span></span><br></pre></td></tr></table></figure><ul><li>普通用户的下载和上传</li></ul><p>默认是允许下载和上传的。允许上传除了系统目录有写权限外，还有与服务的参数write_enable=YES有关。</p><p>所有的本地用户（非匿名用户）登录后，都统一登录到/ftpdata/目录下：</p><p>方法一：把所有的用户家目录改成/ftpdata/。但这样做会影响到系统用户登录到自己的家目录</p><p>方法二：使用下面的参数，它不影响你系统用户登录到自己的家目录<br>local_root=/ftpdata</p><ul><li>关于chroot环境</li></ul><p>默认情况下，普通用户（匿名用户除外）可以登录ftp后，cd切换到/下的任何地方，只要有r权限，就可以get文件，那么显示是不安全的。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; ls /</span><br><span class="line">227 Entering Passive Mode (127,0,0,1,182,179).</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">dr-xr-xr-x    2 0        0            4096 Jun 26 19:11 bin</span><br><span class="line">dr-xr-xr-x    5 0        0            1024 Apr 10 13:58 boot</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Oct 04  2017 cgroup</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Apr 10 13:38 data</span><br><span class="line">drwxr-xr-x   18 0        0            3820 Jun 04 00:52 dev</span><br><span class="line">drwxr-xr-x  129 0        0           12288 Jun 29 19:19 etc</span><br><span class="line">drwxr-xr-x    4 0        0            4096 Jun 26 08:19 home</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Apr 16 07:58 ks</span><br><span class="line">dr-xr-xr-x   11 0        0            4096 Apr 10 16:22 lib</span><br><span class="line">dr-xr-xr-x   10 0        0           12288 Jun 26 19:11 lib64</span><br><span class="line">drwx------    2 0        0           16384 Apr 10 13:38 lost+found</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Jun 01 06:05 media</span><br><span class="line">drwxr-xr-x    2 0        0               0 Jun 04 00:51 misc</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Apr 10 16:13 mnt</span><br><span class="line">drwxr-xr-x    2 0        0               0 Jun 04 00:51 net</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Jun 26 09:25 opt</span><br><span class="line">dr-xr-xr-x  151 0        0               0 Jun 04 00:51 proc</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Jun 21 06:52 pydash</span><br><span class="line">dr-xr-x---   38 0        0            4096 Jul 02 06:38 root</span><br><span class="line">dr-xr-xr-x    2 0        0           12288 Jun 26 19:11 sbin</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Apr 10 13:42 selinux</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Sep 23  2011 srv</span><br><span class="line">drwxr-xr-x   13 0        0               0 Jun 04 00:51 sys</span><br><span class="line">drwxrwxrwt    8 0        0            4096 Jul 01 19:19 tmp</span><br><span class="line">drwxr-xr-x   13 0        0            4096 Apr 10 13:42 usr</span><br><span class="line">drwxr-xr-x   23 0        0            4096 Jun 26 08:16 var</span><br><span class="line">dr-xr-xr-x    7 0        0            4096 Nov 29  2013 yum</span><br><span class="line">226 Directory send OK.</span><br></pre></td></tr></table></figure><p>普通用户ls /，可以看到系统的根目录，进入相应的目录就可以下载。</p><p>通过chroot将普通用户限制在它的家目录。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">chroot<span class="emphasis">_list_</span>enable=YES</span><br><span class="line">chroot<span class="emphasis">_list_</span>file=/etc/vsftpd/chroot_list</span><br><span class="line"><span class="section"># vim /etc/vsftpd/chroot_list  #创建这个文件，并写上要加入笼环境的用户名，一行写一个</span></span><br><span class="line"><span class="section"># /etc/init.d/vsftpd reload</span></span><br></pre></td></tr></table></figure><p>如何把所有的普通用户（匿名用户默认就是笼环境)加入到chroot环境？</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># chroot_local_user=YES</span></span><br></pre></td></tr></table></figure><p>注意：</p><p>对于chroot_local_user与chroot_list_enable的组合效果，可以参考下表： </p></li></ul><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">chroot_local_user=YES</th><th>chroot_local_user=NO</th></tr></thead><tbody><tr><td style="text-align:left">chroot_list_enable=YES</td><td style="text-align:left">(1)所有用户都被限制在其主目录下 (2)使用chroot_list_file指定的用户列表，这些用户作为“例外”，不受限制</td><td>(1)所有用户都不被限制其主目录下  (2)使用chroot_list_file指定的用户列表，这些用户作为“例外”，受到限制</td></tr><tr><td style="text-align:left">chroot_list_enable=NO</td><td style="text-align:left">(1)所有用户都被限制在其主目录下  (2)不使用chroot_list_file指定的用户列表，没有任何“例外”用户</td><td>(1)所有用户都不被限制其主目录下  (2)不使用chroot_list_file指定的用户列表，没有任何“例外”用户</td></tr></tbody></table><ul><li>被动连接模式，控制服务器数据传输端口的范围</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">pasv_enable=YES#这一句默认不加也可以</span><br><span class="line">pasv<span class="emphasis">_min_</span>port=3000</span><br><span class="line">pasv<span class="emphasis">_max_</span>port=3005#最小端口范围和最大端口范围可以自定义，也可以使用同一个端口</span><br><span class="line"></span><br><span class="line"><span class="section"># netstat -nt |grep TIME_</span></span><br><span class="line">tcp        0      0 127.0.0.1:3000              127.0.0.1:38206             TIME_WAIT</span><br></pre></td></tr></table></figure><h4 id="5-客户端工具的使用"><a href="#5-客户端工具的使用" class="headerlink" title="5.客户端工具的使用"></a>5.客户端工具的使用</h4><ul><li><p>ftp使用</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># ftp 127.0.0.1</span></span><br><span class="line">ftp&gt; ls#查看远程文件</span><br><span class="line">ftp&gt; !ls#感叹号后面执行本地命令</span><br><span class="line">ftp&gt; !#退出ftp命令行</span><br><span class="line">ftp&gt; append ks.cfg a.txt#把本地的ks.cfg文件的内容追加到远程的a.txt</span><br><span class="line">ftp&gt; cd ftp#进入远程的ftp目录</span><br><span class="line">ftp&gt; lcd /root/#改变本地工作目录</span><br><span class="line">ftp&gt; get hello.txt#复制单个远程文件到本地</span><br><span class="line">ftp&gt; put a.txt#复制一个本地文件到远程</span><br><span class="line">ftp&gt; del ftp.txt#删除远程单个文件</span><br><span class="line">ftp&gt; open 127.0.0.1#连接到远程服务器</span><br><span class="line">ftp&gt; close#结束FTP会话并返回命令行</span><br><span class="line">ftp&gt; bye#结束FTP会话并退出</span><br><span class="line">ftp&gt; glob#开关文件名通配符（默认ON）</span><br><span class="line"></span><br><span class="line">ftp&gt; mget 1.tmp 2.tmp 3.tmp#复制一个或多个远程文件至本地 （ftp -i 127.0.0.1）</span><br><span class="line">ftp&gt; mdel *.php#删除远程一个或多个文件</span><br><span class="line">ftp&gt; mkdir tmp#创建一个远程目录</span><br><span class="line">ftp&gt; mput *.txt#复制一个或多个本地文件到远程</span><br><span class="line">ftp&gt; pwd#显示远程当前工作目录</span><br><span class="line">ftp&gt; recv 1.tmp#复制远程文件到本地</span><br><span class="line">ftp&gt; rename 1.tmp 1.tmp.bak#重命名远程文件</span><br><span class="line">ftp&gt; rmdir tmp#删除远程目录</span><br><span class="line">ftp&gt; send 1.tmp#复制一个本地文件到远程（功能同put）</span><br><span class="line">ftp&gt; passive#主被动模式切换</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x安装vsftpd、配置文件、以及客户端的使用。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Apache服务器开启webDAV模块</title>
    <link href="https://dsxlinux.github.io/2018/06/26/httpd-webdav/"/>
    <id>https://dsxlinux.github.io/2018/06/26/httpd-webdav/</id>
    <published>2018-06-26T07:39:24.000Z</published>
    <updated>2018-06-26T08:37:16.397Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统Apache服务器开启webDAV模块。<br><a id="more"></a></p><h4 id="1-安装Apache"><a href="#1-安装Apache" class="headerlink" title="1.安装Apache"></a>1.安装Apache</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install httpd apr apr-util httpd-devel安装</span></span><br><span class="line"><span class="comment"># chkconfig httpd on开机启动</span></span><br></pre></td></tr></table></figure><h4 id="2-配置WebDAV模块"><a href="#2-配置WebDAV模块" class="headerlink" title="2.配置WebDAV模块"></a>2.配置WebDAV模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/httpd/conf.d/webdav.conf在Apache的子配置文件目录新建文件</span></span><br><span class="line">&lt;IfModule mod_dav.c&gt;</span><br><span class="line">LimitXMLRequestBody 131072</span><br><span class="line">Alias /webdav <span class="string">"/var/www/webdav"</span></span><br><span class="line">&lt;Directory /var/www/webdav&gt;</span><br><span class="line">    Dav On</span><br><span class="line">    Options +Indexes</span><br><span class="line">    IndexOptions FancyIndexing</span><br><span class="line">    AddDefaultCharset UTF-8</span><br><span class="line">    AuthType Basic</span><br><span class="line">    AuthName <span class="string">"WebDAV Server"</span></span><br><span class="line">    AuthUserFile /etc/httpd/webdav.users.pwd</span><br><span class="line">    Require valid-user</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir -p /var/www/webdav</span></span><br><span class="line"><span class="comment"># chown apache:apache /var/www/webdav</span></span><br><span class="line"><span class="comment"># htpasswd -c /etc/httpd/webdav.users.pwd test 根据提示输入密码，切记一定要设置密码，否则会有安全问题</span></span><br><span class="line"><span class="comment"># service httpd restart重启apache服务</span></span><br></pre></td></tr></table></figure><h4 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h4><p>通过浏览器访问：访问本机 , 访问远程：<a href="http://ip/webdav" target="_blank" rel="noopener">http://ip/webdav</a></p><h4 id="4-将webdav映射成本地磁盘"><a href="#4-将webdav映射成本地磁盘" class="headerlink" title="4.将webdav映射成本地磁盘"></a>4.将webdav映射成本地磁盘</h4><p>在windows上映射成本地磁盘，需要注意：<br>WIN7以上版本的操作系统微软禁用了http形式的基本WebDAV验证形式（KB841215），此时我们需要修改注册表来实现。修改HKEY_LOCAL_MACHINE&gt;&gt;SYSTEM&gt;&gt;CurrentControlSet&gt;&gt;Services&gt;&gt;WebClient&gt;&gt;Parameters&gt;&gt;BasicAuthLevel<br>把这个值从1改为2，然后进控制面板，服务，把WebClient服务重启（没有启动的就启动它）。</p><p>具体操作如下：<br>在桌面上【我的电脑】图标上点击【右键】，选择【映射网络驱动器】，在弹出框中填入上面的地址，比如：<a href="http://192.168.0.215/webdav/" target="_blank" rel="noopener">http://192.168.0.215/webdav/</a> ，勾选【登录时重新连接】和【使用其他凭据连接】，然后点击【完成】。输入【账号和密码】就可以进入了。</p><h4 id="5-将webdav挂载到linux上"><a href="#5-将webdav挂载到linux上" class="headerlink" title="5.将webdav挂载到linux上"></a>5.将webdav挂载到linux上</h4><p>linux系统上有多个办法来使用webdav服务。<br>(1) davfs2工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install epel-release -y安装epel源</span></span><br><span class="line"><span class="comment"># yum install davfs2 -y安装davfs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir /mnt/webdav创建用于挂载的目录</span></span><br><span class="line"><span class="comment"># mount -t davfs http://192.168.0.215/webdav /mnt/webdav/挂载</span></span><br><span class="line">Please enter the username to authenticate with server</span><br><span class="line">http://192.168.0.215/webdav or hit enter <span class="keyword">for</span> none.</span><br><span class="line">  Username: <span class="built_in">test</span>用户名</span><br><span class="line">Please enter the password to authenticate user <span class="built_in">test</span> with server</span><br><span class="line">http://192.168.0.215/webdav or hit enter <span class="keyword">for</span> none.</span><br><span class="line">  Password:  密码</span><br><span class="line">  </span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line">Filesystem                    Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/VolGroup-lv_root   50G   19G   29G  40% /</span><br><span class="line">tmpfs                         3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">/dev/sda1                     485M   39M  421M   9% /boot</span><br><span class="line">/dev/mapper/VolGroup-lv_home  435G  199M  413G   1% /home</span><br><span class="line">http://192.168.0.215/webdav    26G   13G   13G  50% /mnt/webdav</span><br></pre></td></tr></table></figure></p><p>(2) cadaver工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install cadaver -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cadaver http://192.168.0.215/webdav</span></span><br><span class="line">Authentication required <span class="keyword">for</span> WebDAV Server on server `192.168.0.215<span class="string">':</span></span><br><span class="line"><span class="string">Username: test</span></span><br><span class="line"><span class="string">Password: </span></span><br><span class="line"><span class="string">dav:/webdav/&gt; ls</span></span><br><span class="line"><span class="string">Listing collection `/webdav/'</span>: collection is empty.</span><br><span class="line">dav:/webdav/&gt; <span class="built_in">help</span></span><br><span class="line">Available commands: </span><br><span class="line"> ls         <span class="built_in">cd</span>         <span class="built_in">pwd</span>        put        get        mget       mput       </span><br><span class="line"> edit       less       mkcol      cat        delete     rmcol      copy       </span><br><span class="line"> move       lock       unlock     discover   steal      showlocks  version    </span><br><span class="line"> checkin    checkout   uncheckout <span class="built_in">history</span>    label      propnames  chexec     </span><br><span class="line"> propget    propdel    propset    search     <span class="built_in">set</span>        open       close      </span><br><span class="line"> <span class="built_in">echo</span>       quit       <span class="built_in">unset</span>      lcd        lls        lpwd       <span class="built_in">logout</span>     </span><br><span class="line"> <span class="built_in">help</span>       describe   about      </span><br><span class="line">Aliases: rm=delete, mkdir=mkcol, mv=move, cp=copy, more=less, quit=<span class="built_in">exit</span>=<span class="built_in">bye</span></span><br></pre></td></tr></table></figure></p><p>(3) curl命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">上传：</span><br><span class="line"><span class="comment"># curl -v --user test:123456 -T install.log http://192.168.0.215/webdav/</span></span><br><span class="line">下载：</span><br><span class="line"><span class="comment"># curl --user test:123456  http://192.168.0.215/webdav/install.log &gt; install.txt</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统Apache服务器开启webDAV模块。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
</feed>
