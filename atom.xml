<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech2k18</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dsxlinux.github.io/"/>
  <updated>2018-07-03T02:03:05.330Z</updated>
  <id>https://dsxlinux.github.io/</id>
  
  <author>
    <name>Dong Shouxin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux安装vsftpd及配置详解</title>
    <link href="https://dsxlinux.github.io/2018/07/02/vsftpd/"/>
    <id>https://dsxlinux.github.io/2018/07/02/vsftpd/</id>
    <published>2018-07-02T03:50:21.000Z</published>
    <updated>2018-07-03T02:03:05.330Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x安装vsftpd、配置文件、以及客户端的使用。<br><a id="more"></a></p><h4 id="1-FTP服务端和客户端的安装"><a href="#1-FTP服务端和客户端的安装" class="headerlink" title="1.FTP服务端和客户端的安装"></a>1.FTP服务端和客户端的安装</h4><p>Centos默认Yum源自带了ftp的服务端和客户端软件，直接使用Yum安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install vsftpd ftp</span></span><br></pre></td></tr></table></figure></p><h4 id="2-FTP主动模式与FTP被动模式"><a href="#2-FTP主动模式与FTP被动模式" class="headerlink" title="2.FTP主动模式与FTP被动模式"></a>2.FTP主动模式与FTP被动模式</h4><ul><li>主动模式</li></ul><p>主动：默认情况下，ftp服务是开放了21端口，用来接受控制命令，服务器用20端口去发送数据（连接客户端大于1024的随机端口）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">serverclient</span><br><span class="line">21 &lt;-----------命令----------- 随机端口</span><br><span class="line">20 ------------数据----------&gt; 随机端口</span><br></pre></td></tr></table></figure><ul><li>被动模式</li></ul><p>被动：ftp服务也是开放21端口，用来接受命令控制，进行数据传输时，客户端会告知服务端打开一个大于1024的端口，然后客户端去主动连接服务</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">serverclient</span><br><span class="line">21 &lt;-----------命令----------- 随机端口</span><br><span class="line">随机端口 ---------数据-----------&gt; 随机端口</span><br></pre></td></tr></table></figure><p>主动模式：建立数据链路时由sever端去主动连接客户端的大于1024的随机端口<br>被动模式：建立数据链路时由client端去主动连服务端的随机端口</p><p>vsftpd默认使用被动模式。</p><h4 id="3-FTP匿名登录"><a href="#3-FTP匿名登录" class="headerlink" title="3. FTP匿名登录"></a>3. FTP匿名登录</h4><p>先启动vsftpd服务端：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># /etc/init.d/vsftpd start</span></span><br></pre></td></tr></table></figure><p>使用ftp客户端连接：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># ftp localhost</span></span><br><span class="line">Trying ::1...</span><br><span class="line">ftp: connect to address ::1Connection refused</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to localhost (127.0.0.1).</span><br><span class="line">220 (vsFTPd 2.2.2)</span><br><span class="line">Name (localhost:root): ftp</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure><p>匿名用户有两个：</p><p>用户名：anonymous    密码：空</p><p>用户名：ftp     密码：空</p><h4 id="4-配置文件"><a href="#4-配置文件" class="headerlink" title="4.配置文件"></a>4.配置文件</h4><ul><li>默认配置文件</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># cat  /etc/vsftpd/vsftpd.conf  |grep -v ^# |grep -v ^$</span></span><br><span class="line">anonymous_enable=YES#允许匿名用户登录</span><br><span class="line">local_enable=YES#允许本地用户登录</span><br><span class="line">write_enable=YES#允许本地用户登录后可写</span><br><span class="line">local_umask=022#建立文件或者目录的权限掩码</span><br><span class="line">dirmessage_enable=YES#启用目录的说明或者欢迎信息</span><br><span class="line">xferlog_enable=YES#打开日志功能 （只记录文件的上传和下载信息）</span><br><span class="line">connect<span class="emphasis">_from_</span>port_20=YES#默认支持主动模式（两个模式都是开启的，直接使用的话是使用的被动模式）</span><br><span class="line">xferlog<span class="emphasis">_std_</span>format=YES#日志使用xferlog而不是vsftpd.log，改为NO的话，则相反</span><br><span class="line">listen=YES#默认运行在stand alone下</span><br><span class="line">pam<span class="emphasis">_service_</span>name=vsftpd#支持pam（可植入模块）</span><br><span class="line">userlist_enable=YES#打开用户列表的功能</span><br><span class="line">tcp<span class="emphasis">_wrappers=YES#支持tcp_</span>wrappers</span><br></pre></td></tr></table></figure><ul><li><p>匿名用户（anonymous）设置</p><ul><li>不允许匿名用户登录</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">anonymous_enable=NO#修改配置文件</span><br><span class="line"><span class="section"># /etc/init.d/vsftpd   reload</span></span><br></pre></td></tr></table></figure><ul><li>匿名用户下载</li></ul><p>匿名用户默认是可以登录，也可以下载。默认使用匿名用户登录的服务端的/var/ftp目录下。</p><ul><li>匿名用户上传</li></ul><p>默认是不允许匿名用户上传的</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">anonymous_enable=YES#允许匿名用户登录</span><br><span class="line">anon<span class="emphasis">_upload_</span>enable=YES#允许匿名用户上传文件</span><br><span class="line">anon<span class="emphasis">_mkdir_</span>write_enable=YES#允许匿名用户创建目录</span><br><span class="line">anon<span class="emphasis">_other_</span>write_enable=yes#允许匿名用户可以删除文件和重命名文件</span><br><span class="line"><span class="section"># chmod 777 /var/ftp/pub#把pub改为可写，用于上传</span></span><br></pre></td></tr></table></figure></li><li><p>普通用户（local）设置</p><ul><li>普通用户登录</li></ul><p>配置文件中local_enable=YES，默认是允许普通用户登录的。如果要限制普通用户登录，可以通过户列表来控制。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">userlist_enable=yes#打开用户列表功能</span><br><span class="line">userlist_deny=YES#这一句可加可不加，默认就是有这一句的</span><br><span class="line"><span class="section"># vim /etc/vsftpd/user_list#加上要禁止的用户，一个用户写一行</span></span><br></pre></td></tr></table></figure><ul><li>普通用户的下载和上传</li></ul><p>默认是允许下载和上传的。允许上传除了系统目录有写权限外，还有与服务的参数write_enable=YES有关。</p><p>所有的本地用户（非匿名用户）登录后，都统一登录到/ftpdata/目录下：</p><p>方法一：把所有的用户家目录改成/ftpdata/。但这样做会影响到系统用户登录到自己的家目录</p><p>方法二：使用下面的参数，它不影响你系统用户登录到自己的家目录<br>local_root=/ftpdata</p><ul><li>关于chroot环境</li></ul><p>默认情况下，普通用户（匿名用户除外）可以登录ftp后，cd切换到/下的任何地方，只要有r权限，就可以get文件，那么显示是不安全的。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; ls /</span><br><span class="line">227 Entering Passive Mode (127,0,0,1,182,179).</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">dr-xr-xr-x    2 0        0            4096 Jun 26 19:11 bin</span><br><span class="line">dr-xr-xr-x    5 0        0            1024 Apr 10 13:58 boot</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Oct 04  2017 cgroup</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Apr 10 13:38 data</span><br><span class="line">drwxr-xr-x   18 0        0            3820 Jun 04 00:52 dev</span><br><span class="line">drwxr-xr-x  129 0        0           12288 Jun 29 19:19 etc</span><br><span class="line">drwxr-xr-x    4 0        0            4096 Jun 26 08:19 home</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Apr 16 07:58 ks</span><br><span class="line">dr-xr-xr-x   11 0        0            4096 Apr 10 16:22 lib</span><br><span class="line">dr-xr-xr-x   10 0        0           12288 Jun 26 19:11 lib64</span><br><span class="line">drwx------    2 0        0           16384 Apr 10 13:38 lost+found</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Jun 01 06:05 media</span><br><span class="line">drwxr-xr-x    2 0        0               0 Jun 04 00:51 misc</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Apr 10 16:13 mnt</span><br><span class="line">drwxr-xr-x    2 0        0               0 Jun 04 00:51 net</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Jun 26 09:25 opt</span><br><span class="line">dr-xr-xr-x  151 0        0               0 Jun 04 00:51 proc</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Jun 21 06:52 pydash</span><br><span class="line">dr-xr-x---   38 0        0            4096 Jul 02 06:38 root</span><br><span class="line">dr-xr-xr-x    2 0        0           12288 Jun 26 19:11 sbin</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Apr 10 13:42 selinux</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Sep 23  2011 srv</span><br><span class="line">drwxr-xr-x   13 0        0               0 Jun 04 00:51 sys</span><br><span class="line">drwxrwxrwt    8 0        0            4096 Jul 01 19:19 tmp</span><br><span class="line">drwxr-xr-x   13 0        0            4096 Apr 10 13:42 usr</span><br><span class="line">drwxr-xr-x   23 0        0            4096 Jun 26 08:16 var</span><br><span class="line">dr-xr-xr-x    7 0        0            4096 Nov 29  2013 yum</span><br><span class="line">226 Directory send OK.</span><br></pre></td></tr></table></figure><p>普通用户ls /，可以看到系统的根目录，进入相应的目录就可以下载。</p><p>通过chroot将普通用户限制在它的家目录。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">chroot<span class="emphasis">_list_</span>enable=YES</span><br><span class="line">chroot<span class="emphasis">_list_</span>file=/etc/vsftpd/chroot_list</span><br><span class="line"><span class="section"># vim /etc/vsftpd/chroot_list  #创建这个文件，并写上要加入笼环境的用户名，一行写一个</span></span><br><span class="line"><span class="section"># /etc/init.d/vsftpd reload</span></span><br></pre></td></tr></table></figure><p>如何把所有的普通用户（匿名用户默认就是笼环境)加入到chroot环境？</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># chroot_local_user=YES</span></span><br></pre></td></tr></table></figure><p>注意：</p><p>对于chroot_local_user与chroot_list_enable的组合效果，可以参考下表： </p></li></ul><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">chroot_local_user=YES</th><th>chroot_local_user=NO</th></tr></thead><tbody><tr><td style="text-align:left">chroot_list_enable=YES</td><td style="text-align:left">(1)所有用户都被限制在其主目录下 (2)使用chroot_list_file指定的用户列表，这些用户作为“例外”，不受限制</td><td>(1)所有用户都不被限制其主目录下  (2)使用chroot_list_file指定的用户列表，这些用户作为“例外”，受到限制</td></tr><tr><td style="text-align:left">chroot_list_enable=NO</td><td style="text-align:left">(1)所有用户都被限制在其主目录下  (2)不使用chroot_list_file指定的用户列表，没有任何“例外”用户</td><td>(1)所有用户都不被限制其主目录下  (2)不使用chroot_list_file指定的用户列表，没有任何“例外”用户</td></tr></tbody></table><ul><li>被动连接模式，控制服务器数据传输端口的范围</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">pasv_enable=YES#这一句默认不加也可以</span><br><span class="line">pasv<span class="emphasis">_min_</span>port=3000</span><br><span class="line">pasv<span class="emphasis">_max_</span>port=3005#最小端口范围和最大端口范围可以自定义，也可以使用同一个端口</span><br><span class="line"></span><br><span class="line"><span class="section"># netstat -nt |grep TIME_</span></span><br><span class="line">tcp        0      0 127.0.0.1:3000              127.0.0.1:38206             TIME_WAIT</span><br></pre></td></tr></table></figure><h4 id="5-客户端工具的使用"><a href="#5-客户端工具的使用" class="headerlink" title="5.客户端工具的使用"></a>5.客户端工具的使用</h4><ul><li><p>ftp使用</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># ftp 127.0.0.1</span></span><br><span class="line">ftp&gt; ls#查看远程文件</span><br><span class="line">ftp&gt; !ls#感叹号后面执行本地命令</span><br><span class="line">ftp&gt; !#退出ftp命令行</span><br><span class="line">ftp&gt; append ks.cfg a.txt#把本地的ks.cfg文件的内容追加到远程的a.txt</span><br><span class="line">ftp&gt; cd ftp#进入远程的ftp目录</span><br><span class="line">ftp&gt; lcd /root/#改变本地工作目录</span><br><span class="line">ftp&gt; get hello.txt#复制单个远程文件到本地</span><br><span class="line">ftp&gt; put a.txt#复制一个本地文件到远程</span><br><span class="line">ftp&gt; del ftp.txt#删除远程单个文件</span><br><span class="line">ftp&gt; open 127.0.0.1#连接到远程服务器</span><br><span class="line">ftp&gt; close#结束FTP会话并返回命令行</span><br><span class="line">ftp&gt; bye#结束FTP会话并退出</span><br><span class="line">ftp&gt; glob#开关文件名通配符（默认ON）</span><br><span class="line"></span><br><span class="line">ftp&gt; mget 1.tmp 2.tmp 3.tmp#复制一个或多个远程文件至本地 （ftp -i 127.0.0.1）</span><br><span class="line">ftp&gt; mdel *.php#删除远程一个或多个文件</span><br><span class="line">ftp&gt; mkdir tmp#创建一个远程目录</span><br><span class="line">ftp&gt; mput *.txt#复制一个或多个本地文件到远程</span><br><span class="line">ftp&gt; pwd#显示远程当前工作目录</span><br><span class="line">ftp&gt; recv 1.tmp#复制远程文件到本地</span><br><span class="line">ftp&gt; rename 1.tmp 1.tmp.bak#重命名远程文件</span><br><span class="line">ftp&gt; rmdir tmp#删除远程目录</span><br><span class="line">ftp&gt; send 1.tmp#复制一个本地文件到远程（功能同put）</span><br><span class="line">ftp&gt; passive#主被动模式切换</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x安装vsftpd、配置文件、以及客户端的使用。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://dsxlinux.github.io/2018/06/26/linux-live/"/>
    <id>https://dsxlinux.github.io/2018/06/26/linux-live/</id>
    <published>2018-06-26T08:34:53.687Z</published>
    <updated>2018-06-26T08:34:53.685Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html><head>    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">    <meta property="og:title" content="直播地址">    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">    <title>直播</title></head><body><div style="width:100%; height:auto;"><p> 这里是直播的观看地址，可以直接观看，不需要其他播放器的支持。<b style="color:red">请允许您的浏览器支持flash插件。</b>原来使用播放器播放的方式也是可以的。<br><div><div id="id_video_container" style="width:100%; height:auto;"></div><script src="//qzonestyle.gtimg.cn/open/qcloud/video/live/h5/live_connect.js" charset="utf-8"></script><script type="text/javascript">    (function () {        var player = new qcVideo.Player("id_video_container", {            "live_url" : "http://2117.liveplay.myqcloud.com/live/2117_1e683aaee1.flv",    "live_url2" : "http://2117.liveplay.myqcloud.com/live/2117_1e683aaee1.m3u8",            "width" : 480,            "height" : 320        });    })()</script></div></p></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot;&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Apache服务器开启webDAV模块</title>
    <link href="https://dsxlinux.github.io/2018/06/26/httpd-webdav/"/>
    <id>https://dsxlinux.github.io/2018/06/26/httpd-webdav/</id>
    <published>2018-06-26T07:39:24.000Z</published>
    <updated>2018-06-26T08:37:16.397Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统Apache服务器开启webDAV模块。<br><a id="more"></a></p><h4 id="1-安装Apache"><a href="#1-安装Apache" class="headerlink" title="1.安装Apache"></a>1.安装Apache</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install httpd apr apr-util httpd-devel安装</span></span><br><span class="line"><span class="comment"># chkconfig httpd on开机启动</span></span><br></pre></td></tr></table></figure><h4 id="2-配置WebDAV模块"><a href="#2-配置WebDAV模块" class="headerlink" title="2.配置WebDAV模块"></a>2.配置WebDAV模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/httpd/conf.d/webdav.conf在Apache的子配置文件目录新建文件</span></span><br><span class="line">&lt;IfModule mod_dav.c&gt;</span><br><span class="line">LimitXMLRequestBody 131072</span><br><span class="line">Alias /webdav <span class="string">"/var/www/webdav"</span></span><br><span class="line">&lt;Directory /var/www/webdav&gt;</span><br><span class="line">    Dav On</span><br><span class="line">    Options +Indexes</span><br><span class="line">    IndexOptions FancyIndexing</span><br><span class="line">    AddDefaultCharset UTF-8</span><br><span class="line">    AuthType Basic</span><br><span class="line">    AuthName <span class="string">"WebDAV Server"</span></span><br><span class="line">    AuthUserFile /etc/httpd/webdav.users.pwd</span><br><span class="line">    Require valid-user</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir -p /var/www/webdav</span></span><br><span class="line"><span class="comment"># chown apache:apache /var/www/webdav</span></span><br><span class="line"><span class="comment"># htpasswd -c /etc/httpd/webdav.users.pwd test 根据提示输入密码，切记一定要设置密码，否则会有安全问题</span></span><br><span class="line"><span class="comment"># service httpd restart重启apache服务</span></span><br></pre></td></tr></table></figure><h4 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h4><p>通过浏览器访问：访问本机 , 访问远程：<a href="http://ip/webdav" target="_blank" rel="noopener">http://ip/webdav</a></p><h4 id="4-将webdav映射成本地磁盘"><a href="#4-将webdav映射成本地磁盘" class="headerlink" title="4.将webdav映射成本地磁盘"></a>4.将webdav映射成本地磁盘</h4><p>在windows上映射成本地磁盘，需要注意：<br>WIN7以上版本的操作系统微软禁用了http形式的基本WebDAV验证形式（KB841215），此时我们需要修改注册表来实现。修改HKEY_LOCAL_MACHINE&gt;&gt;SYSTEM&gt;&gt;CurrentControlSet&gt;&gt;Services&gt;&gt;WebClient&gt;&gt;Parameters&gt;&gt;BasicAuthLevel<br>把这个值从1改为2，然后进控制面板，服务，把WebClient服务重启（没有启动的就启动它）。</p><p>具体操作如下：<br>在桌面上【我的电脑】图标上点击【右键】，选择【映射网络驱动器】，在弹出框中填入上面的地址，比如：<a href="http://192.168.0.215/webdav/" target="_blank" rel="noopener">http://192.168.0.215/webdav/</a> ，勾选【登录时重新连接】和【使用其他凭据连接】，然后点击【完成】。输入【账号和密码】就可以进入了。</p><h4 id="5-将webdav挂载到linux上"><a href="#5-将webdav挂载到linux上" class="headerlink" title="5.将webdav挂载到linux上"></a>5.将webdav挂载到linux上</h4><p>linux系统上有多个办法来使用webdav服务。<br>(1) davfs2工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install epel-release -y安装epel源</span></span><br><span class="line"><span class="comment"># yum install davfs2 -y安装davfs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir /mnt/webdav创建用于挂载的目录</span></span><br><span class="line"><span class="comment"># mount -t davfs http://192.168.0.215/webdav /mnt/webdav/挂载</span></span><br><span class="line">Please enter the username to authenticate with server</span><br><span class="line">http://192.168.0.215/webdav or hit enter <span class="keyword">for</span> none.</span><br><span class="line">  Username: <span class="built_in">test</span>用户名</span><br><span class="line">Please enter the password to authenticate user <span class="built_in">test</span> with server</span><br><span class="line">http://192.168.0.215/webdav or hit enter <span class="keyword">for</span> none.</span><br><span class="line">  Password:  密码</span><br><span class="line">  </span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line">Filesystem                    Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/VolGroup-lv_root   50G   19G   29G  40% /</span><br><span class="line">tmpfs                         3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">/dev/sda1                     485M   39M  421M   9% /boot</span><br><span class="line">/dev/mapper/VolGroup-lv_home  435G  199M  413G   1% /home</span><br><span class="line">http://192.168.0.215/webdav    26G   13G   13G  50% /mnt/webdav</span><br></pre></td></tr></table></figure></p><p>(2) cadaver工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install cadaver -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cadaver http://192.168.0.215/webdav</span></span><br><span class="line">Authentication required <span class="keyword">for</span> WebDAV Server on server `192.168.0.215<span class="string">':</span></span><br><span class="line"><span class="string">Username: test</span></span><br><span class="line"><span class="string">Password: </span></span><br><span class="line"><span class="string">dav:/webdav/&gt; ls</span></span><br><span class="line"><span class="string">Listing collection `/webdav/'</span>: collection is empty.</span><br><span class="line">dav:/webdav/&gt; <span class="built_in">help</span></span><br><span class="line">Available commands: </span><br><span class="line"> ls         <span class="built_in">cd</span>         <span class="built_in">pwd</span>        put        get        mget       mput       </span><br><span class="line"> edit       less       mkcol      cat        delete     rmcol      copy       </span><br><span class="line"> move       lock       unlock     discover   steal      showlocks  version    </span><br><span class="line"> checkin    checkout   uncheckout <span class="built_in">history</span>    label      propnames  chexec     </span><br><span class="line"> propget    propdel    propset    search     <span class="built_in">set</span>        open       close      </span><br><span class="line"> <span class="built_in">echo</span>       quit       <span class="built_in">unset</span>      lcd        lls        lpwd       <span class="built_in">logout</span>     </span><br><span class="line"> <span class="built_in">help</span>       describe   about      </span><br><span class="line">Aliases: rm=delete, mkdir=mkcol, mv=move, cp=copy, more=less, quit=<span class="built_in">exit</span>=<span class="built_in">bye</span></span><br></pre></td></tr></table></figure></p><p>(3) curl命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">上传：</span><br><span class="line"><span class="comment"># curl -v --user test:123456 -T install.log http://192.168.0.215/webdav/</span></span><br><span class="line">下载：</span><br><span class="line"><span class="comment"># curl --user test:123456  http://192.168.0.215/webdav/install.log &gt; install.txt</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统Apache服务器开启webDAV模块。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Memcache安装和配置</title>
    <link href="https://dsxlinux.github.io/2018/06/25/memcached-install/"/>
    <id>https://dsxlinux.github.io/2018/06/25/memcached-install/</id>
    <published>2018-06-25T13:12:04.000Z</published>
    <updated>2018-06-25T13:20:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统通过YUM安装Memcache安装和配置。<br><a id="more"></a></p><h4 id="1-安装redis"><a href="#1-安装redis" class="headerlink" title="1.安装redis"></a>1.安装redis</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum search memcached</span></span><br></pre></td></tr></table></figure><h4 id="2-启停和连接"><a href="#2-启停和连接" class="headerlink" title="2.启停和连接"></a>2.启停和连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># memcached -h</span></span><br><span class="line"><span class="comment"># service memcached start</span></span><br><span class="line"><span class="comment"># service memcached stop</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># netstat -antp | grep memcached </span></span><br><span class="line">tcp        0      0 0.0.0.0:11211               0.0.0.0:*                   LISTEN      2608/memcached      </span><br><span class="line">tcp        0      0 :::11211                    :::*                        LISTEN      2608/memcached</span><br></pre></td></tr></table></figure><h4 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h4><p>配置文件：/etc/sysconfig/memcached<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Properties file with JDBC-related settings.</span></span><br><span class="line"><span class="comment"># Applied by PropertyPlaceholderConfigurer from "applicationcontext-*.xml".</span></span><br><span class="line"><span class="comment"># Targeted at system administrators, to avoid touching the context XML files.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#memcached.servers=127.0.0.1:11211</span></span><br><span class="line"><span class="comment">#memcached.weights=1</span></span><br><span class="line">memcached.servers=127.0.0.1:11211</span><br><span class="line">memcached.weights=1</span><br><span class="line"><span class="comment">#初始连接数</span></span><br><span class="line">memcached.initConn=5</span><br><span class="line"><span class="comment">#最小连接数</span></span><br><span class="line">memcached.minConn=5</span><br><span class="line"><span class="comment">#最大连接数</span></span><br><span class="line">memcached.maxConn=250</span><br><span class="line"><span class="comment">#最大处理时间(豪秒)</span></span><br><span class="line">memcached.maxIdle=21600000</span><br><span class="line"><span class="comment">#主线程睡眠时间(豪秒) 连接池维护线程的睡眠时间 设置为0，维护线程不启动 维护线程主要通过log输出socket的运行状况，监测连接数目及空闲等待时间等参数以控制连接创建和关闭。</span></span><br><span class="line">memcached.maintSleep=30</span><br><span class="line"><span class="comment">#是否使用Nagle算法，因为我们的通讯数据量通常都比较大（相对TCP控制数据）而且要求响应及时，因此该值需要设置为false（默认是true）</span></span><br><span class="line">memcached.nagle=<span class="literal">false</span></span><br><span class="line"><span class="comment">#socket连接读取超时时间(豪秒)</span></span><br><span class="line">memcached.socketTo=3000</span><br><span class="line"><span class="comment">#设置socket的连接等待超时值</span></span><br><span class="line">memcached.socketConnectTo=0</span><br><span class="line"><span class="comment">#是否压缩数据 默认值是ture</span></span><br><span class="line">memcached.compressEnable=<span class="literal">true</span></span><br><span class="line"><span class="comment">#指定压缩大小(单位:K) 默认值是30K</span></span><br><span class="line">memcached.compressThreshold=65530</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#连接心跳监测开关。设为true则每次通信都要进行连接是否有效的监测，造成通信次数倍增，加大网络负载，因此该参数应该在对HA要求比较高的场合设为TRUE，默认状态是false。</span></span><br><span class="line">memcached.alivecheck=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接失败恢复开关 设置为TRUE，当宕机的服务器启动或中断的网络连接后，这个socket连接还可继续使用，否则将不再使用，默认状态是true，建议保持默认。</span></span><br><span class="line">memcached.failback=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 容错开关 设置为TRUE，当当前socket不可用时，程序会自动查找可用连接并返回，否则返回NULL，默认状态是true，建议保持默认。</span></span><br><span class="line">memcached.failover=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#cache数据的原始类型是String 默认值是false 只有在确定cache的数据类型是string的情况下才设为true，这样可以加快处理速度。</span></span><br><span class="line">memcached.primitiveasstring=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当primitiveAsString为true时使用的编码转化格式 默认值是utf-8 如果确认主要写入数据是中文等非ASCII编码字符，建议采用GBK等更短的编码格式</span></span><br><span class="line">memcached.defaultencoding=utf-8</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统通过YUM安装Memcache安装和配置。&lt;br&gt;
    
    </summary>
    
      <category term="nosql" scheme="https://dsxlinux.github.io/categories/nosql/"/>
    
    
      <category term="Memcache" scheme="https://dsxlinux.github.io/tags/Memcache/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB安装和配置</title>
    <link href="https://dsxlinux.github.io/2018/06/25/mongodb-install/"/>
    <id>https://dsxlinux.github.io/2018/06/25/mongodb-install/</id>
    <published>2018-06-25T12:40:53.000Z</published>
    <updated>2018-06-25T13:00:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统通过YUM安装MongoDB和配置。<br><a id="more"></a></p><h4 id="1-安装redis"><a href="#1-安装redis" class="headerlink" title="1.安装redis"></a>1.安装redis</h4><p>配置YUM源：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/yum.repos.d/mongodb.repo</span></span><br><span class="line">[mongodb]</span><br><span class="line">name=mongodb Repository</span><br><span class="line">baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64</span><br><span class="line"><span class="comment">#baseurl=https://repo.mongodb.org/yum/redhat/6/mongodb-org/3.7/x86_64/</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install mongodb</span></span><br></pre></td></tr></table></figure></p><h4 id="2-启停和连接"><a href="#2-启停和连接" class="headerlink" title="2.启停和连接"></a>2.启停和连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mongod start</span></span><br><span class="line"><span class="comment"># netstat -atnp | grep mongod</span></span><br><span class="line">tcp        0      0 127.0.0.1:27017             0.0.0.0:*                   LISTEN      2021/mongod</span><br><span class="line"><span class="comment"># service mongod stop</span></span><br></pre></td></tr></table></figure><h4 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h4><p>配置文件：/etc/mongod.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mongo.conf   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#where to log   </span></span><br><span class="line">logpath=/var/<span class="built_in">log</span>/mongo/mongod.log   </span><br><span class="line">  </span><br><span class="line">logappend=<span class="literal">true</span> <span class="comment">#以追加方式写入日志   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># fork and run in background   </span></span><br><span class="line">fork = <span class="literal">true</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#port = 27017 #端口   </span></span><br><span class="line">  </span><br><span class="line">dbpath=/var/lib/mongo <span class="comment">#数据库文件保存位置   </span></span><br><span class="line">directoryperdb=<span class="literal">true</span></span><br><span class="line"><span class="comment"># Enables periodic logging of CPU utilization and I/O wait   </span></span><br><span class="line"><span class="comment">#启用定期记录CPU利用率和 I/O 等待   </span></span><br><span class="line"><span class="comment">#cpu = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Turn on/off security.  Off is currently the default  </span></span><br><span class="line"><span class="comment"># 是否以安全认证方式运行，默认是不认证的非安全方式   </span></span><br><span class="line"><span class="comment">#noauth = true  </span></span><br><span class="line"><span class="comment">#auth = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Verbose logging output.   </span></span><br><span class="line"><span class="comment"># 详细记录输出   </span></span><br><span class="line"><span class="comment">#verbose = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Inspect all client data for validity on receipt (useful for  </span></span><br><span class="line"><span class="comment"># developing drivers)用于开发驱动程序时的检查客户端接收数据的有效性   </span></span><br><span class="line"><span class="comment">#objcheck = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Enable db quota management 启用数据库配额管理，默认每个db可以有8个文件，可以用quotaFiles参数设置   </span></span><br><span class="line"><span class="comment">#quota = true  </span></span><br><span class="line"><span class="comment"># 设置oplog记录等级   </span></span><br><span class="line"><span class="comment"># Set oplogging level where n is   </span></span><br><span class="line"><span class="comment">#   0=off (default)   </span></span><br><span class="line"><span class="comment">#   1=W   </span></span><br><span class="line"><span class="comment">#   2=R   </span></span><br><span class="line"><span class="comment">#   3=both   </span></span><br><span class="line"><span class="comment">#   7=W+some reads   </span></span><br><span class="line"><span class="comment">#oplog = 0  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Diagnostic/debugging option 动态调试项   </span></span><br><span class="line"><span class="comment">#nocursors = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Ignore query hints 忽略查询提示   </span></span><br><span class="line"><span class="comment">#nohints = true  </span></span><br><span class="line"><span class="comment"># 禁用http界面，默认为localhost：28017  </span></span><br><span class="line"><span class="comment"># Disable the HTTP interface (Defaults to localhost:27018).这个端口号写的是错的   </span></span><br><span class="line"><span class="comment">#nohttpinterface = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 关闭服务器端脚本，这将极大的限制功能   </span></span><br><span class="line"><span class="comment"># Turns off server-side scripting.  This will result in greatly limited   </span></span><br><span class="line"><span class="comment"># functionality   </span></span><br><span class="line"><span class="comment">#noscripting = true  </span></span><br><span class="line"><span class="comment"># 关闭扫描表，任何查询将会是扫描失败   </span></span><br><span class="line"><span class="comment"># Turns off table scans.  Any query that would do a table scan fails.   </span></span><br><span class="line"><span class="comment">#notablescan = true  </span></span><br><span class="line"><span class="comment"># 关闭数据文件预分配   </span></span><br><span class="line"><span class="comment"># Disable data file preallocation.   </span></span><br><span class="line"><span class="comment">#noprealloc = true  </span></span><br><span class="line"><span class="comment"># 为新数据库指定.ns文件的大小，单位:MB   </span></span><br><span class="line"><span class="comment"># Specify .ns file size for new databases.   </span></span><br><span class="line"><span class="comment"># nssize = &lt;size&gt;   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Accout token for Mongo monitoring server.   </span></span><br><span class="line"><span class="comment">#mms-token = &lt;token&gt;   </span></span><br><span class="line"><span class="comment"># mongo监控服务器的名称   </span></span><br><span class="line"><span class="comment"># Server name for Mongo monitoring server.   </span></span><br><span class="line"><span class="comment">#mms-name = &lt;server-name&gt;   </span></span><br><span class="line"><span class="comment"># mongo监控服务器的ping 间隔   </span></span><br><span class="line"><span class="comment"># Ping interval for Mongo monitoring server.   </span></span><br><span class="line"><span class="comment">#mms-interval = &lt;seconds&gt;   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Replication Options 复制选项   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># in replicated mongo databases, specify here whether this is a slave or master 在复制中，指定当前是从属关系   </span></span><br><span class="line"><span class="comment">#slave = true  </span></span><br><span class="line"><span class="comment">#source = master.example.com   </span></span><br><span class="line"><span class="comment"># Slave only: specify a single database to replicate   </span></span><br><span class="line"><span class="comment">#only = master.example.com   </span></span><br><span class="line"><span class="comment"># or   </span></span><br><span class="line"><span class="comment">#master = true  </span></span><br><span class="line"><span class="comment">#source = slave.example.com</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统通过YUM安装MongoDB和配置。&lt;br&gt;
    
    </summary>
    
      <category term="nosql" scheme="https://dsxlinux.github.io/categories/nosql/"/>
    
    
      <category term="redis" scheme="https://dsxlinux.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis安装和配置</title>
    <link href="https://dsxlinux.github.io/2018/06/25/redis-install/"/>
    <id>https://dsxlinux.github.io/2018/06/25/redis-install/</id>
    <published>2018-06-25T09:56:15.000Z</published>
    <updated>2018-06-25T10:07:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统通过YUM安装redis安装和配置。<br><a id="more"></a></p><h4 id="1-安装redis"><a href="#1-安装redis" class="headerlink" title="1.安装redis"></a>1.安装redis</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install epel-releaseyum添加epel源</span></span><br><span class="line"><span class="comment"># yum -y install redis</span></span><br></pre></td></tr></table></figure><h4 id="2-启停和连接"><a href="#2-启停和连接" class="headerlink" title="2.启停和连接"></a>2.启停和连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service redis start</span></span><br><span class="line"><span class="comment"># ps -ef | grep redis</span></span><br><span class="line"><span class="comment"># redis-cli -h localhost -p 6379进入redis</span></span><br><span class="line">localhost:6379&gt;</span><br></pre></td></tr></table></figure><h4 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h4><p>配置文件：/etc/redis.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#是否作为守护进程运行  </span></span><br><span class="line">daemonize yes  </span><br><span class="line"><span class="comment">#如以后台进程运行，则需指定一个pid，默认为/var/run/redis.pid  </span></span><br><span class="line"><span class="comment">#pidfile redis.pid  </span></span><br><span class="line"><span class="comment">#绑定主机IP，默认值为127.0.0.1  </span></span><br><span class="line"><span class="built_in">bind</span> 182.92.168.171  </span><br><span class="line"><span class="comment">#Redis默认监听端口  </span></span><br><span class="line">port 6379  </span><br><span class="line"><span class="comment">#客户端闲置多少秒后，断开连接，默认为300（秒）  </span></span><br><span class="line">timeout 300  </span><br><span class="line"><span class="comment">#日志记录等级，有4个可选值，debug，verbose（默认值），notice，warning  </span></span><br><span class="line">loglevel verbose  </span><br><span class="line"><span class="comment">#指定日志输出的文件名，默认值为stdout，也可设为/dev/null屏蔽日志  </span></span><br><span class="line">logfile stdout  </span><br><span class="line"><span class="comment">#可用数据库数，默认值为16，默认数据库为0  </span></span><br><span class="line">databases 16  </span><br><span class="line"><span class="comment">#保存数据到disk的策略  </span></span><br><span class="line"><span class="comment">#当有一条Keys数据被改变是，900秒刷新到disk一次  </span></span><br><span class="line">save 900 1  </span><br><span class="line"><span class="comment">#当有10条Keys数据被改变时，300秒刷新到disk一次  </span></span><br><span class="line">save 300 10  </span><br><span class="line"><span class="comment">#当有1w条keys数据被改变时，60秒刷新到disk一次  </span></span><br><span class="line">save 60 10000  </span><br><span class="line"><span class="comment">#当dump .rdb数据库的时候是否压缩数据对象  </span></span><br><span class="line">rdbcompression yes  </span><br><span class="line"><span class="comment">#本地数据库文件名，默认值为dump.rdb  </span></span><br><span class="line">dbfilename dump.rdb  </span><br><span class="line"><span class="comment">#本地数据库存放路径，默认值为 ./  </span></span><br><span class="line">dir /var/lib/redis/  </span><br><span class="line"><span class="comment">########### Replication #####################  </span></span><br><span class="line"><span class="comment">#Redis的复制配置  </span></span><br><span class="line"><span class="comment"># slaveof &lt;masterip&gt; &lt;masterport&gt; 当本机为从服务时，设置主服务的IP及端口  </span></span><br><span class="line"><span class="comment"># masterauth &lt;master-password&gt; 当本机为从服务时，设置主服务的连接密码  </span></span><br><span class="line"><span class="comment">#连接密码  </span></span><br><span class="line"><span class="comment"># requirepass foobared  </span></span><br><span class="line"><span class="comment">#最大客户端连接数，默认不限制  </span></span><br><span class="line"><span class="comment"># maxclients 128  </span></span><br><span class="line"><span class="comment">#最大内存使用设置，达到最大内存设置后，Redis会先尝试清除已到期或即将到期的Key，当此方法处理后，任到达最大内存设置，将无法再进行写入操作。  </span></span><br><span class="line"><span class="comment"># maxmemory &lt;bytes&gt;  </span></span><br><span class="line"><span class="comment">#是否在每次更新操作后进行日志记录，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认值为no  </span></span><br><span class="line">appendonly no  </span><br><span class="line"><span class="comment">#更新日志文件名，默认值为appendonly.aof  </span></span><br><span class="line"><span class="comment">#appendfilename  </span></span><br><span class="line"><span class="comment">#更新日志条件，共有3个可选值。no表示等操作系统进行数据缓存同步到磁盘，always表示每次更新操作后手动调用fsync()将数据写到磁盘，everysec表示每秒同步一次（默认值）。  </span></span><br><span class="line"><span class="comment"># appendfsync always  </span></span><br><span class="line">appendfsync everysec  </span><br><span class="line"><span class="comment"># appendfsync no  </span></span><br><span class="line"><span class="comment">################ VIRTUAL MEMORY ###########  </span></span><br><span class="line"><span class="comment">#是否开启VM功能，默认值为no  </span></span><br><span class="line">vm-enabled no  </span><br><span class="line"><span class="comment"># vm-enabled yes  </span></span><br><span class="line"><span class="comment">#虚拟内存文件路径，默认值为/tmp/redis.swap，不可多个Redis实例共享  </span></span><br><span class="line">vm-swap-file /tmp/redis.swap  </span><br><span class="line"><span class="comment">#将所有大于vm-max-memory的数据存入虚拟内存,无论vm-max-memory设置多小,所有索引数据都是内存存储的 (Redis的索引数据就是keys),也就是说,当vm-max-memory设置为0的时候,其实是所有value都存在于磁盘。默认值为0。  </span></span><br><span class="line">vm-max-memory 0  </span><br><span class="line">vm-page-size 32  </span><br><span class="line">vm-pages 134217728  </span><br><span class="line">vm-max-threads 4  </span><br><span class="line"><span class="comment">############# ADVANCED CONFIG ###############  </span></span><br><span class="line">glueoutputbuf yes  </span><br><span class="line"><span class="built_in">hash</span>-max-zipmap-entries 64  </span><br><span class="line"><span class="built_in">hash</span>-max-zipmap-value 512  </span><br><span class="line"><span class="comment">#是否重置Hash表  </span></span><br><span class="line">activerehashing yes</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统通过YUM安装redis安装和配置。&lt;br&gt;
    
    </summary>
    
      <category term="redis" scheme="https://dsxlinux.github.io/categories/redis/"/>
    
    
      <category term="redis" scheme="https://dsxlinux.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Docker入门</title>
    <link href="https://dsxlinux.github.io/2018/06/25/docker-basic/"/>
    <id>https://dsxlinux.github.io/2018/06/25/docker-basic/</id>
    <published>2018-06-25T07:08:25.000Z</published>
    <updated>2018-06-25T09:27:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统安装docker，以及docker的基本操作。<br><a id="more"></a></p><h4 id="1-Docker概述"><a href="#1-Docker概述" class="headerlink" title="1.Docker概述"></a>1.Docker概述</h4><p>Docker是一种虚拟化技术，即容器。容器不是模拟一个完整的操作系统，而是对进程进行隔离。<br>对于容器里面的进程来说，它接触到的各种资源都是虚拟的，从而实现与底层系统的隔离。</p><h4 id="2-Docker安装"><a href="#2-Docker安装" class="headerlink" title="2.Docker安装"></a>2.Docker安装</h4><p>Docker 是一个开源的商业产品，有两个版本：社区版（Community Edition，缩写为 CE）和企业版（Enterprise Edition，缩写为 EE）。下面的介绍都针对社区版。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install epel-release -y安装epel源</span></span><br><span class="line"><span class="comment"># yum install docker-io安装docker</span></span><br></pre></td></tr></table></figure></p><p>安装完成后，运行下面的命令，验证是否安装成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker version</span></span><br></pre></td></tr></table></figure></p><p>启动docker服务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service docker start</span></span><br><span class="line"><span class="comment"># chkconfig docker on</span></span><br></pre></td></tr></table></figure></p><h4 id="3-镜像操作"><a href="#3-镜像操作" class="headerlink" title="3.镜像操作"></a>3.镜像操作</h4><ul><li>列出本地镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker images可以看到没有镜像</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br></pre></td></tr></table></figure><ul><li>创建镜像</li></ul><p>创建镜像有很多方法，用户可以从 Docker Hub 获取已有镜像，也可以利用本地文件系统创建一个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker pull busybox</span></span><br><span class="line"><span class="comment"># docker run busybox echo "hello world"</span></span><br><span class="line"><span class="comment"># # docker images </span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line">busybox             latest              bc538d5908c7        4 weeks ago         1.146 MB</span><br></pre></td></tr></table></figure><ul><li>删除镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker kill $(docker ps -a -q)杀死所有running状态的容器</span></span><br><span class="line"><span class="comment"># docker rm $(docker ps -a -q)</span></span><br><span class="line"><span class="comment"># docker rmi bc538d5908c7删除镜像</span></span><br></pre></td></tr></table></figure><ul><li>搜索镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker search centos</span></span><br></pre></td></tr></table></figure><ul><li>下载镜像并启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker pull centos</span></span><br><span class="line"><span class="comment"># docker run -i -t centos /bin/bash</span></span><br></pre></td></tr></table></figure><h4 id="4-docker应用"><a href="#4-docker应用" class="headerlink" title="4.docker应用"></a>4.docker应用</h4><ul><li>docker安装mysql服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker pull hub.c.163.com/library/mysql:5.7拉取mysql镜像，采用网易加速地址</span></span><br><span class="line"><span class="comment"># docker images</span></span><br><span class="line">REPOSITORY                    TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line">centos                        latest              88ec626ba223        2 weeks ago         199.7 MB</span><br><span class="line">hub.c.163.com/library/mysql   5.7                 573ca163b053        14 months ago       407.1 MB</span><br><span class="line"><span class="comment"># docker tag hub.c.163.com/library/mysql:5.7 mysql:5.7 重命名镜像名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir /opt/mysql/datadir #用于挂载mysql数据文件</span></span><br><span class="line"><span class="comment"># mkdir /opt/mysql/conf.d #用于挂载mysql配置文件</span></span><br><span class="line"><span class="comment"># docker run --name mysql5.7 -p 3306:3306 -v /opt/mysql/datadir:/var/lib/mysql -v /opt/mysql/conf.d:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span></span><br><span class="line">参数说明：</span><br><span class="line">--name：容器名</span><br><span class="line">--p：映射宿主主机端口</span><br><span class="line">-v：挂载宿主目录到容器目录</span><br><span class="line">-e：设置环境变量，此处指定root密码</span><br><span class="line">-d：后台运行容器</span><br><span class="line"><span class="comment"># mysql -h192.168.0.215 -p3306 -uroot -p连接测试</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统安装docker，以及docker的基本操作。&lt;br&gt;
    
    </summary>
    
      <category term="docker" scheme="https://dsxlinux.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://dsxlinux.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>mysqld_multi实现单机主从复制</title>
    <link href="https://dsxlinux.github.io/2018/06/24/mysql-replication/"/>
    <id>https://dsxlinux.github.io/2018/06/24/mysql-replication/</id>
    <published>2018-06-24T10:32:46.000Z</published>
    <updated>2018-06-24T10:57:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍mysqld_multi实现单机主从复制。<br><a id="more"></a></p><h4 id="1-使用mysqld-multi配置三个实例"><a href="#1-使用mysqld-multi配置三个实例" class="headerlink" title="1.使用mysqld_multi配置三个实例"></a>1.使用mysqld_multi配置三个实例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqld_multi start</span></span><br><span class="line"><span class="comment"># mysqld_multi report</span></span><br><span class="line"><span class="comment"># netstat -an|grep 330</span></span><br></pre></td></tr></table></figure><h4 id="2-设置一个复制使用的账户"><a href="#2-设置一个复制使用的账户" class="headerlink" title="2.设置一个复制使用的账户"></a>2.设置一个复制使用的账户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p123456 -S  /tmp/mysql.sock3306主库</span></span><br><span class="line">mysql&gt; grant replication slave on *.* to <span class="string">'repl'</span>@<span class="string">'localhost'</span> identified by <span class="string">'123'</span>;</span><br><span class="line">mysql&gt; grant replication slave on *.* to <span class="string">'repl'</span>@<span class="string">'%'</span> identified by <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><h4 id="3-开启BINLOG"><a href="#3-开启BINLOG" class="headerlink" title="3.开启BINLOG"></a>3.开启BINLOG</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/my.cnf</span></span><br><span class="line">[mysqld_multi]</span><br><span class="line">mysqld = /usr/bin/mysqld_safe</span><br><span class="line">mysqladmin = /usr/bin/mysqladmin</span><br><span class="line">user=root</span><br><span class="line">pass=123456</span><br><span class="line"><span class="built_in">log</span>=/usr/<span class="built_in">local</span>/mysql/mysql_multi.log </span><br><span class="line"></span><br><span class="line">[mysqld3306]</span><br><span class="line">basedir=/usr</span><br><span class="line">datadir=/usr/<span class="built_in">local</span>/mysql/data3306</span><br><span class="line">port=3306</span><br><span class="line">user=mysql</span><br><span class="line">socket=/tmp/mysql.sock3306</span><br><span class="line">server_id=1</span><br><span class="line">log_bin=/usr/<span class="built_in">local</span>/mysql/mysql-bin-3306</span><br><span class="line"> </span><br><span class="line">[mysqld3307]</span><br><span class="line">basedir=/usr</span><br><span class="line">datadir=/usr/<span class="built_in">local</span>/mysql/data3307</span><br><span class="line">port=3307</span><br><span class="line">user=mysql</span><br><span class="line">socket=/tmp/mysql.sock3307</span><br><span class="line">server_id=2</span><br><span class="line">log_bin=/usr/<span class="built_in">local</span>/mysql/mysql-bin-3307</span><br><span class="line"> </span><br><span class="line">[mysqld3308]</span><br><span class="line">basedir=/usr</span><br><span class="line">datadir=/usr/<span class="built_in">local</span>/mysql/data3308</span><br><span class="line">port=3308</span><br><span class="line">user=mysql</span><br><span class="line">socket=/tmp/mysql.sock3308</span><br><span class="line">server_id=3</span><br><span class="line">log_bin=/usr/<span class="built_in">local</span>/mysql/mysql-bin-3308</span><br></pre></td></tr></table></figure><h4 id="4-主库配置"><a href="#4-主库配置" class="headerlink" title="4.主库配置"></a>4.主库配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p123456 -S  /tmp/mysql.sock3307</span></span><br><span class="line">mysql&gt; flush tables with <span class="built_in">read</span> lock;</span><br><span class="line">mysql&gt; show master status \G</span><br><span class="line">mysql&gt; unlock tables;</span><br><span class="line">mysql&gt; start slave;</span><br></pre></td></tr></table></figure><h4 id="5-从库配置"><a href="#5-从库配置" class="headerlink" title="5.从库配置"></a>5.从库配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p123456 -S  /tmp/mysql.sock3307</span></span><br><span class="line">mysql&gt; show variables like <span class="string">'%log_bin%'</span>;</span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; change master to master_host=<span class="string">'127.0.0.1'</span>,master_user=<span class="string">'repl'</span>,master_password=<span class="string">'123'</span>,master_log_file=<span class="string">'mysql-bin.000001'</span>,master_log_pos=0;</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status \G</span><br><span class="line">mysql&gt; show processlist \G</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍mysqld_multi实现单机主从复制。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Nginx系列教程03</title>
    <link href="https://dsxlinux.github.io/2018/06/24/nginx-rewrite/"/>
    <id>https://dsxlinux.github.io/2018/06/24/nginx-rewrite/</id>
    <published>2018-06-24T07:58:19.000Z</published>
    <updated>2018-06-24T08:20:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍nginx服务器的rewrite规则。<br><a id="more"></a></p><h4 id="1-Nginx-URL重写（rewrite）介绍"><a href="#1-Nginx-URL重写（rewrite）介绍" class="headerlink" title="1.Nginx URL重写（rewrite）介绍"></a>1.Nginx URL重写（rewrite）介绍</h4><p>rewrite功能是实现RUL地址的重定向。Nginx的rewrite功能需要PCRE软件的支持，即通过perl兼容正则表达式语句进行规则匹配的。</p><ul><li><p>rewrite语法格式及参数语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rewrite &lt;regex&gt; &lt;replacement&gt; [flag]</span><br><span class="line">关键字   正则     替代内容    flag标记</span><br><span class="line"></span><br><span class="line">关键字：其中关键字error_log不能改变</span><br><span class="line">正则：perl兼容正则表达式语句进行规则匹配</span><br><span class="line">替代内容：将正则匹配的内容替换成replacement</span><br><span class="line">flag标记：rewrite支持的flag标记</span><br><span class="line"></span><br><span class="line">flag标记说明：</span><br><span class="line">last<span class="comment">#本条规则匹配完成后，继续向下匹配新的location URI规则</span></span><br><span class="line"><span class="built_in">break</span><span class="comment">#本条规则匹配完成即终止，不再匹配后面的任何规则</span></span><br><span class="line">redirect<span class="comment">#返回302临时重定向，浏览器地址会显示跳转后的URL地址</span></span><br><span class="line">permanent<span class="comment">#返回301永久重定向，浏览器地址栏会显示跳转后的URL地址</span></span><br></pre></td></tr></table></figure></li><li><p>rewrite参数的标签段位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server,location,<span class="keyword">if</span></span><br></pre></td></tr></table></figure></li><li><p>regex常用正则表达式说明<br>| 字符 | 描述 |<br>| - | :-: |<br>| \ | 转移字符，如”\n”匹配一个换行符，而”\$”则匹配”$” |<br>| ^ | 匹配输入字符串的起始位置 |<br>| $ | 匹配输入字符串的结束位置 |<br>| <em> | 匹配前面的字符零次或多次。如”ol</em>“能匹配”o”及”ol”、”oll” |<br>| + | 匹配前面的字符一次或多次。如“ol+”能匹配“ol”及“oll”、“oll”，但不能匹配“o” |<br>| ? | 匹配前面的字符零次或一次，例如“do(es)?”能匹配“do”或者“does”，”?”等效于”{0,1}” |<br>| . | 匹配除“\n”之外的任何单个字符 |<br>| (pattern) | 常用$0…$9属性获取小括号中的匹配内容，要匹配圆括号字符需要(Content) |</p></li></ul><p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">location = / &#123;  </span><br><span class="line">    <span class="comment">#规则A  </span></span><br><span class="line">&#125;  </span><br><span class="line">location = /login &#123;  </span><br><span class="line">    <span class="comment">#规则B  </span></span><br><span class="line">&#125;  </span><br><span class="line">location ^~ /static/ &#123;  </span><br><span class="line">    <span class="comment">#规则C  </span></span><br><span class="line">&#125;  </span><br><span class="line">location ~ \.(gif|jpg|png|js|css)$ &#123;  </span><br><span class="line">    <span class="comment">#规则D  </span></span><br><span class="line">&#125;  </span><br><span class="line">location ~* \.png$ &#123;  </span><br><span class="line">    <span class="comment">#规则E  </span></span><br><span class="line">&#125;  </span><br><span class="line">location !~ \.xhtml$ &#123;  </span><br><span class="line">    <span class="comment">#规则F  </span></span><br><span class="line">&#125;  </span><br><span class="line">location !~* \.xhtml$ &#123;  </span><br><span class="line">    <span class="comment">#规则G  </span></span><br><span class="line">&#125;  </span><br><span class="line">location / &#123;  </span><br><span class="line">    <span class="comment">#规则H  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="2-常用的变量"><a href="#2-常用的变量" class="headerlink" title="2.常用的变量"></a>2.常用的变量</h4><p>$args ： #这个变量等于请求行中的参数，同$query_string<br>$content_length ： 请求头中的Content-length字段。<br>$content_type ： 请求头中的Content-Type字段。<br>$document_root ： 当前请求在root指令中指定的值。<br>$host ： 请求主机头字段，否则为服务器名称。<br>$http_user_agent ： 客户端agent信息<br>$http_cookie ： 客户端cookie信息<br>$limit_rate ： 这个变量可以限制连接速率。<br>$request_method ： 客户端请求的动作，通常为GET或POST。<br>$remote_addr ： 客户端的IP地址。<br>$remote_port ： 客户端的端口。<br>$remote_user ： 已经经过Auth Basic Module验证的用户名。<br>$request_filename ： 当前请求的文件路径，由root或alias指令与URI请求生成。<br>$scheme ： HTTP方法（如http，https）。<br>$server_protocol ： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。<br>$server_addr ： 服务器地址，在完成一次系统调用后可以确定这个值。<br>$server_name ： 服务器名称。<br>$server_port ： 请求到达服务器的端口号。<br>$request_uri ： 包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。<br>$uri ： 不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。<br>$document_uri ： 与$uri相同。</p><h4 id="3-rewrite应用"><a href="#3-rewrite应用" class="headerlink" title="3.rewrite应用"></a>3.rewrite应用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">if ($http_user_agent ~ MSIE) &#123;</span><br><span class="line">    rewrite ^(.*)$ /msie/$1 break;</span><br><span class="line">&#125; //如果UA包含"MSIE"，rewrite请求到/msid/目录下</span><br><span class="line"></span><br><span class="line">if ($http_cookie ~* "id=([^;]+)(?:;|$)") &#123;</span><br><span class="line">    set $id $1;</span><br><span class="line"> &#125; //如果cookie匹配正则，设置变量$id等于正则引用部分</span><br><span class="line"></span><br><span class="line">if ($request_method = POST) &#123;</span><br><span class="line">    return 405;</span><br><span class="line">&#125; //如果提交方法为POST，则返回状态405（Method not allowed）。return不能返回301,302</span><br><span class="line"></span><br><span class="line">if ($slow) &#123;</span><br><span class="line">    limit_rate 10k;</span><br><span class="line">&#125; //限速，$slow可以通过 set 指令设置</span><br><span class="line"></span><br><span class="line">if (!-f $request_filename)&#123;</span><br><span class="line">    break;</span><br><span class="line">    proxy_pass  http://127.0.0.1; </span><br><span class="line">&#125; //如果请求的文件名不存在，则反向代理到localhost 。这里的break也是停止rewrite检查</span><br><span class="line"></span><br><span class="line">if ($args ~ post=140)&#123;</span><br><span class="line">    rewrite ^ http://mysite.com/ permanent;</span><br><span class="line">&#125; //如果query string中包含"post=140"，永久重定向到mysite.com</span><br></pre></td></tr></table></figure><ul><li><p>301永久定向到新域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name www.old-name.com old-name.com;</span><br><span class="line">    <span class="built_in">return</span> 301 <span class="variable">$scheme</span>://www.new-name.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>不带www的域名301跳转到带www的域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name mysite.com;</span><br><span class="line">    <span class="built_in">return</span> 301 <span class="variable">$scheme</span>://www.mysite.com<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>http站点301跳转到https站点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.mysite.com;</span><br><span class="line">    <span class="built_in">return</span> 301 https://www.mysite.com<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍nginx服务器的rewrite规则。&lt;br&gt;
    
    </summary>
    
      <category term="nginx" scheme="https://dsxlinux.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://dsxlinux.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx系列教程02</title>
    <link href="https://dsxlinux.github.io/2018/06/24/nginx-apply/"/>
    <id>https://dsxlinux.github.io/2018/06/24/nginx-apply/</id>
    <published>2018-06-24T06:25:30.000Z</published>
    <updated>2018-06-24T08:26:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍nginx服务器的各种应用方式。<br><a id="more"></a></p><h4 id="1-静态HTTP服务器"><a href="#1-静态HTTP服务器" class="headerlink" title="1.静态HTTP服务器"></a>1.静态HTTP服务器</h4><p>Nginx是一个HTTP服务器，可以将服务器上的静态文件（如HTML、图片）通过HTTP协议展现给客户端。<br>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80; <span class="comment"># 端口号</span></span><br><span class="line">location / &#123;</span><br><span class="line">root /usr/share/nginx/html; <span class="comment"># 静态文件路径</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="2-反向代理服务器"><a href="#2-反向代理服务器" class="headerlink" title="2.反向代理服务器"></a>2.反向代理服务器</h4><p>反向代理服务器原理：<br>客户端—&gt; nginx反向代理—&gt; 应用服务器<br>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://192.168.0.112:8080; <span class="comment"># 应用服务器HTTP地址</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="3-负载均衡"><a href="#3-负载均衡" class="headerlink" title="3.负载均衡"></a>3.负载均衡</h4><p>负载均衡原理：<br>                          |—- 应用服务器<br>                          |<br>客户端—&gt; nginx反向代理—–|—- 应用服务器<br>                          |<br>                          |—- 应用服务器</p><p>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">upstream myapp &#123;</span><br><span class="line">server 192.168.0.111:8080; <span class="comment"># 应用服务器1</span></span><br><span class="line">server 192.168.0.112:8080; <span class="comment"># 应用服务器2</span></span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://myweb;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="4-虚拟主机"><a href="#4-虚拟主机" class="headerlink" title="4.虚拟主机"></a>4.虚拟主机</h4><p>将多个网站部署在同一台服务器上。<br>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80 default_server;</span><br><span class="line">server_name _;</span><br><span class="line"><span class="built_in">return</span> 444; <span class="comment"># 过滤其他域名的请求，返回444状态码</span></span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.aaa.com; <span class="comment"># www.aaa.com域名</span></span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://localhost:8080; <span class="comment"># 对应端口号8080</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.bbb.com; <span class="comment"># www.bbb.com域名</span></span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://localhost:8081; <span class="comment"># 对应端口号8081</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="5-FastCGI"><a href="#5-FastCGI" class="headerlink" title="5.FastCGI"></a>5.FastCGI</h4><p>Nginx本身不支持PHP等语言，但是它可以通过FastCGI来将请求扔给某些语言或框架处理（例如PHP、Python、Perl）。<br>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">include fastcgi_params;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME /PHP文件路径<span class="variable">$fastcgi_script_name</span>; <span class="comment"># PHP文件路径</span></span><br><span class="line">fastcgi_pass 127.0.0.1:9000; <span class="comment"># PHP-FPM地址和端口号</span></span><br><span class="line"><span class="comment"># 另一种方式：fastcgi_pass unix:/var/run/php5-fpm.sock;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍nginx服务器的各种应用方式。&lt;br&gt;
    
    </summary>
    
      <category term="nginx" scheme="https://dsxlinux.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://dsxlinux.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx系列教程01</title>
    <link href="https://dsxlinux.github.io/2018/06/24/nginx-basic/"/>
    <id>https://dsxlinux.github.io/2018/06/24/nginx-basic/</id>
    <published>2018-06-24T05:20:53.000Z</published>
    <updated>2018-06-24T06:34:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统安装nginx和nginx基本使用。<br><a id="more"></a></p><h4 id="1-Nginx下载安装"><a href="#1-Nginx下载安装" class="headerlink" title="1.Nginx下载安装"></a>1.Nginx下载安装</h4><p>可以下载ngxin源码包来安装，也可以通过nginx官网的YUM源安装。</p><ul><li><p>配置YUM源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx]</span><br><span class="line">name=nginx</span><br><span class="line">baseurl=http://nginx.org/packages/centos/6/x86_64/</span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></li><li><p>安装nginx</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install nginx</span></span><br></pre></td></tr></table></figure><h4 id="2-Nginx配置文件"><a href="#2-Nginx配置文件" class="headerlink" title="2.Nginx配置文件"></a>2.Nginx配置文件</h4><ul><li>查看nginx配置文件。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qc nginx</span></span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/etc/nginx/conf.d/default.conf</span><br><span class="line">/etc/nginx/fastcgi_params</span><br><span class="line">/etc/nginx/koi-utf</span><br><span class="line">/etc/nginx/koi-win</span><br><span class="line">/etc/nginx/mime.types</span><br><span class="line">/etc/nginx/nginx.conf</span><br><span class="line">/etc/nginx/scgi_params</span><br><span class="line">/etc/nginx/uwsgi_params</span><br><span class="line">/etc/nginx/win-utf</span><br><span class="line">/etc/sysconfig/nginx</span><br><span class="line">/etc/sysconfig/nginx-debug</span><br></pre></td></tr></table></figure><ul><li>nginx主配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment">#运行用户</span></span><br><span class="line">user  nginx;</span><br><span class="line"><span class="comment">#工作进程：数目。</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误日志：存放路径。</span></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;</span><br><span class="line"><span class="comment"># pid（进程标识符）：存放路径。</span></span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 事件配置</span></span><br><span class="line">events &#123;</span><br><span class="line">    <span class="comment">#每个进程可以处理的最大连接数</span></span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># http参数</span></span><br><span class="line">http &#123;</span><br><span class="line"><span class="comment"># 文件扩展名与文件类型映射表</span></span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    <span class="comment"># 默认文件类型</span></span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志相关定义</span></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#连接日志的路径，指定的日志格式放在最后</span></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启高效传输模式</span></span><br><span class="line">    sendfile        on; </span><br><span class="line">    <span class="comment">#防止网络阻塞</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on; </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#客户端连接超时时间，单位是秒</span></span><br><span class="line">    keepalive_timeout  65; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">#客户端请求头读取超时时间</span></span><br><span class="line">    client_header_timeout 10;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置客户端请求主体读取超时时间</span></span><br><span class="line">    client_body_timeout 10;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#响应客户端超时时间</span></span><br><span class="line">    send_timeout 10;</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启gzip压缩输出</span></span><br><span class="line">    <span class="comment">#gzip  on; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 子配置文件</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>子配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nginx/conf.d/default.conf</span></span><br><span class="line"><span class="comment"># 虚拟主机定义</span></span><br><span class="line">server &#123;</span><br><span class="line"><span class="comment"># 监听端口</span></span><br><span class="line">    listen       80;</span><br><span class="line">    <span class="comment"># 访问域名</span></span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 编码格式，若网页格式与此不同，将被自动转码</span></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment"># 虚拟主机访问日志定义</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对URL进行匹配</span></span><br><span class="line">    location / &#123;</span><br><span class="line">    <span class="comment"># 访问路径，可相对也可绝对路径</span></span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        <span class="comment"># 首页文件。以下按顺序匹配</span></span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 错误信息返回页面</span></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问URL以.php结尾则自动转交给127.0.0.1</span></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># php脚本请求全部转发给FastCGI处理</span></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 禁止访问.ht页面 （需ngx_http_access_module模块）</span></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx's one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># HTTPS虚拟主机定义</span></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>其他配置</li></ul><p>​    Nginx状态监控 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Nginx运行状态，StubStatus模块获取Nginx自启动的工作状态（编译时要开启对应功能）</span></span><br><span class="line"><span class="comment">#location /NginxStatus &#123;</span></span><br><span class="line"><span class="comment">#    #启用StubStatus的工作访问状态    </span></span><br><span class="line"><span class="comment">#    stub_status    on;</span></span><br><span class="line"><span class="comment">#    #指定StubStaus模块的访问日志文件</span></span><br><span class="line"><span class="comment">#    access_log    logs/Nginxstatus.log;</span></span><br><span class="line"><span class="comment">#    #Nginx认证机制（需Apache的htpasswd命令生成）</span></span><br><span class="line"><span class="comment">#    #auth_basic    "NginxStatus";</span></span><br><span class="line"><span class="comment">#    #用来认证的密码文件</span></span><br><span class="line"><span class="comment">#    #auth_basic_user_file    ../htpasswd;    </span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line">访问：http://IP/NginxStatus(测试就不加密码验证相关)</span><br></pre></td></tr></table></figure><p>​    反向代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#以下配置追加在HTTP的全局变量中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">proxy_connect_timeout      5;</span><br><span class="line"></span><br><span class="line"><span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">proxy_send_timeout         5;</span><br><span class="line"></span><br><span class="line"><span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">proxy_read_timeout         60;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">proxy_buffer_size          16k;</span><br><span class="line"></span><br><span class="line"><span class="comment">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span></span><br><span class="line">proxy_buffers              4 32k;</span><br><span class="line"></span><br><span class="line"><span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">proxy_busy_buffers_size    64k;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span><br><span class="line">proxy_temp_file_write_size 64k;</span><br><span class="line"></span><br><span class="line"><span class="comment">#反向代理缓存目录</span></span><br><span class="line">proxy_cache_path /data/proxy/cache levels=1:2 keys_zone=cache_one:500m inactive=1d max_size=1g;</span><br><span class="line"></span><br><span class="line"><span class="comment">#levels=1:2 设置目录深度，第一层目录是1个字符，第2层是2个字符</span></span><br><span class="line"><span class="comment">#keys_zone:设置web缓存名称和内存缓存空间大小</span></span><br><span class="line"><span class="comment">#inactive:自动清除缓存文件时间。</span></span><br><span class="line"><span class="comment">#max_size:硬盘空间最大可使用值。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定临时缓存文件的存储路径(路径需和上面路径在同一分区)</span></span><br><span class="line">proxy_temp_path /data/proxy/temp</span><br><span class="line"></span><br><span class="line"><span class="comment">#服务配置</span></span><br><span class="line">server &#123;</span><br><span class="line">    <span class="comment">#侦听的80端口</span></span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">        <span class="comment">#反向代理缓存设置命令(proxy_cache zone|off,默认关闭所以要设置)</span></span><br><span class="line">        proxy_cache cache_one;</span><br><span class="line">        <span class="comment">#对不同的状态码缓存不同时间</span></span><br><span class="line">        proxy_cache_valid 200 304 12h;</span><br><span class="line">        <span class="comment">#设置以什么样参数获取缓存文件名</span></span><br><span class="line">        proxy_cache_key <span class="variable">$host</span><span class="variable">$uri</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">        <span class="comment">#后7端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>; </span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;   </span><br><span class="line">        <span class="comment">#代理设置</span></span><br><span class="line">        proxy_pass   http://IP; </span><br><span class="line">        <span class="comment">#文件过期时间控制</span></span><br><span class="line">        expires    1d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#配置手动清楚缓存(实现此功能需第三方模块 ngx_cache_purge)</span></span><br><span class="line">    <span class="comment">#http://www.123.com/2017/0316/17.html访问</span></span><br><span class="line">    <span class="comment">#http://www.123.com/purge/2017/0316/17.html清楚URL缓存</span></span><br><span class="line">    location ~ /purge(/.*) &#123;</span><br><span class="line">        allow    127.0.0.1;</span><br><span class="line">        deny    all;</span><br><span class="line">        proxy_cache_purge    cache_one    <span class="variable">$host</span><span class="variable">$1</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#设置扩展名以.jsp、.php、.jspx结尾的动态应用程序不做缓存</span></span><br><span class="line">    location ~.*\.(jsp|php|jspx)?$ &#123; </span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>; </span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>; </span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;   </span><br><span class="line">        proxy_pass http://http://IP;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​    负载均衡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#负载均衡服务器池</span></span><br><span class="line">upstream my_server_pool &#123;</span><br><span class="line">    <span class="comment">#调度算法</span></span><br><span class="line">    <span class="comment">#1.轮循（默认）（weight轮循权值）</span></span><br><span class="line">    <span class="comment">#2.ip_hash：根据每个请求访问IP的hash结果分配。（会话保持）</span></span><br><span class="line">    <span class="comment">#3.fair:根据后端服务器响应时间最短请求。（upstream_fair模块）</span></span><br><span class="line">    <span class="comment">#4.url_hash:根据访问的url的hash结果分配。（需hash软件包）</span></span><br><span class="line">    <span class="comment">#参数：</span></span><br><span class="line">    <span class="comment">#down：表示不参与负载均衡</span></span><br><span class="line">    <span class="comment">#backup:备份服务器</span></span><br><span class="line">    <span class="comment">#max_fails:允许最大请求错误次数</span></span><br><span class="line">    <span class="comment">#fail_timeout:请求失败后暂停服务时间。</span></span><br><span class="line">    server 192.168.1.109:80 weight=1 max_fails=2 fail_timeout=30;</span><br><span class="line">    server 192.168.1.108:80 weight=2 max_fails=2 fail_timeout=30;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#负载均衡调用</span></span><br><span class="line">server &#123;</span><br><span class="line">    ...</span><br><span class="line">    location / &#123;</span><br><span class="line">    proxy_pass http://my_server_pool;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    URL重写 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据不同的浏览器URL重写</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$http_user_agent</span> ~ Firefox)&#123;</span><br><span class="line">  rewrite ^(.*)$  /firefox/<span class="variable">$1</span> <span class="built_in">break</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$http_user_agent</span> ~ MSIE)&#123;</span><br><span class="line">  rewrite ^(.*)$  /msie/<span class="variable">$1</span> <span class="built_in">break</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">#实现域名跳转</span></span><br><span class="line">  location / &#123;</span><br><span class="line">  rewrite ^/(.*)$ https://web8.example.com<span class="variable">$1</span> permanent;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>​    IP限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#限制IP访问</span></span><br><span class="line">location / &#123;</span><br><span class="line">    deny 192.168.0.2；</span><br><span class="line">    allow 192.168.0.0/24;</span><br><span class="line">    allow 192.168.1.1;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-Nginx启停"><a href="#3-Nginx启停" class="headerlink" title="3. Nginx启停"></a>3. Nginx启停</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/init.d/nginx start</span></span><br><span class="line"><span class="comment"># /etc/init.d/nginx stop</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统安装nginx和nginx基本使用。&lt;br&gt;
    
    </summary>
    
      <category term="nginx" scheme="https://dsxlinux.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://dsxlinux.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之Linux单机启动多个MySQL实例(mysqld_multi)</title>
    <link href="https://dsxlinux.github.io/2018/06/23/mysqld-multi/"/>
    <id>https://dsxlinux.github.io/2018/06/23/mysqld-multi/</id>
    <published>2018-06-23T10:32:46.000Z</published>
    <updated>2018-06-23T10:50:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x安装MySQL5.7。<br><a id="more"></a></p><h4 id="1-安装MySQL5-7"><a href="#1-安装MySQL5-7" class="headerlink" title="1.安装MySQL5.7"></a>1.安装MySQL5.7</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh https://repo.mysql.com//mysql57-community-release-el6-11.noarch.rpm</span></span><br><span class="line"><span class="comment"># yum install mysql-community-client mysql-community-server</span></span><br></pre></td></tr></table></figure><h4 id="2-创建data目录"><a href="#2-创建data目录" class="headerlink" title="2.创建data目录"></a>2.创建data目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /usr/local/mysql/data&#123;3306,3307,3308&#125; -p</span></span><br></pre></td></tr></table></figure><h4 id="3-修改权限"><a href="#3-修改权限" class="headerlink" title="3.修改权限"></a>3.修改权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R mysql:mysql /usr/local/mysql</span></span><br></pre></td></tr></table></figure><h4 id="4-初始化实例的数据库"><a href="#4-初始化实例的数据库" class="headerlink" title="4.初始化实例的数据库"></a>4.初始化实例的数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">生成 3306 的数据目录</span><br><span class="line"><span class="comment"># mysqld --no-defaults --initialize-insecure --basedir=/usr --datadir=/usr/local/mysql/data3306 --user=mysql --explicit_defaults_for_timestamp</span></span><br><span class="line"></span><br><span class="line">生成 3307 的数据目录</span><br><span class="line"><span class="comment"># mysqld --no-defaults --initialize-insecure --basedir=/usr --datadir=/usr/local/mysql/data3307 --user=mysql --explicit_defaults_for_timestamp</span></span><br><span class="line"></span><br><span class="line">生成 3307 的数据目录</span><br><span class="line"><span class="comment"># mysqld --no-defaults --initialize-insecure --basedir=/usr --datadir=/usr/local/mysql/data3308 --user=mysql --explicit_defaults_for_timestamp</span></span><br><span class="line"></span><br><span class="line">--no-defaults 不读取默认的 /etc/my.cnf 全局配置文件 否则可能存在一些冲突问题</span><br><span class="line">--initialize-insecure 初始化且不需要生成密码</span><br><span class="line">--basedir mysql 的安装目录</span><br><span class="line">--datadir 本实例的数据目录</span><br><span class="line">--user 这样生成的文件用户为 mysql</span><br><span class="line">--explicit_defaults_for_timestamp timestamp 已经 deprecated 了</span><br></pre></td></tr></table></figure><h4 id="5-修改-etc-my-cnf"><a href="#5-修改-etc-my-cnf" class="headerlink" title="5.修改/etc/my.cnf"></a>5.修改/etc/my.cnf</h4><p>···bash<br>[mysqld_multi]<br>mysqld = /usr/bin/mysqld_safe<br>mysqladmin = /usr/bin/mysqladmin<br>user=root<br>log=/usr/local/mysql/mysql_multi.log </p><p>[mysqld3306]<br>basedir=/usr<br>datadir=/usr/local/mysql/data3306<br>port=3306<br>user=mysql<br>socket=/tmp/mysql.sock3306<br>server_id=1<br>log_bin=mysql-bin</p><p>[mysqld3307]<br>basedir=/usr<br>datadir=/usr/local/mysql/data3307<br>port=3307<br>user=mysql<br>socket=/tmp/mysql.sock3307<br>server_id=2</p><p>[mysqld3308]<br>basedir=/usr<br>datadir=/usr/local/mysql/data3308<br>port=3308<br>user=mysql<br>socket=/tmp/mysql.sock3308<br>server_id=3<br>···</p><h4 id="6-启动多实例"><a href="#6-启动多实例" class="headerlink" title="6.启动多实例"></a>6.启动多实例</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># mysqld_multi start</span></span><br><span class="line"><span class="section"># /usr/local/mysql/bin/mysqld_multi start 3306</span></span><br><span class="line"><span class="section"># /usr/local/mysql/bin/mysqld_multi start 3307</span></span><br><span class="line"><span class="section"># /usr/local/mysql/bin/mysqld_multi start 3308</span></span><br><span class="line"><span class="section"># mysqld_multi report</span></span><br><span class="line">Reporting MySQL servers</span><br><span class="line">MySQL server from group: mysqld3306 is running</span><br><span class="line">MySQL server from group: mysqld3307 is running</span><br><span class="line">MySQL server from group: mysqld3308 is running</span><br><span class="line"></span><br><span class="line"><span class="section"># netstat -tln|grep 330*</span></span><br><span class="line">tcp        0      0 :::3307                     :::*                        LISTEN      </span><br><span class="line">tcp        0      0 :::3308                     :::*                        LISTEN      </span><br><span class="line">tcp        0      0 :::3306                     :::*                        LISTEN</span><br></pre></td></tr></table></figure><h4 id="7-初始化密码"><a href="#7-初始化密码" class="headerlink" title="7.初始化密码"></a>7.初始化密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqladmin -u root password '123456' -S /tmp/mysql.sock3306</span></span><br><span class="line"><span class="comment"># mysqladmin -u root password '123456' -S /tmp/mysql.sock3307</span></span><br><span class="line"><span class="comment"># mysqladmin -u root password '123456' -S /tmp/mysql.sock3308</span></span><br></pre></td></tr></table></figure><h4 id="8-登录"><a href="#8-登录" class="headerlink" title="8.登录"></a>8.登录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p123456 -S  /tmp/mysql.sock3306</span></span><br><span class="line"><span class="comment"># mysql -uroot -p123456 -S  /tmp/mysql.sock3307</span></span><br><span class="line"><span class="comment"># mysql -uroot -p123456 -S  /tmp/mysql.sock3308</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x安装MySQL5.7。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Centos6.x通过YUM安装MySQL5.7</title>
    <link href="https://dsxlinux.github.io/2018/06/23/mysql5.7-install/"/>
    <id>https://dsxlinux.github.io/2018/06/23/mysql5.7-install/</id>
    <published>2018-06-23T05:48:34.000Z</published>
    <updated>2018-06-23T06:04:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x安装MySQL5.7。<br><a id="more"></a></p><h4 id="1-下载repo仓库文件"><a href="#1-下载repo仓库文件" class="headerlink" title="1.下载repo仓库文件"></a>1.下载repo仓库文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://repo.mysql.com//mysql57-community-release-el6-11.noarch.rpm</span></span><br></pre></td></tr></table></figure><h4 id="2-安装到本地yum源"><a href="#2-安装到本地yum源" class="headerlink" title="2.安装到本地yum源"></a>2.安装到本地yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum localinstall mysql57-community-release-el6-11.noarch.rpm</span></span><br></pre></td></tr></table></figure><h4 id="3-安装MySQL"><a href="#3-安装MySQL" class="headerlink" title="3.安装MySQL"></a>3.安装MySQL</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install mysql-server mysql</span></span><br></pre></td></tr></table></figure><h4 id="4-启动mysql-server"><a href="#4-启动mysql-server" class="headerlink" title="4.启动mysql-server"></a>4.启动mysql-server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/init.d/mysqld start</span></span><br></pre></td></tr></table></figure><h4 id="5-登录MySQL"><a href="#5-登录MySQL" class="headerlink" title="5.登录MySQL"></a>5.登录MySQL</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /var/log/mysqld.log | grep "password"查找密码</span></span><br><span class="line"><span class="comment"># mysql -uroot -p登录</span></span><br></pre></td></tr></table></figure><h4 id="6-修改密码"><a href="#6-修改密码" class="headerlink" title="6.修改密码"></a>6.修改密码</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  ALTER USER USER() IDENTIFIED BY '12345678';密码太简单通过不了</span><br><span class="line">ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</span><br><span class="line">mysql&gt; set global validate<span class="emphasis">_password_</span>policy=0;</span><br><span class="line">mysql&gt; select @@validate<span class="emphasis">_password_</span>length;</span><br><span class="line">mysql&gt; set global validate<span class="emphasis">_password_</span>length=1;</span><br><span class="line">mysql&gt;  ALTER USER USER() IDENTIFIED BY '12345678';再次就可以修改了</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x安装MySQL5.7。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Python标准库04</title>
    <link href="https://dsxlinux.github.io/2018/06/22/python-stdmod04/"/>
    <id>https://dsxlinux.github.io/2018/06/22/python-stdmod04/</id>
    <published>2018-06-22T10:15:23.000Z</published>
    <updated>2018-06-22T10:33:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Python标准库。<br><a id="more"></a></p><h4 id="1-subprocess模块"><a href="#1-subprocess模块" class="headerlink" title="1.subprocess模块"></a>1.subprocess模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>retcode = subprocess.call([<span class="string">"ls"</span>, <span class="string">"-l"</span>])</span><br><span class="line"><span class="comment">#和shell中命令ls -a显示结果一样</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> retcode</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>retcode = subprocess.call(<span class="string">"ls -l"</span>,shell=<span class="keyword">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>child = subprocess.Popen([<span class="string">'ping'</span>,<span class="string">'-c'</span>,<span class="string">'4'</span>,<span class="string">'blog.linuxeye.com'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'parent process'</span></span><br><span class="line"></span><br><span class="line">------------------------------华丽的分割线-----------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>child = subprocess.Popen(<span class="string">'ping -c4 blog.linuxeye.com'</span>,shell=<span class="keyword">True</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>child.wait()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">'parent process'</span></span><br><span class="line"></span><br><span class="line">------------------------------华丽的分割线-----------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>child1 = subprocess.Popen([<span class="string">"ls"</span>,<span class="string">"-l"</span>], stdout=subprocess.PIPE)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> child1.stdout.read(),</span><br><span class="line"><span class="comment">#或者child1.communicate()</span></span><br><span class="line"></span><br><span class="line">------------------------------华丽的分割线-----------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>child1 = subprocess.Popen([<span class="string">"cat"</span>,<span class="string">"/etc/passwd"</span>], stdout=subprocess.PIPE)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>child2 = subprocess.Popen([<span class="string">"grep"</span>,<span class="string">"0:0"</span>],stdin=child1.stdout, stdout=subprocess.PIPE)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>out = child2.communicate()</span><br></pre></td></tr></table></figure><h4 id="2-pyinotify模块"><a href="#2-pyinotify模块" class="headerlink" title="2.pyinotify模块"></a>2.pyinotify模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> pyinotify <span class="keyword">import</span> WatchManager, Notifier,ProcessEvent,IN_DELETE, IN_CREATE,IN_MODIFY</span><br><span class="line">   </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EventHandler</span><span class="params">(ProcessEvent)</span>:</span></span><br><span class="line"> <span class="string">"""事件处理"""</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_CREATE</span><span class="params">(self, event)</span>:</span></span><br><span class="line">  <span class="keyword">print</span>  <span class="string">"Create file: %s "</span> %  os.path.join(event.path,event.name)</span><br><span class="line">   </span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_DELETE</span><span class="params">(self, event)</span>:</span></span><br><span class="line">  <span class="keyword">print</span>  <span class="string">"Delete file: %s "</span> %  os.path.join(event.path,event.name)</span><br><span class="line">  </span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">process_IN_MODIFY</span><span class="params">(self, event)</span>:</span></span><br><span class="line">   <span class="keyword">print</span>  <span class="string">"Modify file: %s "</span> %  os.path.join(event.path,event.name)</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FSMonitor</span><span class="params">(path=<span class="string">'.'</span>)</span>:</span></span><br><span class="line">  wm = WatchManager()</span><br><span class="line">  mask = IN_DELETE | IN_CREATE |IN_MODIFY</span><br><span class="line">  notifier = Notifier(wm, EventHandler())</span><br><span class="line">  wm.add_watch(path, mask,auto_add=<span class="keyword">True</span>,rec=<span class="keyword">True</span>)</span><br><span class="line">  <span class="keyword">print</span> <span class="string">'now starting monitor %s'</span>%(path)</span><br><span class="line">  <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">   <span class="keyword">try</span>:</span><br><span class="line">     notifier.process_events()</span><br><span class="line">     <span class="keyword">if</span> notifier.check_events():</span><br><span class="line">       notifier.read_events()</span><br><span class="line">   <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">     notifier.stop()</span><br><span class="line">     <span class="keyword">break</span></span><br><span class="line">   </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line"> FSMonitor(<span class="string">'/root/softpython/apk_url'</span>)</span><br></pre></td></tr></table></figure><h4 id="3-pwd和grp模块"><a href="#3-pwd和grp模块" class="headerlink" title="3.pwd和grp模块"></a>3.pwd和grp模块</h4><p>pwd模块：<br>pwd.getpwuid(uid):<br>返回对应uid的用户信息<br>pwd.getpwnam(name):<br>返回对应name的用户信息<br>pwd.getpwall():<br>返回所有用户信息<br>grp.getgrgid(gid):<br>返回对应gid的组信息<br>grp.getgrname(name):<br>返回对应group name的组信息<br>grp.getgrall():<br>返回所有组信息<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pwd</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user</span><span class="params">()</span>:</span></span><br><span class="line">  all_user = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> user <span class="keyword">in</span> pwd.getpwall():</span><br><span class="line">    all_user[user[<span class="number">0</span>]] = all_user[user[<span class="number">2</span>]] = user</span><br><span class="line">  <span class="keyword">return</span> all_user</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">userinfo</span><span class="params">(uid)</span>:</span></span><br><span class="line">  <span class="keyword">return</span> get_user()[uid]</span><br><span class="line">  </span><br><span class="line"><span class="keyword">print</span> userinfo(<span class="number">0</span>)</span><br><span class="line">pwd.struct_passwd(pw_name=<span class="string">'root'</span>, pw_passwd=<span class="string">'x'</span>, pw_uid=<span class="number">0</span>, pw_gid=<span class="number">0</span>, pw_gecos=<span class="string">'root'</span>, pw_dir=<span class="string">'/root'</span>, pw_shell=<span class="string">'/bin/bash'</span>)</span><br><span class="line"><span class="keyword">print</span> userinfo(<span class="string">'root'</span>)</span><br><span class="line">pwd.struct_passwd(pw_name=<span class="string">'root'</span>, pw_passwd=<span class="string">'x'</span>, pw_uid=<span class="number">0</span>, pw_gid=<span class="number">0</span>, pw_gecos=<span class="string">'root'</span>, pw_dir=<span class="string">'/root'</span>, pw_shell=<span class="string">'/bin/bash'</span>)</span><br></pre></td></tr></table></figure></p><h4 id="4-pickle模块"><a href="#4-pickle模块" class="headerlink" title="4.pickle模块"></a>4.pickle模块</h4><ul><li><p>使用pickle模块将数据对象保存到文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">data1 = &#123;<span class="string">'a'</span>: [<span class="number">1</span>, <span class="number">2.0</span>, <span class="number">3</span>, <span class="number">4</span>+<span class="number">6j</span>],</span><br><span class="line">         <span class="string">'b'</span>: (<span class="string">'string'</span>, <span class="string">u'Unicode string'</span>),</span><br><span class="line">         <span class="string">'c'</span>: <span class="keyword">None</span>&#125;</span><br><span class="line"></span><br><span class="line">selfref_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">selfref_list.append(selfref_list)</span><br><span class="line"></span><br><span class="line">output = open(<span class="string">'data.pkl'</span>, <span class="string">'wb'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#pickle.dump(obj, file, [,protocol])</span></span><br><span class="line"><span class="comment">#注解：将对象obj保存到文件file中去。</span></span><br><span class="line"><span class="comment">#protocol为序列化使用的协议版本</span></span><br><span class="line"><span class="comment">#0：ASCII协议</span></span><br><span class="line"><span class="comment">#1：老式的二进制协议</span></span><br><span class="line"><span class="comment">#2：2.3版本引入的新二进制协议，较以前的更高效。</span></span><br><span class="line">pickle.dump(data1, output)</span><br><span class="line">pickle.dump(selfref_list, output, <span class="number">2</span>)</span><br><span class="line">output.close()</span><br></pre></td></tr></table></figure></li><li><p>使用pickle模块从文件中重构python对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pprint, pickle</span><br><span class="line"></span><br><span class="line">pkl_file = open(<span class="string">'data.pkl'</span>, <span class="string">'rb'</span>)</span><br><span class="line">data1 = pickle.load(pkl_file)</span><br><span class="line">pprint.pprint(data1)</span><br><span class="line">data2 = pickle.load(pkl_file)</span><br><span class="line">pprint.pprint(data2)</span><br><span class="line">pkl_file.close()</span><br></pre></td></tr></table></figure></li></ul><h4 id="5-yaml模块"><a href="#5-yaml模块" class="headerlink" title="5.yaml模块"></a>5.yaml模块</h4><ul><li><p>写入yaml文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line">yaml_file = open(<span class="string">'test.yaml'</span>,<span class="string">'w'</span>)</span><br><span class="line">data = &#123;<span class="string">'user_info'</span>:&#123;<span class="string">'name'</span>:A, <span class="string">'age'</span>:<span class="number">17</span>&#125;&#125;</span><br><span class="line">yaml.dump(data,yaml_file)</span><br><span class="line"><span class="comment">#yaml_file.truncate     //清空yaml文件</span></span><br><span class="line">yaml_file.close()</span><br></pre></td></tr></table></figure></li><li><p>读取yaml文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line">yaml_file = open(<span class="string">'test.yaml'</span>,<span class="string">'r'</span>)</span><br><span class="line">yaml.load(yaml_file)</span><br><span class="line">yaml_file.close()</span><br></pre></td></tr></table></figure></li></ul><h4 id="6-optparser模块"><a href="#6-optparser模块" class="headerlink" title="6.optparser模块"></a>6.optparser模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line">usage = <span class="string">"myprog[ -f &lt;filename&gt;][-s &lt;xyz&gt;] arg1[,arg2..]"</span></span><br><span class="line">optParser = OptionParser(usage)</span><br><span class="line">optParser.add_option(<span class="string">"-f"</span>,<span class="string">"--file"</span>,action = <span class="string">"store"</span>,type=<span class="string">"string"</span>,dest = <span class="string">"fileName"</span>)</span><br><span class="line">ooptParser.add_option(<span class="string">"-v"</span>,<span class="string">"--vison"</span>, action=<span class="string">"store_false"</span>, dest=<span class="string">"verbose"</span>,default=<span class="string">'None'</span>,</span><br><span class="line">                     help=<span class="string">"make lots of noise [default]"</span>)</span><br><span class="line">fakeArgs = [<span class="string">'-f'</span>,<span class="string">'file.txt'</span>,<span class="string">'-v'</span>,<span class="string">'good luck to you'</span>, <span class="string">'arg2'</span>, <span class="string">'arge'</span>]  </span><br><span class="line">options, args = optParser.parse_args(fakeArgs)</span><br><span class="line"><span class="keyword">print</span> options.fileName</span><br><span class="line"><span class="keyword">print</span> options.verbose</span><br><span class="line"><span class="keyword">print</span> options</span><br><span class="line"><span class="keyword">print</span> args</span><br><span class="line"><span class="keyword">print</span> optParser.print_help()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Python标准库。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://dsxlinux.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://dsxlinux.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python标准库03</title>
    <link href="https://dsxlinux.github.io/2018/06/22/python-stdmod03/"/>
    <id>https://dsxlinux.github.io/2018/06/22/python-stdmod03/</id>
    <published>2018-06-22T10:07:42.000Z</published>
    <updated>2018-06-22T10:14:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Python标准库。<br><a id="more"></a></p><h4 id="1-shelve模块"><a href="#1-shelve模块" class="headerlink" title="1.shelve模块"></a>1.shelve模块</h4><p>写：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> shelve</span><br><span class="line"></span><br><span class="line">zhangsan = dict(zip([<span class="string">'name'</span>,<span class="string">'age'</span>],[<span class="string">'zhangsan'</span>,<span class="number">24</span>]))</span><br><span class="line">lisi = dict(zip([<span class="string">'name'</span>,<span class="string">'age'</span>],[<span class="string">'lisi'</span>,<span class="number">25</span>]))</span><br><span class="line"></span><br><span class="line">db = shelve.open(<span class="string">'shelveDict'</span>)</span><br><span class="line">db[<span class="string">'zhangsan'</span>] = zhangsan</span><br><span class="line">db[<span class="string">'lisi'</span>] = lisi</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure></p><p>读：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> shelve</span><br><span class="line"></span><br><span class="line">db = shelve.open(<span class="string">'shelveDict'</span>)</span><br><span class="line"><span class="keyword">print</span> db[<span class="string">'zhangsan'</span>]</span><br><span class="line"><span class="keyword">print</span> db[<span class="string">'lisi'</span>]</span><br><span class="line">db.close()</span><br><span class="line">修改：</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> shelve</span><br><span class="line"></span><br><span class="line">db = shelve.open(<span class="string">'shelveDict'</span>)</span><br><span class="line">zhangsan = db[<span class="string">'zhangsan'</span>]</span><br><span class="line">zhangsan[<span class="string">'name'</span>] = <span class="string">'zhangsanfeng'</span></span><br><span class="line">db[<span class="string">'zhangsan'</span>] = zhangsan</span><br><span class="line"><span class="keyword">print</span> db[<span class="string">'zhangsan'</span>]</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure></p><h4 id="2-httplib模块"><a href="#2-httplib模块" class="headerlink" title="2.httplib模块"></a>2.httplib模块</h4><p>GET请求:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httplib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HttpRequestGETTest</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>   </span><br><span class="line">        <span class="comment">#self.body='&#123;"UserName":"Admin","Password":"693aa8d0806c532115637809a863b1a3","sessionID":""&#125;'</span></span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">"Referer"</span>: <span class="string">'192.168.1.1'</span>,</span><br><span class="line">            <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate,sdch"</span>,</span><br><span class="line">            <span class="string">"Connection"</span>:<span class="string">"Keep-Alive"</span>&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">http_get</span><span class="params">(self)</span>:</span></span><br><span class="line">        conn=httplib.HTTPConnection(host=<span class="string">'192.168.1.1'</span>, port=<span class="number">80</span>, strict=<span class="keyword">False</span>, timeout=<span class="number">30</span>) </span><br><span class="line">        conn.request(method=<span class="string">'GET'</span>,url=<span class="string">'/cgi-bin/GetLoginStatus?sessionID=undefined'</span>, body=<span class="keyword">None</span>, headers=self.headers) </span><br><span class="line">        a = conn.getresponse().read() </span><br><span class="line">        <span class="keyword">print</span> a</span><br><span class="line"></span><br><span class="line">lianxi=HttpRequestGETTest()</span><br><span class="line">lianxi.http_get()</span><br></pre></td></tr></table></figure></p><p>POST请求:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httplib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HttpRequestPOSTTest</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>   </span><br><span class="line">        self.body=<span class="string">'&#123;"UserName":"Admin","Password":"693aa8d0806c532115637809a863b1a3","sessionID":""&#125;'</span></span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">"Referer"</span>: <span class="string">'192.168.1.1'</span>,</span><br><span class="line">            <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate,sdch"</span>,</span><br><span class="line">            <span class="string">"Connection"</span>:<span class="string">"Keep-Alive"</span>&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">http_post</span><span class="params">(self)</span>:</span></span><br><span class="line">        conn=httplib.HTTPConnection(host=<span class="string">'192.168.1.1'</span>, port=<span class="number">80</span>, strict=<span class="keyword">False</span>, timeout=<span class="number">120</span>) </span><br><span class="line">        conn.request(method=<span class="string">'POST'</span>,url=<span class="string">'/cgi-bin/Login'</span>, body=self.body, headers=self.headers) </span><br><span class="line">        self.session_id = conn.getresponse().read() </span><br><span class="line">        <span class="keyword">print</span> self.session_id</span><br><span class="line"></span><br><span class="line">lianxi=HttpRequestPOSTTest()</span><br><span class="line">lianxi.http_post()</span><br></pre></td></tr></table></figure></p><h4 id="3-ftplib模块"><a href="#3-ftplib模块" class="headerlink" title="3.ftplib模块"></a>3.ftplib模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">from</span> ftplib <span class="keyword">import</span> FTP</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ftplib <span class="keyword">import</span> FTP</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ftpconnect</span><span class="params">(host, username, password)</span>:</span></span><br><span class="line">    ftp = FTP()</span><br><span class="line">    <span class="comment">#ftp.set_debuglevel(2)         #打开调试级别2，显示详细信息</span></span><br><span class="line">    ftp.connect(host, <span class="number">21</span>)          <span class="comment">#连接</span></span><br><span class="line">    ftp.login(username, password)  <span class="comment">#登录，如果匿名登录则用空串代替即可</span></span><br><span class="line">    <span class="keyword">return</span> ftp</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadfile</span><span class="params">(ftp, remotepath, localpath)</span>:</span></span><br><span class="line">    bufsize = <span class="number">1024</span>                <span class="comment">#设置缓冲块大小</span></span><br><span class="line">    fp = open(localpath,<span class="string">'wb'</span>)     <span class="comment">#以写模式在本地打开文件</span></span><br><span class="line">    ftp.retrbinary(<span class="string">'RETR '</span> + remotepath, fp.write, bufsize) <span class="comment">#接收服务器上文件并写入本地文件</span></span><br><span class="line">    ftp.set_debuglevel(<span class="number">0</span>)         <span class="comment">#关闭调试</span></span><br><span class="line">    fp.close()                    <span class="comment">#关闭文件</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploadfile</span><span class="params">(ftp, remotepath, localpath)</span>:</span></span><br><span class="line">    bufsize = <span class="number">1024</span></span><br><span class="line">    fp = open(localpath, <span class="string">'rb'</span>)</span><br><span class="line">    ftp.storbinary(<span class="string">'STOR '</span>+ remotepath , fp, bufsize) <span class="comment">#上传文件</span></span><br><span class="line">    ftp.set_debuglevel(<span class="number">0</span>)</span><br><span class="line">    fp.close()                                    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    ftp = ftpconnect(<span class="string">"******"</span>, <span class="string">"***"</span>, <span class="string">"***"</span>)</span><br><span class="line">    downloadfile(ftp, <span class="string">"***"</span>, <span class="string">"***"</span>)</span><br><span class="line">    uploadfile(ftp, <span class="string">"***"</span>, <span class="string">"***"</span>)</span><br><span class="line"></span><br><span class="line">    ftp.quit()</span><br></pre></td></tr></table></figure><h4 id="4-urllib模块"><a href="#4-urllib模块" class="headerlink" title="4.urllib模块"></a>4.urllib模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import urllib</span><br><span class="line">&gt;&gt;&gt; f = urllib.urlopen(<span class="string">'http://www.qq.com'</span>)</span><br><span class="line">&gt;&gt;&gt; f.getcode()</span><br><span class="line">200</span><br><span class="line">&gt;&gt;&gt; f.geturl()</span><br><span class="line"><span class="string">'http://www.qq.com'</span></span><br><span class="line">&gt;&gt;&gt; f.headers</span><br><span class="line"></span><br><span class="line">------------------------------华丽的分割线-----------------------------</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; filename = urllib.urlretrieve(<span class="string">'http://www.google.com.hk/'</span>)</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">type</span>(filename)</span><br><span class="line">&lt;<span class="built_in">type</span> <span class="string">'tuple'</span>&gt;</span><br><span class="line">&gt;&gt;&gt; filename[0]</span><br><span class="line"><span class="string">'/tmp/tmp8eVLjq'</span></span><br><span class="line">&gt;&gt;&gt; filename[1]</span><br><span class="line">&lt;httplib.HTTPMessage instance at 0xb6a363ec&gt;</span><br><span class="line">&gt;&gt;&gt; urllib.urlcleanup()</span><br><span class="line"></span><br><span class="line">------------------------------华丽的分割线-----------------------------</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;filename=urllib.urlretrieve(<span class="string">'http://www.qq.com'</span>,filename=<span class="string">'./google.html'</span>)</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">type</span>(filename)</span><br><span class="line">&lt;<span class="built_in">type</span> <span class="string">'tuple'</span>&gt;</span><br><span class="line">&gt;&gt;&gt; filename[0]</span><br><span class="line"><span class="string">'/home/dzhwen/python\xe6\x96\x87\xe4\xbb\xb6/Homework/urllib/google.html'</span></span><br><span class="line">&gt;&gt;&gt; filename[1]</span><br><span class="line">&lt;httplib.HTTPMessage instance at 0xb6e2c38c&gt;</span><br><span class="line"></span><br><span class="line">------------------------------华丽的分割线-----------------------------</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; urllib.quote(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"><span class="string">'http%3A//www.baidu.com'</span></span><br><span class="line">&gt;&gt;&gt; urllib.quote_plus(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"><span class="string">'http%3A%2F%2Fwww.baidu.com'</span></span><br><span class="line"></span><br><span class="line">------------------------------华丽的分割线-----------------------------</span><br><span class="line"></span><br><span class="line">GET方法：</span><br><span class="line">&gt;&gt;&gt; import urllib</span><br><span class="line">&gt;&gt;&gt; params=urllib.urlencode(&#123;<span class="string">'spam'</span>:1,<span class="string">'eggs'</span>:2,<span class="string">'bacon'</span>:0&#125;)</span><br><span class="line">&gt;&gt;&gt; params</span><br><span class="line"><span class="string">'eggs=2&amp;bacon=0&amp;spam=1'</span></span><br><span class="line">&gt;&gt;&gt; f=urllib.urlopen(<span class="string">"http://python.org/query?%s"</span> % params)</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span> f.read()</span><br><span class="line">POST方法：</span><br><span class="line">&gt;&gt;&gt; import urllib</span><br><span class="line">&gt;&gt;&gt; parmas = urllib.urlencode(&#123;<span class="string">'spam'</span>:1,<span class="string">'eggs'</span>:2,<span class="string">'bacon'</span>:0&#125;)</span><br><span class="line">&gt;&gt;&gt; f=urllib.urlopen(<span class="string">"http://python.org/query"</span>,parmas)</span><br><span class="line">&gt;&gt;&gt; f.read()</span><br></pre></td></tr></table></figure><h4 id="5-hashlib模块"><a href="#5-hashlib模块" class="headerlink" title="5.hashlib模块"></a>5.hashlib模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">rb = open(<span class="string">'/root/test.txt'</span>,<span class="string">'rb'</span>)</span><br><span class="line">rb_md5 = hashlib.md5()</span><br><span class="line">rb_md5.update(rb.read())</span><br><span class="line">rb_md5.hexdigest()</span><br></pre></td></tr></table></figure><h4 id="6-tarfile模块"><a href="#6-tarfile模块" class="headerlink" title="6.tarfile模块"></a>6.tarfile模块</h4><ul><li><p>使用tarfile压缩</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"> </span><br><span class="line"><span class="comment">#创建压缩包名</span></span><br><span class="line">tar = tarfile.open(<span class="string">"/tmp/tartest.tar.gz"</span>,<span class="string">"w:gz"</span>)</span><br><span class="line"><span class="comment">#创建压缩包</span></span><br><span class="line"><span class="keyword">for</span> root,dir,files <span class="keyword">in</span> os.walk(<span class="string">"/tmp/tartest"</span>):</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        fullpath = os.path.join(root,file)</span><br><span class="line">        tar.add(fullpath)</span><br><span class="line">tar.close()</span><br></pre></td></tr></table></figure></li><li><p>使用tarfile解压</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> tarfile  </span><br><span class="line">tar = tarfile.open(<span class="string">"sample.tar.gz"</span>)  </span><br><span class="line">tar.extractall()  </span><br><span class="line">tar.close()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Python标准库。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://dsxlinux.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://dsxlinux.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python标准库02</title>
    <link href="https://dsxlinux.github.io/2018/06/22/python-stdmod02/"/>
    <id>https://dsxlinux.github.io/2018/06/22/python-stdmod02/</id>
    <published>2018-06-22T09:56:33.000Z</published>
    <updated>2018-06-22T10:05:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Python标准库。<br><a id="more"></a></p><h4 id="1-re模块"><a href="#1-re模块" class="headerlink" title="1.re模块"></a>1.re模块</h4><p>re模块中常用功能函数<br>①compile()<br>编译正则表达式模式，返回一个对象的模式。（可以把那些常用的正则表达式编译成正则表达式对象，这样可以提高一点效率。）<br>格式：<br>re.compile(pattern,flags=0)<br>pattern: 编译时用的表达式字符串。<br>flags 编译标志位，用于修改正则表达式的匹配方式，如：是否区分大小写，多行匹配等。常用的flags有：<br>|标志|含义|<br>|:-|:-|<br>|re.S(DOTALL)|使.匹配包括换行在内的所有字符<br>|re.I(IGNORECASE)|使匹配对大小写不敏感<br>|re.L(LOCALE)|做本地化识别（locale-aware)匹配，法语等<br>|re.M(MULTILINE)|多行匹配，影响^和$<br>|re.X(VERBOSE)|该标志通过给予更灵活的格式以便将正则表达式写得更易于理解<br>|re.U|根据Unicode字符集解析字符，这个标志影响\w,\W,\b,\B</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">tt = <span class="string">"Tina is a good girl, she is cool, clever, and so on..."</span></span><br><span class="line">rr = re.compile(<span class="string">r'\w*oo\w*'</span>)</span><br><span class="line">print(rr.findall(tt))   <span class="comment">#查找所有包含'oo'的单词</span></span><br><span class="line">执行结果如下：</span><br><span class="line">[<span class="string">'good'</span>, <span class="string">'cool'</span>]</span><br></pre></td></tr></table></figure><p>②　match()<br>决定RE是否在字符串刚开始的位置匹配。//注：这个方法并不是完全匹配。当pattern结束时若string还有剩余字符，仍然视为成功。想要完全匹配，可以在表达式末尾加上边界匹配符’$’<br>格式：<br>re.match(pattern, string, flags=0)<br>print(re.match(‘com’,’com<a href="http://www.runcomoob&#39;).group()" target="_blank" rel="noopener">www.runcomoob&#39;).group()</a>)<br>print(re.match(‘com’,’Com<a href="http://www.runcomoob&#39;,re.I).group()" target="_blank" rel="noopener">www.runcomoob&#39;,re.I).group()</a>)<br>执行结果如下：<br>com<br>com</p><p>③　search()<br>格式：<br>re.search(pattern, string, flags=0)<br>re.search函数会在字符串内查找模式匹配,只要找到第一个匹配然后返回，如果字符串没有匹配，则返回None。<br>    print(re.search(‘\dcom’,’<a href="http://www.4comrunoob.5com&#39;).group()" target="_blank" rel="noopener">www.4comrunoob.5com&#39;).group()</a>)<br>    执行结果如下：<br>    4com<br><em>注：match和search一旦匹配成功，就是一个match object对象，而match object对象有以下方法：<br>group() 返回被 RE 匹配的字符串<br>start() 返回匹配开始的位置<br>end() 返回匹配结束的位置<br>span() 返回一个元组包含匹配 (开始,结束) 的位置<br>group() 返回re整体匹配的字符串，可以一次输入多个组号，对应组号匹配的字符串。<br>group()返回re整体匹配的字符串，<br>    b. group (n,m) 返回组号为n，m所匹配的字符串，如果组号不存在，则返回indexError异常<br>    c.groups()  groups()方法返回一个包含正则表达式中所有小组字符串的元组，从 1 到所含的小组号，通常groups()不需要参数，返回一个元组，元组中的元就是正则表达式中定义的组。<br>import re<br>a = “123abc456”<br> print(re.search(“([0-9]</em>)([a-z]<em>)([0-9]</em>)”,a).group(0))   #123abc456,返回整体<br> print(re.search(“([0-9]<em>)([a-z]</em>)([0-9]<em>)”,a).group(1))   #123<br> print(re.search(“([0-9]</em>)([a-z]<em>)([0-9]</em>)”,a).group(2))   #abc<br> print(re.search(“([0-9]<em>)([a-z]</em>)([0-9]*)”,a).group(3))   #456</p><p>###group(1) 列出第一个括号匹配部分，group(2) 列出第二个括号匹配部分，group(3) 列出第三个括号匹配部分。###<br>④　findall()<br>re.findall遍历匹配，可以获取字符串中所有匹配的字符串，返回一个列表。<br>格式：<br>re.findall(pattern, string, flags=0)<br>p = re.compile(r’\d+’)<br>print(p.findall(‘o1n2m3k4’))<br>执行结果如下：<br>[‘1’, ‘2’, ‘3’, ‘4’]<br>import re<br>tt = “Tina is a good girl, she is cool, clever, and so on…”<br>rr = re.compile(r’\w<em>oo\w</em>‘)<br>print(rr.findall(tt))<br>print(re.findall(r’(\w)*oo(\w)’,tt))#()表示子表达式<br>执行结果如下：<br>[‘good’, ‘cool’]<br>[(‘g’, ‘d’), (‘c’, ‘l’)]<br>⑤　finditer()<br>搜索string，返回一个顺序访问每一个匹配结果（Match对象）的迭代器。找到 RE 匹配的所有子串，并把它们作为一个迭代器返回。<br>格式：<br>re.finditer(pattern, string, flags=0)<br>iter = re.finditer(r’\d+’,’12 drumm44ers drumming, 11 … 10 …’)<br>for i in iter:<br>    print(i)<br>    print(i.group())<br>    print(i.span())<br>执行结果如下：</p><p>&lt;_sre.SRE_Match object; span=(0, 2), match=’12’&gt;<br>(0, 2)</p><p>&lt;_sre.SRE_Match object; span=(8, 10), match=’44’&gt;<br>(8, 10)</p><p>&lt;_sre.SRE_Match object; span=(24, 26), match=’11’&gt;<br>(24, 26)</p><p>&lt;_sre.SRE_Match object; span=(31, 33), match=’10’&gt;<br>(31, 33)<br>⑥　split()<br>按照能够匹配的子串将string分割后返回列表。<br>可以使用re.split来分割字符串，如：re.split(r’\s+’, text)；将字符串按空格分割成一个单词列表。<br>格式：<br>re.split(pattern, string[, maxsplit])<br>maxsplit用于指定最大分割次数，不指定将全部分割。</p><p>print(re.split(‘\d+’,’one1two2three3four4five5’))<br>执行结果如下：<br>[‘one’, ‘two’, ‘three’, ‘four’, ‘five’, ‘’]<br>⑦　sub()<br>使用re替换string中每一个匹配的子串后返回替换后的字符串。<br>格式：<br>re.sub(pattern, repl, string, count)<br>import re<br>text = “JGood is a handsome boy, he is cool, clever, and so on…”<br>print(re.sub(r’\s+’, ‘-‘, text))<br>执行结果如下：<br>JGood-is-a-handsome-boy,-he-is-cool,-clever,-and-so-on…<br>其中第二个函数是替换后的字符串；本例中为’-‘<br>第四个参数指替换个数。默认为0，表示每个匹配项都替换。<br>re.sub还允许使用函数对匹配项的替换进行复杂的处理。<br>如：re.sub(r’\s’, lambda m: ‘[‘ + m.group(0) + ‘]’, text, 0)；将字符串中的空格’ ‘替换为’[ ]’。<br>import re<br>text = “JGood is a handsome boy, he is cool, clever, and so on…”<br>print(re.sub(r’\s+’, lambda m:’[‘+m.group(0)+’]’, text,0))<br>执行结果如下：<br>JGood[ ]is[ ]a[ ]handsome[ ]boy,[ ]he[ ]is[ ]cool,[ ]clever,[ ]and[ ]so[ ]on…<br>⑧　subn()<br>返回替换次数<br>格式：<br>subn(pattern, repl, string, count=0, flags=0)<br>print(re.subn(‘[1-2]’,’A’,’123456abcdef’))<br>print(re.sub(“g.t”,”have”,’I get A,  I got B ,I gut C’))<br>print(re.subn(“g.t”,”have”,’I get A,  I got B ,I gut C’))<br>执行结果如下：<br>(‘AA3456abcdef’, 2)<br>I have A,  I have B ,I have C<br>(‘I have A,  I have B ,I have C’, 3)</p><h4 id="2-time模块"><a href="#2-time模块" class="headerlink" title="2.time模块"></a>2.time模块</h4><p>在Python中，通常有这几种方式来表示时间：1）时间戳 2）格式化的时间字符串 3）元组（struct_time）共九个元素。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.time()//返回unix时间戳</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.localtime()//用一个元组装起来的<span class="number">9</span>组数字处理时间</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.sleep(<span class="number">5</span>)//延时函数</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>time.asctime( time.localtime() ) //获取可读的时间模式</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>,time.localtime())</span><br></pre></td></tr></table></figure></p><h4 id="3-random模块"><a href="#3-random模块" class="headerlink" title="3.random模块"></a>3.random模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> random//生成一个<span class="number">0</span>到<span class="number">1</span>的随机符点数: <span class="number">0</span> &lt;= n &lt; <span class="number">1.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.random()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.uniform(<span class="number">10</span>,<span class="number">20</span>)//生成的随机数n: a &lt;= n &lt;= b</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.randint(<span class="number">1</span>,<span class="number">20</span>)//生成的随机数n: a &lt;= n &lt;= b</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.randrange(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.choice([<span class="string">"JGood"</span>,<span class="string">"is"</span>, <span class="string">"a"</span>,<span class="string">"handsome"</span>, <span class="string">"boy"</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>p = [<span class="string">"Python"</span>,<span class="string">"is"</span>, <span class="string">"powerful"</span>,<span class="string">"simple"</span>, <span class="string">"and so on..."</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.shuffle(p)//打乱</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> p</span><br><span class="line">[<span class="string">'simple'</span>, <span class="string">'and so on...'</span>, <span class="string">'is'</span>, <span class="string">'powerful'</span>, <span class="string">'Python'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>slice = random.sample(list, <span class="number">5</span>) </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> slice</span><br><span class="line">[<span class="number">1</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> list</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><h4 id="4-csv模块"><a href="#4-csv模块" class="headerlink" title="4.csv模块"></a>4.csv模块</h4><p>读csv文件：<br>语法：reader(csvfile, dialect=’excel’, **fmtparams)</p><blockquote><blockquote><blockquote><p>import csv<br>reader=csv.reader(open(‘foo.csv’,’rb’))<br>for item in reader:<br>…     print item<br>写csv文件：<br>import csv<br>writer=csv.writer(open(‘foo.csv’,’wb+’))<br>writer.writerow([‘tianqi’,’26’,’79’])<br>字典方式读写：</p></blockquote></blockquote></blockquote><h1 id="读"><a href="#读" class="headerlink" title="读"></a>读</h1><blockquote><blockquote><blockquote><p>import csv<br>with open(‘names.csv’) as csvfile:<br>…     reader = csv.DictReader(csvfile)<br>…     for row in reader:<br>…         print(row[‘first_name’], row[‘last_name’])<br>…<br>Baked Beans<br>Lovely Spam<br>Wonderful Spam</p></blockquote></blockquote></blockquote><h1 id="写"><a href="#写" class="headerlink" title="写"></a>写</h1><p>import csv<br>with open(‘names.csv’, ‘w’) as csvfile:<br>    fieldnames = [‘first_name’, ‘last_name’]<br>    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)</p><pre><code>writer.writeheader()writer.writerow({&apos;first_name&apos;: &apos;Baked&apos;, &apos;last_name&apos;: &apos;Beans&apos;})writer.writerow({&apos;first_name&apos;: &apos;Lovely&apos;, &apos;last_name&apos;: &apos;Spam&apos;})writer.writerow({&apos;first_name&apos;: &apos;Wonderful&apos;, &apos;last_name&apos;: &apos;Spam&apos;})</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Python标准库。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://dsxlinux.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://dsxlinux.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python标准库01</title>
    <link href="https://dsxlinux.github.io/2018/06/22/python-stdmod01/"/>
    <id>https://dsxlinux.github.io/2018/06/22/python-stdmod01/</id>
    <published>2018-06-22T09:41:25.000Z</published>
    <updated>2018-06-22T09:49:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Python标准库。<br><a id="more"></a></p><h4 id="1-os模块"><a href="#1-os模块" class="headerlink" title="1.os模块"></a>1.os模块</h4><ul><li>操作文件<br>以下内容在shell终端操作<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch 1.txt//创建文件</span></span><br><span class="line"><span class="comment"># ls</span></span><br><span class="line">1.txt</span><br><span class="line"><span class="comment"># echo "os module" &gt; 1.txt//写入内容</span></span><br><span class="line"><span class="comment"># cat 1.txt </span></span><br><span class="line">os module</span><br></pre></td></tr></table></figure></li></ul><p>以下是python终端中操作<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python//进入python命令行</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os//导入os模块</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(os)//获得os模块的帮助</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.rename(<span class="string">'1.txt'</span>,<span class="string">'2.txt'</span>)//将<span class="number">1.</span>txt重命名为<span class="number">2.</span>txt</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.remove(<span class="string">'2.txt'</span>)//删除<span class="number">2.</span>txt文件</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.mknod(<span class="string">'test.txt'</span>)//创建一个空文件</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.stat(<span class="string">'test.txt'</span>)//获取文件属性</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.chmod(<span class="string">'test.txt'</span>,<span class="number">0666</span>)//修改文件权限</span><br></pre></td></tr></table></figure></p><ul><li><p>操作目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()//获取当前目录</span><br><span class="line"><span class="string">'/python'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.listdir(<span class="string">'/python'</span>)//列出文件和目录</span><br><span class="line">[<span class="string">'test.txt'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.mkdir(<span class="string">'foo'</span>)//创建目录</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.listdir(<span class="string">'.'</span>)</span><br><span class="line">[<span class="string">'test.txt'</span>, <span class="string">'foo'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.rmdir(<span class="string">'foo'</span>)//删除目录</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.mkdir(<span class="string">'foo'</span>)//重新创建目录</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.chdir(<span class="string">'foo'</span>)//进入foo目录</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()//获取当前目录</span><br><span class="line"><span class="string">'/python/foo'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.makedirs(<span class="string">'a/b/c'</span>)//创建多级目录</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.removedirs(<span class="string">'a/b/c'</span>)//删除多级目录</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()//当前目录</span><br><span class="line"><span class="string">'/python'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.listdir(<span class="string">'.'</span>)//当前目录文件列表</span><br><span class="line">[<span class="string">'test.txt'</span>, <span class="string">'foo'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.chdir(<span class="string">'foo'</span>)//进入foo目录</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.mknod(<span class="string">'1.txt'</span>) //创建文件，此时foo目录不为空</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.chdir(<span class="string">'..'</span>)//返回上一级目录</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()</span><br><span class="line"><span class="string">'/python'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.rmdir(<span class="string">'foo'</span>)//使用rmdir删除会报错，怎么删除？</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> shutil</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>shutil.rmtree(<span class="string">'foo'</span>)//删除非空目录</span><br></pre></td></tr></table></figure></li><li><p>系统相关</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.sep//操作系统特定的路径分隔符</span><br><span class="line"><span class="string">'/'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.name//正在使用的工作平台，Windows是<span class="string">'nt'</span>，Linux/Unix是<span class="string">'posix'</span>。</span><br><span class="line"><span class="string">'posix'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getenv(<span class="string">'PATH'</span>)//读取和设置环境变量:os.getenv() 与os.putenv()</span><br><span class="line"><span class="string">'/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.linesep//当前平台使用的行终止符</span><br><span class="line"><span class="string">'\n'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.system(<span class="string">'ls -l'</span>)//调用系统命令</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.pathsep</span><br><span class="line"><span class="string">':'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.extsep</span><br><span class="line"><span class="string">'.'</span></span><br></pre></td></tr></table></figure></li><li><p>os.path模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -l</span></span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 23 16:30 foo</span><br><span class="line">-rw-rw-rw- 1 root root    0 Oct 23 13:15 test.txt</span><br><span class="line">//当前目录下一个目录和一个文件</span><br><span class="line"><span class="comment"># python//进入python终端</span></span><br><span class="line">&gt;&gt;&gt; import os</span><br><span class="line">&gt;&gt;&gt; os.path.isfile(<span class="string">'test.txt'</span>)//判断是不是文件</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; os.path.isdir(<span class="string">'foo'</span>)//判断是不是目录</span><br><span class="line">True</span><br><span class="line">&gt;&gt;&gt; os.path.isdir(<span class="string">'test.txt'</span>)</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; os.path.split(<span class="string">'/python/foo'</span>)//返回路径的目录和文件名</span><br><span class="line">(<span class="string">'/python'</span>, <span class="string">'foo'</span>)</span><br><span class="line">&gt;&gt;&gt; os.path.split(<span class="string">'/python/foo/'</span>)</span><br><span class="line">(<span class="string">'/python/foo'</span>, <span class="string">''</span>)</span><br><span class="line">&gt;&gt;&gt; os.path.getsize(<span class="string">'test.txt'</span>)//返回文件大小，如果为目录，返回0</span><br><span class="line">1551</span><br><span class="line">&gt;&gt;&gt; os.path.abspath(<span class="string">'.'</span>)//获得绝对路径</span><br><span class="line"><span class="string">'/python'</span></span><br><span class="line">&gt;&gt;&gt; os.path.join(<span class="string">'/python'</span>,<span class="string">'test.txt'</span>)//连接目录和文件名</span><br><span class="line"><span class="string">'/python/test.txt'</span></span><br><span class="line">&gt;&gt;&gt; os.path.basename(<span class="string">'/usr/bin/env'</span>)//返回文件名</span><br><span class="line"><span class="string">'env'</span></span><br><span class="line">&gt;&gt;&gt; os.path.dirname(<span class="string">'/usr/bin/env'</span>)//返回文件路径</span><br><span class="line"><span class="string">'/usr/bin'</span></span><br><span class="line">&gt;&gt;&gt; os.path.splitext(<span class="string">'test.txt'</span>)//分离文件名和扩展名</span><br><span class="line">(<span class="string">'test'</span>, <span class="string">'.txt'</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-shutil模块"><a href="#2-shutil模块" class="headerlink" title="2.shutil模块"></a>2.shutil模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; shutil.copyfile(<span class="string">'/root/nginx.conf'</span>,<span class="string">'./nginx.conf'</span>)//复制文件</span><br><span class="line">&gt;&gt;&gt; shutil.copy(<span class="string">'/root/nginx.conf'</span>,<span class="string">'./test.txt'</span>)//复制数据</span><br><span class="line">&gt;&gt;&gt; shutil.copytree(<span class="string">'/opt/bar'</span>,<span class="string">'/python/bar'</span>)//递归复制文件夹</span><br><span class="line">&gt;&gt;&gt; shutil.move(<span class="string">'/python/bar'</span>,<span class="string">'/root/'</span>)//移动目录</span><br><span class="line">&gt;&gt;&gt; shutil.rmtree(<span class="string">'/root/bar'</span>)//删除目录</span><br><span class="line"></span><br><span class="line"><span class="comment"># ls -l</span></span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 23 16:30 foo</span><br><span class="line">-rw-rw-rw- 1 root root 1258 Oct 23 16:51 nginx.conf</span><br><span class="line">-rw-r--r-- 1 root root 1258 Oct 23 16:52 test.txt</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; import shutil</span><br><span class="line">&gt;&gt;&gt; shutil.copymode(<span class="string">'nginx.conf'</span>,<span class="string">'test.txt'</span>)//复制权限</span><br><span class="line"></span><br><span class="line"><span class="comment"># ls -l</span></span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 23 16:30 foo</span><br><span class="line">-rw-rw-rw- 1 root root 1258 Oct 23 16:51 nginx.conf</span><br><span class="line">-rw-rw-rw- 1 root root 1258 Oct 23 16:52 test.txt</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; shutil.copystat(<span class="string">'nginx.conf'</span>,<span class="string">'test.txt'</span>)//复制属性</span><br><span class="line">&gt;&gt;&gt; shutil.copy2(<span class="string">'nginx.conf'</span>,<span class="string">'test.txt'</span>)//先copyfile后copystat</span><br><span class="line"></span><br><span class="line">make_archive(base_name, format, root_dir=None, base_dir=None, verbose=0,dry_run=0, owner=None, group=None, logger=None)  <span class="comment">#压缩打包</span></span><br><span class="line">base_name：    压缩打包后的文件名或者路径名</span><br><span class="line">format：          压缩或者打包格式    <span class="string">"zip"</span>, <span class="string">"tar"</span>, <span class="string">"bztar"</span>or <span class="string">"gztar"</span></span><br><span class="line">root_dir :         将哪个目录或者文件打包（也就是源文件）</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; shutil.make_archive(<span class="string">'python'</span>,<span class="string">'gztar'</span>,root_dir=<span class="string">'/python/'</span>)   </span><br><span class="line"><span class="string">'/python/python.tar.gz'</span></span><br><span class="line"></span><br><span class="line">shutil 对压缩包的处理是调用 ZipFile 和 TarFile 两个模块来进行的，详细：</span><br><span class="line">import zipfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩</span></span><br><span class="line">z = zipfile.ZipFile(<span class="string">'laxi.zip'</span>, <span class="string">'w'</span>)</span><br><span class="line">z.write(<span class="string">'a.log'</span>)</span><br><span class="line">z.write(<span class="string">'data.data'</span>)</span><br><span class="line">z.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">z = zipfile.ZipFile(<span class="string">'laxi.zip'</span>, <span class="string">'r'</span>)</span><br><span class="line">z.extractall()</span><br><span class="line">z.close()</span><br><span class="line"></span><br><span class="line">import tarfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩</span></span><br><span class="line">tar = tarfile.open(<span class="string">'your.tar'</span>,<span class="string">'w'</span>)</span><br><span class="line">tar.add(<span class="string">'/Users/wupeiqi/PycharmProjects/bbs2.log'</span>, arcname=<span class="string">'bbs2.log'</span>)</span><br><span class="line">tar.add(<span class="string">'/Users/wupeiqi/PycharmProjects/cmdb.log'</span>, arcname=<span class="string">'cmdb.log'</span>)</span><br><span class="line">tar.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar = tarfile.open(<span class="string">'your.tar'</span>,<span class="string">'r'</span>)</span><br><span class="line">tar.extractall()  <span class="comment"># 可设置解压地址</span></span><br><span class="line">tar.close()</span><br></pre></td></tr></table></figure><h4 id="3-sys模块"><a href="#3-sys模块" class="headerlink" title="3.sys模块"></a>3.sys模块</h4><p>sys.argv<br>功能：在外部向程序内部传递参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat argv.py </span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">print</span> sys.argv[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">print</span> sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># python argv.py aa </span></span><br><span class="line">argv.py</span><br><span class="line">aa</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat argv.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(sys.argv)&gt;<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"传递了"</span>,len(sys.argv)<span class="number">-1</span>,<span class="string">"个参数"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> arg <span class="keyword">in</span> sys.argv[<span class="number">1</span>:]:</span><br><span class="line">        <span class="keyword">print</span> arg</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"没有传参"</span></span><br><span class="line"><span class="comment"># python argv.py </span></span><br><span class="line">没有传参</span><br><span class="line"><span class="comment"># python argv.py 11 22 33 aa bb cc</span></span><br><span class="line">传递了 <span class="number">6</span> 个参数</span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">33</span></span><br><span class="line">aa</span><br><span class="line">bb</span><br><span class="line">cc</span><br><span class="line"></span><br><span class="line">sys.exit(n)</span><br><span class="line">功能：解释器自动退出</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.getdefaultencoding()//获取系统当前编码</span><br><span class="line"><span class="string">'ascii'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.getfilesystemencoding()//获取文件系统使用编码方式</span><br><span class="line"><span class="string">'UTF-8'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.path//获取指定模块搜索路径的集合</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.platform//获取当前系统平台</span><br><span class="line"><span class="string">'linux2'</span></span><br><span class="line"></span><br><span class="line">sys.stdin,sys.stdout,sys.stderr //标准I/O</span><br></pre></td></tr></table></figure></p><h4 id="4-platform模块"><a href="#4-platform模块" class="headerlink" title="4.platform模块"></a>4.platform模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> platform</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>platform.platform()//获取操作系统名称及版本号</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>platform.version()//获取操作系统版本号</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>platform.architecture()//获取操作系统的位数</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>platform.machine()//计算机类型</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>platform.node()//计算机的网络名称</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>platform.processor()//计算机处理器信息</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>platform.uname()//包含上面所有的信息汇总</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Python标准库。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://dsxlinux.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://dsxlinux.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python自动化运维03</title>
    <link href="https://dsxlinux.github.io/2018/06/22/python-devops03/"/>
    <id>https://dsxlinux.github.io/2018/06/22/python-devops03/</id>
    <published>2018-06-22T09:14:31.000Z</published>
    <updated>2018-06-22T09:25:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Python自动化运维的常用模块，比如：paramiko、Fabric等。<br><a id="more"></a></p><h4 id="1-paramiko模块"><a href="#1-paramiko模块" class="headerlink" title="1. paramiko模块"></a>1. paramiko模块</h4><ul><li><p>基于用户名和密码的 sshclient 方式登录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line">host=<span class="string">'123.20.62.15'</span></span><br><span class="line">port=<span class="number">22</span></span><br><span class="line">username=<span class="string">'root'</span></span><br><span class="line">password=<span class="string">'your pass'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">paramiko.util.log_to_file(<span class="string">'paramiko.log'</span>)</span><br><span class="line">ssh=paramiko.SSHClient()</span><br><span class="line">ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">ssh.connect(host,port,username,password)</span><br><span class="line">stdin,stdout,stderr=ssh.exec_command(<span class="string">'ifconfig'</span>)</span><br><span class="line"><span class="keyword">print</span> stdout.read()</span><br><span class="line">ssh.close()</span><br></pre></td></tr></table></figure></li><li><p>基于用户名和密码的 transport 方式登录<br>示例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line">host=<span class="string">'123.20.62.15'</span></span><br><span class="line">port=<span class="number">22</span></span><br><span class="line">username=<span class="string">'root'</span></span><br><span class="line">password=<span class="string">'your pass'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">trans=paramiko.Transport(host,port)</span><br><span class="line">trans.connect(username=username,password=password)</span><br><span class="line"></span><br><span class="line">ssh=paramiko.SSHClient()</span><br><span class="line">ssh._transport=trans</span><br><span class="line">stdin, stdout, stderr = ssh.exec_command(<span class="string">'df -hl'</span>)</span><br><span class="line">print(stdout.read().decode())</span><br><span class="line">trans.close()</span><br></pre></td></tr></table></figure></li></ul><p>示例2：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">host=<span class="string">'123.20.62.15'</span></span><br><span class="line">port=<span class="number">22</span></span><br><span class="line">username=<span class="string">'root'</span></span><br><span class="line">password=<span class="string">'your pass'</span></span><br><span class="line">dir_path=<span class="string">'/root/'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">trans=paramiko.Transport(host,port)</span><br><span class="line">trans.connect(username=username,password=password)</span><br><span class="line"></span><br><span class="line">sftp=paramiko.SFTPClient.from_transport(trans)</span><br><span class="line">files=sftp.listdir(dir_path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> files:</span><br><span class="line"><span class="keyword">print</span> f</span><br><span class="line">sftp.get(os.path.join(dir_path,f),f)</span><br><span class="line"></span><br><span class="line">trans.close()</span><br></pre></td></tr></table></figure></p><ul><li><p>基于公钥密钥的 SSHClient 方式登录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定本地的RSA私钥文件,如果建立密钥对时设置的有密码，password为设定的密码，如无不用指定password参数</span></span><br><span class="line">pkey = paramiko.RSAKey.from_private_key_file(<span class="string">'/home/super/.ssh/id_rsa'</span>, password=<span class="string">'12345'</span>)</span><br><span class="line"><span class="comment"># 建立连接</span></span><br><span class="line">ssh = paramiko.SSHClient()</span><br><span class="line">ssh.connect(hostname=<span class="string">'192.168.2.129'</span>,</span><br><span class="line">            port=<span class="number">22</span>,</span><br><span class="line">            username=<span class="string">'super'</span>,</span><br><span class="line">            pkey=pkey)</span><br><span class="line"><span class="comment"># 执行命令</span></span><br><span class="line">stdin, stdout, stderr = ssh.exec_command(<span class="string">'df -hl'</span>)</span><br><span class="line"><span class="comment"># 结果放到stdout中，如果有错误将放到stderr中</span></span><br><span class="line">print(stdout.read().decode())</span><br><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line">ssh.close()</span><br></pre></td></tr></table></figure></li><li><p>基于密钥的 Transport 方式登录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定本地的RSA私钥文件,如果建立密钥对时设置的有密码，password为设定的密码，如无不用指定password参数</span></span><br><span class="line">pkey = paramiko.RSAKey.from_private_key_file(<span class="string">'/home/super/.ssh/id_rsa'</span>, password=<span class="string">'12345'</span>)</span><br><span class="line"><span class="comment"># 建立连接</span></span><br><span class="line">trans = paramiko.Transport((<span class="string">'192.168.2.129'</span>, <span class="number">22</span>))</span><br><span class="line">trans.connect(username=<span class="string">'super'</span>, pkey=pkey)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将sshclient的对象的transport指定为以上的trans</span></span><br><span class="line">ssh = paramiko.SSHClient()</span><br><span class="line">ssh._transport = trans</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行命令，和传统方法一样</span></span><br><span class="line">stdin, stdout, stderr = ssh.exec_command(<span class="string">'df -hl'</span>)</span><br><span class="line">print(stdout.read().decode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line">trans.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#################### 传文件 SFTP ##################</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化一个trans对象# 实例化一个transport对象</span></span><br><span class="line">trans = paramiko.Transport((<span class="string">'192.168.2.129'</span>, <span class="number">22</span>))</span><br><span class="line"><span class="comment"># 建立连接</span></span><br><span class="line">trans.connect(username=<span class="string">'super'</span>, password=<span class="string">'super'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化一个 sftp对象,指定连接的通道</span></span><br><span class="line">sftp = paramiko.SFTPClient.from_transport(trans)</span><br><span class="line"><span class="comment"># 发送文件</span></span><br><span class="line">sftp.put(localpath=<span class="string">'/tmp/11.txt'</span>, remotepath=<span class="string">'/tmp/22.txt'</span>)</span><br><span class="line"><span class="comment"># 下载文件</span></span><br><span class="line"><span class="comment"># sftp.get(remotepath, localpath)</span></span><br><span class="line">trans.close()</span><br></pre></td></tr></table></figure></li><li><p>实现输入命令立马返回结果的功能</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> select</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立一个socket</span></span><br><span class="line">trans = paramiko.Transport((<span class="string">'192.168.2.129'</span>, <span class="number">22</span>))</span><br><span class="line"><span class="comment"># 启动一个客户端</span></span><br><span class="line">trans.start_client()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果使用rsa密钥登录的话</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">default_key_file = os.path.join(os.environ['HOME'], '.ssh', 'id_rsa')</span></span><br><span class="line"><span class="string">prikey = paramiko.RSAKey.from_private_key_file(default_key_file)</span></span><br><span class="line"><span class="string">trans.auth_publickey(username='super', key=prikey)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment"># 如果使用用户名和密码登录</span></span><br><span class="line">trans.auth_password(username=<span class="string">'super'</span>, password=<span class="string">'super'</span>)</span><br><span class="line"><span class="comment"># 打开一个通道</span></span><br><span class="line">channel = trans.open_session()</span><br><span class="line"><span class="comment"># 获取终端</span></span><br><span class="line">channel.get_pty()</span><br><span class="line"><span class="comment"># 激活终端，这样就可以登录到终端了，就和我们用类似于xshell登录系统一样</span></span><br><span class="line">channel.invoke_shell()</span><br><span class="line"><span class="comment"># 下面就可以执行你所有的操作，用select实现</span></span><br><span class="line"><span class="comment"># 对输入终端sys.stdin和 通道进行监控,</span></span><br><span class="line"><span class="comment"># 当用户在终端输入命令后，将命令交给channel通道，这个时候sys.stdin就发生变化，select就可以感知</span></span><br><span class="line"><span class="comment"># channel的发送命令、获取结果过程其实就是一个socket的发送和接受信息的过程</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    readlist, writelist, errlist = select.select([channel, sys.stdin,], [], [])</span><br><span class="line">    <span class="comment"># 如果是用户输入命令了,sys.stdin发生变化</span></span><br><span class="line">    <span class="keyword">if</span> sys.stdin <span class="keyword">in</span> readlist:</span><br><span class="line">        <span class="comment"># 获取输入的内容</span></span><br><span class="line">        input_cmd = sys.stdin.read(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 将命令发送给服务器</span></span><br><span class="line">        channel.sendall(input_cmd)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 服务器返回了结果,channel通道接受到结果,发生变化 select感知到</span></span><br><span class="line">    <span class="keyword">if</span> channel <span class="keyword">in</span> readlist:</span><br><span class="line">        <span class="comment"># 获取结果</span></span><br><span class="line">        result = channel.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="comment"># 断开连接后退出</span></span><br><span class="line">        <span class="keyword">if</span> len(result) == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"\r\n**** EOF **** \r\n"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 输出到屏幕</span></span><br><span class="line">        sys.stdout.write(result.decode())</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭通道</span></span><br><span class="line">channel.close()</span><br><span class="line"><span class="comment"># 关闭链接</span></span><br><span class="line">trans.close()</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-Python运维管理组件Fabric"><a href="#2-Python运维管理组件Fabric" class="headerlink" title="2. Python运维管理组件Fabric"></a>2. Python运维管理组件Fabric</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> fabric.api <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录用户和主机名：</span></span><br><span class="line">env.user = <span class="string">'root'</span></span><br><span class="line"></span><br><span class="line">env.password=<span class="string">'xxxxx'</span></span><br><span class="line">env.hosts = [<span class="string">'192.168.0.1'</span>,<span class="string">'192.168.0.2'</span>] <span class="comment"># 如果有多个主机，fabric会自动依次部署</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pack</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">' 定义一个pack任务 '</span></span><br><span class="line">    <span class="comment"># 打一个tar包：</span></span><br><span class="line">    tar_files = [<span class="string">'*.py'</span>, <span class="string">'static/*'</span>, <span class="string">'templates/*'</span>, <span class="string">'favicon.ico'</span>]</span><br><span class="line">    local(<span class="string">'rm -f example.tar.gz'</span>)</span><br><span class="line">    local(<span class="string">'tar -czvf example.tar.gz --exclude=\'*.tar.gz\' --exclude=\'fabfile.py\' %s'</span> % <span class="string">' '</span>.join(tar_files))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deploy</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">' 定义一个部署任务 '</span></span><br><span class="line">    <span class="comment"># 远程服务器的临时文件：</span></span><br><span class="line">    remote_tmp_tar = <span class="string">'/tmp/example.tar.gz'</span></span><br><span class="line">    tag = datetime.now().strftime(<span class="string">'%y.%m.%d_%H.%M.%S'</span>)</span><br><span class="line">    run(<span class="string">'rm -f %s'</span> % remote_tmp_tar)</span><br><span class="line">    <span class="comment"># 上传tar文件至远程服务器：</span></span><br><span class="line">    put(<span class="string">'shici.tar.gz'</span>, remote_tmp_tar)</span><br><span class="line">    <span class="comment"># 解压：</span></span><br><span class="line">    remote_dist_dir = <span class="string">'/srv/www.example.com@%s'</span> % tag</span><br><span class="line">    remote_dist_link = <span class="string">'/srv/www.example.com'</span></span><br><span class="line">    run(<span class="string">'mkdir %s'</span> % remote_dist_dir)</span><br><span class="line">    <span class="keyword">with</span> cd(remote_dist_dir):</span><br><span class="line">        run(<span class="string">'tar -xzvf %s'</span> % remote_tmp_tar)</span><br><span class="line">    <span class="comment"># 设定新目录的www-data权限:</span></span><br><span class="line">    run(<span class="string">'chown -R www-data:www-data %s'</span> % remote_dist_dir)</span><br><span class="line">    <span class="comment"># 删除旧的软链接：</span></span><br><span class="line">    run(<span class="string">'rm -f %s'</span> % remote_dist_link)</span><br><span class="line">    <span class="comment"># 创建新的软链接指向新部署的目录：</span></span><br><span class="line">    run(<span class="string">'ln -s %s %s'</span> % (remote_dist_dir, remote_dist_link))</span><br><span class="line">    run(<span class="string">'chown -R www-data:www-data %s'</span> % remote_dist_link)</span><br><span class="line">    <span class="comment"># 重启服务：</span></span><br><span class="line">    fcgi = <span class="string">'/etc/init.d/py-fastcgi'</span></span><br><span class="line">    <span class="keyword">with</span> settings(warn_only=<span class="keyword">True</span>):</span><br><span class="line">        run(<span class="string">'%s stop'</span> % fcgi)</span><br><span class="line">    run(<span class="string">'%s start'</span> % fcgi)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Python自动化运维的常用模块，比如：paramiko、Fabric等。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://dsxlinux.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://dsxlinux.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python自动化运维02</title>
    <link href="https://dsxlinux.github.io/2018/06/22/python-devops02/"/>
    <id>https://dsxlinux.github.io/2018/06/22/python-devops02/</id>
    <published>2018-06-22T08:50:35.000Z</published>
    <updated>2018-06-22T09:07:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Python自动化运维的常用模块，比如：XlsxWriter、rrdtool等。<br><a id="more"></a></p><h4 id="1-用XlsxWriter模块创建报表"><a href="#1-用XlsxWriter模块创建报表" class="headerlink" title="1. 用XlsxWriter模块创建报表"></a>1. 用XlsxWriter模块创建报表</h4><ul><li>安装xlsxwriter模块</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip install xlsxwriter推荐使用pip安装</span></span><br></pre></td></tr></table></figure><ul><li>xlsxwriter模块使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xlsxwriter</span><br><span class="line">workbook = xlsxwriter.Workbook(<span class="string">'hello.xlsx'</span>)</span><br><span class="line">worksheet = workbook.add_worksheet()</span><br><span class="line">worksheet.write(<span class="string">'A1'</span>, <span class="string">'Hello world'</span>)</span><br><span class="line">worksheet.write(<span class="string">'A2'</span>, <span class="string">'Hello world'</span>)</span><br><span class="line">worksheet.write(<span class="string">'B1'</span>, <span class="string">'Hello world'</span>)</span><br><span class="line">worksheet.write(<span class="string">'B2'</span>, <span class="string">'Hello world'</span>)</span><br><span class="line">workbook.close()</span><br></pre></td></tr></table></figure><h4 id="2-绘图大师rrdtool"><a href="#2-绘图大师rrdtool" class="headerlink" title="2. 绘图大师rrdtool"></a>2. 绘图大师rrdtool</h4><ul><li>rrdtool绘图</li></ul><p>创建rrd<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> rrdtool</span><br><span class="line">  </span><br><span class="line">rrdb=rrdtool.create(<span class="string">'rest.rrd'</span>,<span class="string">'--step'</span>,<span class="string">'60'</span>,<span class="string">'--start'</span>,<span class="string">'1369982786'</span>,</span><br><span class="line">    <span class="string">'DS:input:GAUGE:120:U:U'</span>,</span><br><span class="line">    <span class="string">'DS:output:GAUGE:120:U:U'</span>,</span><br><span class="line">    <span class="string">'RRA:LAST:0.5:1:600'</span>,</span><br><span class="line">    <span class="string">'RRA:AVERAGE:0.5:5:600'</span>,</span><br><span class="line">    <span class="string">'RRA:MAX:0.5:5:600'</span>,</span><br><span class="line">    <span class="string">'RRA:MIN:0.5:5:600'</span>)</span><br><span class="line"><span class="keyword">if</span> rrdb:</span><br><span class="line">  <span class="keyword">print</span> rrdtool.error()</span><br></pre></td></tr></table></figure></p><p>rrd插入数据<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"><span class="keyword">import</span> rrdtool</span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> keys <span class="keyword">in</span> psutil.network_io_counters(pernic=<span class="keyword">True</span>):</span><br><span class="line">  <span class="keyword">if</span> keys == <span class="string">'em1'</span>:</span><br><span class="line">    sent=psutil.network_io_counters(pernic=<span class="keyword">True</span>)[keys][<span class="number">0</span>]</span><br><span class="line">    recv=psutil.network_io_counters(pernic=<span class="keyword">True</span>)[keys][<span class="number">1</span>]</span><br><span class="line">    up=rrdtool.updatev(<span class="string">'rest.rrd'</span>,<span class="string">'N:%d:%d'</span> % (sent,recv))</span><br><span class="line">    <span class="keyword">print</span> up</span><br></pre></td></tr></table></figure></p><p>根据rrd绘图<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> rrdtool</span><br><span class="line">  </span><br><span class="line">rrdtool.graph(<span class="string">'rest.png'</span>,<span class="string">'--start'</span>,<span class="string">'1369983960'</span>,</span><br><span class="line">    <span class="string">'--title'</span>,<span class="string">'my rrd graph test'</span>,</span><br><span class="line">    <span class="string">'--vertical-label'</span>,<span class="string">'bits'</span>,</span><br><span class="line">    <span class="string">'DEF:input=rest.rrd:input:LAST'</span>,</span><br><span class="line">    <span class="string">'DEF:output=rest.rrd:output:LAST'</span>,</span><br><span class="line">    <span class="string">'LINE1:input#0000FF:In traffic'</span>,</span><br><span class="line">    <span class="string">'LINE1:output#00FF00:Out traffic\\r'</span>,</span><br><span class="line">    <span class="string">'CDEF:bytes_in=input,8,*'</span>,</span><br><span class="line">    <span class="string">'CDEF:bytes_out=output,8,*'</span>,</span><br><span class="line">    <span class="string">'COMMENT:\\n'</span>,</span><br><span class="line">    <span class="string">'GPRINT:bytes_in:LAST:LAST in traffic\: %6.2lf %Sbps'</span>,</span><br><span class="line">    <span class="string">'COMMENT: '</span>,</span><br><span class="line">    <span class="string">'GPRINT:bytes_out:LAST:LAST out traffic\: %6.2lf %Sbps'</span>)</span><br></pre></td></tr></table></figure></p><h4 id="3-利用Python-nmap实现高效端口扫描"><a href="#3-利用Python-nmap实现高效端口扫描" class="headerlink" title="3. 利用Python-nmap实现高效端口扫描"></a>3. 利用Python-nmap实现高效端口扫描</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> nmap</span><br><span class="line"></span><br><span class="line">scan_row=[]</span><br><span class="line">input_data = raw_input(<span class="string">'Please input host and port:'</span>)</span><br><span class="line">scan_row = input_data.split(<span class="string">" "</span>)</span><br><span class="line"><span class="keyword">if</span> len(scan_row) != <span class="number">2</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Input error!"</span></span><br><span class="line">sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">hosts = scan_row[<span class="number">0</span>]</span><br><span class="line">port = scan_row[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">nm = nmap.PortScanner()</span><br><span class="line"><span class="keyword">except</span> namp.PortScannerError:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Namp not found"</span>,sys.exc_info()[<span class="number">0</span>]</span><br><span class="line">sys.exit[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Unexpected error:"</span>,sys.exc_info()[<span class="number">0</span>]</span><br><span class="line">sys.exit[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">nm.scan(hosts=hosts,arguments=<span class="string">' -v -sS -p'</span>+port)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Scan error:"</span>+str(e)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> nm.all_hosts():</span><br><span class="line"><span class="keyword">print</span> <span class="string">'------------------------------------------------'</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Host: %s (%s)'</span> % host,nm[host].hostname()</span><br><span class="line"><span class="keyword">print</span> <span class="string">'State: %s'</span> % nm[host].state()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> proto <span class="keyword">in</span> nm[host].all_protocols():</span><br><span class="line"><span class="keyword">print</span> <span class="string">'--------------'</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'protocol: %s'</span> % proto</span><br><span class="line"></span><br><span class="line">lport = nm[host][proto].keys()</span><br><span class="line">lport.sort()</span><br><span class="line"><span class="keyword">for</span> port <span class="keyword">in</span> lport:</span><br><span class="line"><span class="keyword">print</span> <span class="string">'port: %s\tstate: %s'</span> % port,nm[host][proto][port][<span class="string">'state'</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Python自动化运维的常用模块，比如：XlsxWriter、rrdtool等。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://dsxlinux.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://dsxlinux.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python自动化运维01</title>
    <link href="https://dsxlinux.github.io/2018/06/22/python-devops01/"/>
    <id>https://dsxlinux.github.io/2018/06/22/python-devops01/</id>
    <published>2018-06-22T03:11:23.000Z</published>
    <updated>2018-06-22T08:47:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Python自动化运维的常用模块，比如：psutil、Dnspython、smtplib等。<br><a id="more"></a></p><h4 id="1-psutil模块"><a href="#1-psutil模块" class="headerlink" title="1. psutil模块"></a>1. psutil模块</h4><ul><li>安装psutil模块</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip install psutil推荐使用pip安装</span></span><br></pre></td></tr></table></figure><ul><li>获取系统信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"></span><br><span class="line"><span class="comment"># cpu信息</span></span><br><span class="line">print(<span class="string">"CPU逻辑数量: %s"</span> % psutil.cpu_count())</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"CPU物理核心: %s"</span> % psutil.cpu_count(logical=<span class="keyword">False</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内存信息</span></span><br><span class="line">mem = psutil.virtual_memory()</span><br><span class="line">print(<span class="string">"系统总内存: %s"</span> % mem.total)</span><br><span class="line">print(<span class="string">"已用内存: %s"</span> % mem.used)</span><br><span class="line">print(<span class="string">"空闲内存: %s"</span> % mem.free)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 磁盘信息</span></span><br><span class="line">disk_part = psutil.disk_partitions()</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> disk_part:</span><br><span class="line">    <span class="keyword">print</span> item.device</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> disk_part:</span><br><span class="line">    <span class="keyword">print</span> item.mountpoint</span><br><span class="line">    <span class="keyword">print</span> psutil.disk_usage(item.mountpoint)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print psutil.disk_io_counters() </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网络信息</span></span><br><span class="line"><span class="comment">#print psutil.net_io_counters()</span></span><br><span class="line">net_ifaddrs = psutil.net_if_addrs()</span><br><span class="line"><span class="keyword">print</span> net_ifaddrs[<span class="string">"lo"</span>][<span class="number">0</span>].address</span><br><span class="line"><span class="keyword">print</span> net_ifaddrs[<span class="string">"eth0"</span>][<span class="number">0</span>].address</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> psutil.net_connections():</span><br><span class="line">    <span class="keyword">print</span> item</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进程信息</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> psutil.pids():</span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).name()               <span class="comment"># 进程名称</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).exe()                <span class="comment"># 进程exe路径</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).cwd()                <span class="comment"># 进程工作目录</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).cmdline()            <span class="comment"># 进程启动的命令行</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).ppid()               <span class="comment"># 父进程ID</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).parent()             <span class="comment"># 父进程</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).children()           <span class="comment"># 子进程列表</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).status()             <span class="comment"># 进程状态</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).username()           <span class="comment"># 进程用户名</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).create_time()        <span class="comment"># 进程创建时间</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).terminal()           <span class="comment"># 进程终端</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).cpu_times()          <span class="comment"># 进程使用的CPU时间</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).memory_info()        <span class="comment"># 进程使用的内存</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).open_files()         <span class="comment"># 进程打开的文件</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).connections()        <span class="comment"># 进程相关网络连接</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).num_threads()        <span class="comment"># 进程的线程数量</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).threads()            <span class="comment"># 所有线程信息</span></span><br><span class="line">    <span class="keyword">print</span> psutil.Process(item).environ()            <span class="comment"># 进程环境变量</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"======================================================"</span></span><br></pre></td></tr></table></figure><h4 id="2-dnspython模块"><a href="#2-dnspython模块" class="headerlink" title="2. dnspython模块"></a>2. dnspython模块</h4><ul><li>安装IPy模块</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip install dnspython</span></span><br></pre></td></tr></table></figure><ul><li><p>使用dnspython模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*-coding:utf8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dns.resolver</span><br><span class="line"></span><br><span class="line">domain = raw_input(<span class="string">'请输入一个域名：'</span>)</span><br><span class="line"></span><br><span class="line">ans = dns.resolver.query(domain, <span class="string">"A"</span>)</span><br><span class="line"><span class="comment"># ans = dns.resolver.query(domain, "CNAME")</span></span><br><span class="line"><span class="comment"># ans = dns.resolver.query(domain, "NS")</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ans.response.answer:</span><br><span class="line">    <span class="keyword">print</span> i.to_text()</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-smtplib模块"><a href="#3-smtplib模块" class="headerlink" title="3. smtplib模块"></a>3. smtplib模块</h4><p>smtplib模块发送邮件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*-coding:utf8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">HOST=<span class="string">"smtp.126.com"</span><span class="comment"># smtp主机</span></span><br><span class="line">SUBJECT=<span class="string">"Test email from Python"</span></span><br><span class="line">TO=<span class="string">"1730004882@qq.com"</span><span class="comment"># 接收邮件的邮箱地址</span></span><br><span class="line">FROM=<span class="string">"xxx@126.com"</span><span class="comment"># 发送邮件的邮箱地址</span></span><br><span class="line">text=<span class="string">"python rules them all!"</span><span class="comment"># 邮件内容</span></span><br><span class="line">BODY=string.join((<span class="string">"From: %s"</span> % FROM,<span class="string">"To: %s"</span> % TO,<span class="string">"Subject: %s"</span> % SUBJECT,<span class="string">""</span>,text),<span class="string">"\r\n"</span>)</span><br><span class="line">server=smtplib.SMTP()</span><br><span class="line">server.connect(HOST,<span class="string">"25"</span>)</span><br><span class="line">server.starttls()</span><br><span class="line">server.login(<span class="string">"xxx@126.com"</span>,<span class="string">"password"</span>)<span class="comment"># 发送邮件的邮箱地址和密码</span></span><br><span class="line">server.sendmail(FROM,[TO],BODY)</span><br><span class="line">server.quit()</span><br></pre></td></tr></table></figure><h4 id="4-difflib模块"><a href="#4-difflib模块" class="headerlink" title="4. difflib模块"></a>4. difflib模块</h4><p>文件内容差异比对方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### 比较2个字符串</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> difflib</span><br><span class="line">text1 = <span class="string">"""This module provides classes</span></span><br><span class="line"><span class="string">and funcitions for comparing sequences 1"""</span></span><br><span class="line">text1_lines = text1.splitlines()</span><br><span class="line">text2 = <span class="string">"""This module provides classes</span></span><br><span class="line"><span class="string">and funcitions for comparing sequences 2"""</span></span><br><span class="line">text2_lines = text2.splitlines()</span><br><span class="line"></span><br><span class="line"><span class="comment">#d = difflib.Differ()</span></span><br><span class="line"><span class="comment">#diff = d.compare(text1,text2)</span></span><br><span class="line"><span class="comment">#print '\n'.join(list(diff))</span></span><br><span class="line">d = difflib.HtmlDiff()</span><br><span class="line"><span class="keyword">print</span> d.make_file(text1_lines,text2_lines)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 对比配置文件差异</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> difflib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">        textfile1 = sys.argv[<span class="number">1</span>]</span><br><span class="line">        textfile2 = sys.argv[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">except</span> Exception,e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Error:"</span>+str(e)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Usage: diffile.py filename1 filename2"</span></span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readfile</span><span class="params">(filename)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">                fileHandle = open(filename,<span class="string">'rb'</span>)</span><br><span class="line">                text = fileHandle.read().splitlines()</span><br><span class="line">                fileHandle.close()</span><br><span class="line">                <span class="keyword">return</span> text</span><br><span class="line">        <span class="keyword">except</span> IOError <span class="keyword">as</span> error:</span><br><span class="line">                print(<span class="string">'Read file Error:'</span>+str(error))</span><br><span class="line">                sys.exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> textfile1 == <span class="string">""</span> <span class="keyword">or</span> textfile2 == <span class="string">""</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Usage: diffile.py filename1 filename2"</span></span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">text1_lines = readfile(textfile1)</span><br><span class="line">text2_lines = readfile(textfile2)</span><br><span class="line"></span><br><span class="line">d = difflib.HtmlDiff()</span><br><span class="line"><span class="keyword">print</span> d.make_file(text1_lines,text2_lines)</span><br></pre></td></tr></table></figure><p>单个文件比较：</p><p>语法：filecmp.cmp(f1.f2[,shallow])</p><p>比较f1和f2，相同返回true，不同返回false，shallow默认为true，会根据os.stat()比较，不会比较文件内容；反之则会比较内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> filecmp</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>filecmp.cmp(<span class="string">"/etc/passwd"</span>,<span class="string">"/etc/passwd"</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>filecmp.cmp(<span class="string">"/etc/passwd"</span>,<span class="string">"/etc/shadow"</span>)</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure><h4 id="5-pycurl模块"><a href="#5-pycurl模块" class="headerlink" title="5. pycurl模块"></a>5. pycurl模块</h4><p>pycurl模块是一个用C语言编写的libcurl P python实现，功能非常强大，支持的协议有FTP、HTTP、HTTPS、TELNET等，可以理解成linux下curl命令功能的python封装。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pycurl</span><br><span class="line"></span><br><span class="line">URL=<span class="string">"http://www.baidu.com"</span></span><br><span class="line">c = pycurl.Curl()</span><br><span class="line">c.setopt(pycurl.URL,URL)</span><br><span class="line">c.setopt(pycurl.CONNECTTIMEOUT,<span class="number">5</span>)</span><br><span class="line">c.setopt(pycurl.TIMEOUT,<span class="number">5</span>)</span><br><span class="line">c.setopt(pycurl.NOPROGRESS,<span class="number">1</span>)</span><br><span class="line">c.setopt(pycurl.FORBID_REUSE,<span class="number">1</span>)</span><br><span class="line">c.setopt(pycurl.MAXREDIRS,<span class="number">1</span>)</span><br><span class="line">c.setopt(pycurl.DNS_CACHE_TIMEOUT,<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">indexfile = open(os.path.dirname(os.path.realpath(__file__))+<span class="string">"/content.html"</span>,<span class="string">"wb"</span>)</span><br><span class="line">c.setopt(pycurl.WRITEHEADER,indexfile)</span><br><span class="line">c.setopt(pycurl.WRITEDATA,indexfile)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">        c.perform()</span><br><span class="line"><span class="keyword">except</span> Exception,e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"connection error:"</span>+str(e)</span><br><span class="line">        indexfile.close()</span><br><span class="line">        c.close()</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">NAMELOOKUP_TIME = c.getinfo(c.NAMELOOKUP_TIME)</span><br><span class="line">CONNECT_TIME = c.getinfo(c.CONNECT_TIME)</span><br><span class="line">PRETRANSFER_TIME = c.getinfo(c.PRETRANSFER_TIME)</span><br><span class="line"></span><br><span class="line">STARTTRANSFER_TIME = c.getinfo(c.STARTTRANSFER_TIME)</span><br><span class="line"></span><br><span class="line">TOTAL_TIME = c.getinfo(c.TOTAL_TIME)</span><br><span class="line">HTTP_CODE = c.getinfo(c.HTTP_CODE)</span><br><span class="line">SIZE_DOWNLOAD = c.getinfo(c.SIZE_DOWNLOAD)</span><br><span class="line">HEADER_SIZE = c.getinfo(c.HEADER_SIZE)</span><br><span class="line">SPEED_DOWNLOAD = c.getinfo(c.SPEED_DOWNLOAD)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"HTTP状态码：%s"</span> %(HTTP_CODE)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"DNS解析时间：%.2f ms"</span> %(NAMELOOKUP_TIME*<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"建立连接时间：%.2f ms"</span> %(CONNECT_TIME*<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"准备传输时间：%.2f ms"</span> %(PRETRANSFER_TIME*<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"传输开始时间：%.2f ms"</span> %(STARTTRANSFER_TIME*<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"传输结束总时间：%.2f ms"</span> %(TOTAL_TIME*<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"下载数据包大小：%d bytes/s"</span> %(SIZE_DOWNLOAD)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"HTTP头部大小：%d byte"</span> %(HEADER_SIZE)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"平均下载速度：%d bytes/s"</span> %(SPEED_DOWNLOAD)</span><br><span class="line"></span><br><span class="line">indexfile.close()</span><br><span class="line">c.close()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Python自动化运维的常用模块，比如：psutil、Dnspython、smtplib等。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://dsxlinux.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://dsxlinux.github.io/tags/python/"/>
    
  </entry>
  
</feed>
