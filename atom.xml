<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech2k18</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dsxlinux.github.io/"/>
  <updated>2018-08-13T07:03:41.000Z</updated>
  <id>https://dsxlinux.github.io/</id>
  
  <author>
    <name>Dong Shouxin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL主键和外键</title>
    <link href="https://dsxlinux.github.io/2018/08/12/mysql-key/"/>
    <id>https://dsxlinux.github.io/2018/08/12/mysql-key/</id>
    <published>2018-08-12T10:57:43.000Z</published>
    <updated>2018-08-13T07:03:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL主键和外键。<br><a id="more"></a></p><h4 id="1-主键"><a href="#1-主键" class="headerlink" title="1.主键"></a>1.主键</h4><ul><li><p>什么是主键<br>主键是能确定一条记录的唯一标识。比如：一条记录包括身份正号，姓名，年龄。身份证号是唯一能确定你这个人的，其他都可能有重复，所以身份证号是主键。 </p></li><li><p>声明主键的方法<br>不设置主键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE t1(</span><br><span class="line"> id int not null,</span><br><span class="line"> name char(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ul><p>  带主键的<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE t1(</span><br><span class="line"> id int not null primary key,</span><br><span class="line"> name char(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>  复合主键<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE t1(</span><br><span class="line"> id int not null,</span><br><span class="line"> name char(20),</span><br><span class="line"> primary key (id,name)</span><br><span class="line">);</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">主键自增的</span><br><span class="line"> ```mysql</span><br><span class="line">mysql&gt; create table dd(  </span><br><span class="line">  id int primary key not null auto_increment,  </span><br><span class="line">  name varchar(20),  </span><br><span class="line">  time timestamp default current_timestamp  </span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>  创建完后再决定主键<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table t(</span><br><span class="line">  id int not null,</span><br><span class="line">  name varchar(200) not null,</span><br><span class="line">  time timestamp default current_timestamp</span><br><span class="line">);</span><br><span class="line">mysql&gt; alter table t add primary key (id);</span><br><span class="line">mysql&gt; alter table t drop primary key (id);</span><br></pre></td></tr></table></figure></p><h4 id="2-外键"><a href="#2-外键" class="headerlink" title="2.外键"></a>2.外键</h4><ul><li><p>什么是外键<br>一张表中有一个非主键的字段指向了别一张表中的主键，该字段叫做外键。<br>一张表中可以有多个外键。</p></li><li><p>外键作用<br>对子表(外键所在的表)的作用：子表在进行写操作的时候，如果外键字段在父表中找不到对应的匹配，操作就会失败。<br>对父表的作用：对父表的主键字段进行删和改时，如果对应的主键在子表中被引用，操作就会失败。</p></li><li><p>外键条件<br>表储存引擎必须是innodb，否则创建的外键无约束效果。<br>外键的列类型必须与父表的主键类型完全一致。<br>外键的名字不能重复。<br>已经存在数据的字段被设为外键时，必须保证字段中的数据与父表的主键数据对应起来。</p></li><li><p>新增外键<br>在创建时增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table province(</span><br><span class="line">pId int primary key auto_increment,</span><br><span class="line">pName varchar(20)</span><br><span class="line">   );</span><br><span class="line"></span><br><span class="line">   mysql&gt; create table user(</span><br><span class="line">userId int primary key auto_increment,</span><br><span class="line">userName varchar(40),</span><br><span class="line">pid int,</span><br><span class="line">foreign key(pid) references province(pId)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">mysql&gt; create table city(</span><br><span class="line">cityId int primary key auto_increment,</span><br><span class="line">cName varchar(20)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在创建好的表中增加</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table user add cityId int;</span><br><span class="line">mysql&gt; alter table user add foreign key(cityId) references city(cityId);</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table city add pid int;</span><br><span class="line">mysql&gt; alter table city add foreign key(pid) references province(pId);</span><br></pre></td></tr></table></figure></li></ul><ul><li>删除外键<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter table tablename drop foreign key 外键名字;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL主键和外键。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据类型</title>
    <link href="https://dsxlinux.github.io/2018/08/12/mysql-datatype/"/>
    <id>https://dsxlinux.github.io/2018/08/12/mysql-datatype/</id>
    <published>2018-08-12T10:21:19.000Z</published>
    <updated>2018-08-12T10:31:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL各数据类型的、大小及长度。<br><a id="more"></a></p><h4 id="1-数字型"><a href="#1-数字型" class="headerlink" title="1.数字型"></a>1.数字型</h4><table><thead><tr><th><strong>类型</strong></th><th><strong>大小</strong></th><th><strong>范围（有符号）</strong></th><th><strong>范围（无符号）</strong></th><th><strong>用途</strong></th></tr></thead><tbody><tr><td>TINYINT</td><td>1 字节</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 字节</td><td>(-32 768，32 767)</td><td>(0，65 535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 字节</td><td>(-8 388 608，8 388 607)</td><td>(0，16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 字节</td><td>(-2 147 483 648，2 147 483 647)</td><td>(0，4 294 967 295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 字节</td><td>(-9 233 372 036 854 775 808，9 223 372 036 854 775 807)</td><td>(0，18 446 744 073 709 551 615)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4 字节</td><td>(-3.402 823 466 E+38，1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td>0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td>单精度 浮点数值</td></tr><tr><td>DOUBLE</td><td>8 字节</td><td>(1.797 693 134 862 315 7 E+308，2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>双精度 浮点数值</td></tr><tr><td>DECIMAL</td><td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>小数值</td></tr></tbody></table><h4 id="2-字符类型"><a href="#2-字符类型" class="headerlink" title="2.字符类型"></a>2.字符类型</h4><table><thead><tr><th>CHAR</th><th>0-255字节</th><th>定长字符串</th></tr></thead><tbody><tr><td>VARCHAR</td><td>0-255字节</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255字节</td><td>不超过 255 个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0-255字节</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535字节</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535字节</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215字节</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215字节</td><td>中等长度文本数据</td></tr><tr><td>LOGNGBLOB</td><td>0-4 294 967 295字节</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295字节</td><td>极大文本数据</td></tr></tbody></table><h4 id="3-时间类型"><a href="#3-时间类型" class="headerlink" title="3.时间类型"></a>3.时间类型</h4><table><thead><tr><th><strong>类型</strong></th><th><strong>大小(字节)</strong></th><th><strong>范围</strong></th><th><strong>格式</strong></th><th><strong>用途</strong></th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01/9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>‘-838:59:59’/‘838:59:59’</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901/2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00/9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>8</td><td>1970-01-01 00:00:00/2037 年某时</td><td>YYYYMMDD HHMMSS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h4 id="4-枚举集合"><a href="#4-枚举集合" class="headerlink" title="4.枚举集合"></a>4.枚举集合</h4><table><thead><tr><th>类型</th><th>范围</th><th>大小</th></tr></thead><tbody><tr><td>ENUM</td><td>最多65535个成员</td><td>64KB</td></tr><tr><td>SET</td><td>最多64个成员</td><td>64KB</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL各数据类型的、大小及长度。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库备份</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-backup/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-backup/</id>
    <published>2018-08-10T08:46:01.000Z</published>
    <updated>2018-08-10T10:05:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL数据库备份的方法。<br><a id="more"></a></p><h4 id="mysqldump备份方法"><a href="#mysqldump备份方法" class="headerlink" title="mysqldump备份方法"></a>mysqldump备份方法</h4><p>mysqldump备份提供三种级别的备份：表级，库级和全库级。<br>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">建立一个存放备份的目录</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mkdir /tmp/mysqlbackup</span></span><br><span class="line">改权限</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysql.mysql /tmp/mysqlbackup/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> man mysqldump</span></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump [options] db_name [tables]<span class="comment"># 表级</span></span></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump [options] --database DB1 [DB2 DB3...]<span class="comment"># 库级</span></span></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump [options] --all-databases<span class="comment"># 全库级</span></span></span><br><span class="line"></span><br><span class="line">全库备份：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 --all-databases &gt; /tmp/mysqlbackup/all.sql</span></span><br><span class="line">全库还原：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysql_install_db --datadir=/data --user=mysql    <span class="comment"># 可能需要重新初始化，具体的要看情况</span></span></span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysql &lt; /tmp/mysqlbackup/all.sql</span></span><br><span class="line"></span><br><span class="line">库级备份：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 --database db1 &gt; /tmp/mysqlbackup/db1.sql</span></span><br><span class="line"></span><br><span class="line">表级备份：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 db1 emp&gt; /tmp/mysqlbackup/emp.sql</span></span><br><span class="line">表级还原：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 db1 emp&gt; /tmp/mysqlbackup/emp.sql</span></span><br><span class="line"></span><br><span class="line">只备份表结构：</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 --no-data db1 emp&gt; /tmp/mysqlbackup/emp.sql</span></span><br><span class="line"></span><br><span class="line">某些表不备份</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysqldump -uroot -p123456 --ignore-table=db1.emp1 --ignore-table=db1.emp1 db1 emp&gt; /tmp/mysqlbackup/emp.sql</span></span><br><span class="line"></span><br><span class="line">跨主机备份:</span><br><span class="line"><span class="meta">shell&gt;</span><span class="bash">  mysqldump -uroot -p123456 --opt --database db1 | mysql -h 192.168.0.214 -uroot -p123456 -C db1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 远程数据库上要存在db1这个库才能备份过去，否则会报错。</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL数据库备份的方法。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之DQL</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-dql/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-dql/</id>
    <published>2018-08-10T06:07:19.000Z</published>
    <updated>2018-08-13T06:57:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之DML(data query language)操作。<br><a id="more"></a></p><h4 id="1-数据查询语言"><a href="#1-数据查询语言" class="headerlink" title="1.数据查询语言"></a>1.数据查询语言</h4><p>用户能够查询数据库以及操作已有数据库中的数据。主要是SELECT。</p><h4 id="2-SELECT查询"><a href="#2-SELECT查询" class="headerlink" title="2.SELECT查询"></a>2.SELECT查询</h4><ul><li>常规查询<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 准备好2个表格：</span><br><span class="line">mysql&gt; create table emp  (empno int ,ename varchar(20), sex char(1),birthday date , hiredate date, sal decimal(10,2), deptno tinyint(1), managerno int) engine=memory default charset=utf8;</span><br><span class="line">mysql&gt; create table dept (deptno tinyint(1),deptname varchar(30),location varchar(50));</span><br><span class="line">mysql&gt; insert into emp values (1,&apos;boss&apos;,&apos;m&apos;,&apos;1964-08-08&apos;,&apos;1995-01-01&apos;,&apos;20000&apos;,&apos;1&apos;,&apos;1&apos;),(2,&apos;zhangsan&apos;,&apos;m&apos;,&apos;1967-04-05&apos;,&apos;1995-04-11&apos;,&apos;15000&apos;,&apos;2&apos;,&apos;1&apos;),(3,&apos;lisi&apos;,&apos;f&apos;,&apos;1973-01-28&apos;,&apos;1998-11-21&apos;,&apos;13000&apos;,&apos;3&apos;,&apos;1&apos;),(4,&apos;wangwu&apos;,&apos;f&apos;,&apos;1975-06-03&apos;,&apos;1999-12-12&apos;,&apos;12000&apos;,&apos;4&apos;,&apos;1&apos;),(5,&apos;maliu&apos;,&apos;m&apos;,&apos;1982-08-18&apos;,&apos;2001-07-03&apos;,&apos;8000&apos;,&apos;2&apos;,&apos;2&apos;),(6,&apos;tianqi&apos;,&apos;f&apos;,&apos;1983-02-15&apos;,&apos;2002-11-01&apos;,&apos;7000&apos;,&apos;2&apos;,&apos;2&apos;),(7,&apos;mark&apos;,&apos;m&apos;,&apos;1984-08-12&apos;,&apos;2003-10-02&apos;,&apos;6500&apos;,&apos;3&apos;,&apos;3&apos;),(8,&apos;john&apos;,&apos;m&apos;,&apos;1985-09-14&apos;,&apos;2005-04-03&apos;,&apos;6000&apos;,&apos;3&apos;,&apos;3&apos;),(9,&apos;mm&apos;,&apos;f&apos;,&apos;1990-06-08&apos;,&apos;2008-09-13&apos;,&apos;4000&apos;,&apos;4&apos;,&apos;4&apos;);</span><br><span class="line">mysql&gt; insert into dept values (1,&apos;manager&apos;,&apos;beijing&apos;),(2,&apos;it&apos;,&apos;shenzhen&apos;), (3,&apos;sale&apos;,&apos;shanghai&apos;), (4,&apos;services&apos;,&apos;guangzhou&apos;);</span><br><span class="line"></span><br><span class="line"># 查看所有列，不推荐这么查询</span><br><span class="line">mysql&gt; select * from emp;</span><br><span class="line"># 查看其中几列</span><br><span class="line">mysql&gt; select ename,sal from emp limit 3;</span><br><span class="line"># 去除重复行</span><br><span class="line">mysql&gt; select distinct deptno from emp;</span><br><span class="line"></span><br><span class="line"># 查询所有男员工的姓名和工资</span><br><span class="line">mysql&gt; select ename,sal from emp where sex=&apos;m&apos;;</span><br><span class="line"># 查询工资大于8000的员工的所有信息</span><br><span class="line">mysql&gt; select * from emp where sal&gt;8000;</span><br><span class="line"># 查询工资在4000到8000之间的员工的所有信息（包含4000和8000的)</span><br><span class="line">mysql&gt; select * from emp where sal&gt;=4000 and sal&lt;=8000;</span><br><span class="line">mysql&gt; select * from emp where sal between 4000 and 8000;</span><br><span class="line">查询入职时间在2001那年的员工的所有信息</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from emp where hiredate&gt;=&quot;2001-01-01&quot; and hiredate&lt;=&quot;2001-12-31&quot;;</span><br><span class="line">mysql&gt; select * from emp where hiredate like &quot;2001%&quot;;</span><br><span class="line">mysql&gt; select * from emp where year(hiredate)=2001;</span><br><span class="line">mysql&gt; select * from emp where substr(hiredate,1,4)=2001;</span><br><span class="line">mysql&gt; select * from emp where hiredate regexp &apos;2001.*&apos;;</span><br></pre></td></tr></table></figure></li></ul><ul><li>排序<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">  # 最大工资，最小工资</span><br><span class="line">  mysql&gt; select * from emp order by sal;# 以工资排序，默认升序排序</span><br><span class="line">  mysql&gt; select * from emp order by sal asc; # 加不加asc都是升序（ascend)</span><br><span class="line">  mysql&gt; select * from emp order by sal desc;# desc表示降序排序(descend)</span><br><span class="line"></span><br><span class="line">  mysql&gt; select * from emp order by sex,sal;</span><br><span class="line">  # 先按性别排，再按工资排。结果是女的都在一起，以工资从小到大排。男的都在一起，以工资从小到大排。</span><br><span class="line">  mysql&gt; select * from emp order by sex desc,sal desc;</span><br><span class="line"></span><br><span class="line">  # 找出工资最低的三个人的姓名和工资</span><br><span class="line">  mysql&gt; select * from emp order by sal limit 3;</span><br><span class="line"></span><br><span class="line">  # 找出工资最高的三个人的姓名和工资</span><br><span class="line">  mysql&gt; select * from emp order by sal desc limit 3;</span><br><span class="line"></span><br><span class="line">  找出工资最低的女员工的姓名和工资</span><br><span class="line">  mysql&gt; select ename,sal from emp where sex=&apos;f&apos; order by sal limit 1;</span><br><span class="line">  </span><br><span class="line">  #where和order by一起使用时，where在前，order by在后</span><br><span class="line"></span><br><span class="line">  # 找出工资从高到低第三到第五的人的姓名和工资</span><br><span class="line"></span><br><span class="line">  mysql&gt; select ename,sal from emp order by sal desc limit 2,3;   # 从0开始，2是第三，3是三个人</span><br><span class="line">  ```  </span><br><span class="line">  </span><br><span class="line">- 聚合和分组操作</span><br><span class="line">  ```mysql</span><br><span class="line">  # 统计记录条数</span><br><span class="line">  mysql&gt; select count(*) from emp;</span><br><span class="line">  mysql&gt; select count(distinct deptno) from emp;</span><br><span class="line">  # 别名</span><br><span class="line">  mysql&gt; select count(distinct deptno) deptcount from emp;</span><br><span class="line">  </span><br><span class="line">  # 统计每个部门的人数</span><br><span class="line">  mysql&gt; select deptno,count(*) from emp group by deptno;</span><br><span class="line">  </span><br><span class="line">  # 统计男，女员工各有多少人</span><br><span class="line">  mysql&gt; select sex,count(*) from emp group by sex;</span><br><span class="line"></span><br><span class="line">  # 统计每个部门里男女员工各有多少个</span><br><span class="line">  mysql&gt; select deptno,sex,count(*) from emp group by deptno,sex;</span><br><span class="line"></span><br><span class="line">  # 查找部门人数大于2的部门号和人数</span><br><span class="line">  mysql&gt; select deptno,count(*) from emp group by deptno having count(*) &gt;2;</span><br><span class="line"></span><br><span class="line">  # 求每个部门的工资总额，最大工资，最小工资，平均工资</span><br><span class="line">  mysql&gt; select deptno,sum(sal),max(sal),min(sal),avg(sal) from emp group by deptno;</span><br></pre></td></tr></table></figure></li></ul><ul><li>表链接（多表查询)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 查出员工姓名和其对应的工资，部门名，部门所在地，并显示</span><br><span class="line"></span><br><span class="line">mysql&gt; select ename,sal,deptname,location from emp,dept where emp.deptno=dept.deptno;</span><br></pre></td></tr></table></figure></li></ul><ul><li>join连接<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">INNER JOIN（内连接）：取得两个表中存在连接匹配关系的记录。</span><br><span class="line">mysql&gt; select a.ename,a.sal,b.deptname,b.location from emp a INNER JOIN dept b on a.deptno=b.deptno;</span><br><span class="line"></span><br><span class="line">为了看到【左连接】和【右连接】的效果，插入两条数据：</span><br><span class="line">mysql&gt; insert into dept(deptno, deptname, location) values (5,&apos;Administration&apos;,&apos;beijing&apos;);   # 加一个行政部</span><br><span class="line">mysql&gt; insert into dept(deptno, deptname, location) values (6,&apos;technology&apos;,&apos;shenzhen&apos;);      # 加一个技术部</span><br><span class="line"></span><br><span class="line">LEFT JOIN（左连接）：取得左表（table1）完全记录，即是右表（table2）并无对应匹配记录</span><br><span class="line">mysql&gt; select * from emp left join dept on emp.deptno=dept.deptno;</span><br><span class="line"></span><br><span class="line">RIGHT JOIN（右连接）：与 LEFT JOIN 相反，取得右表（table2）完全记录，即是左表（table1）并无匹配对应记录</span><br><span class="line">mysql&gt; select * from emp right join dept on emp.deptno=dept.deptno;</span><br></pre></td></tr></table></figure></li></ul><ul><li>子查询<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 查出比wangwu工资高的人的姓名和工资</span><br><span class="line"></span><br><span class="line">mysql&gt; select ename,sal from emp where sal&gt;(select sal from emp where ename=&apos;wangwu&apos;);</span><br></pre></td></tr></table></figure></li></ul><ul><li>复制一个表：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table emp1 like emp;</span><br><span class="line">mysql&gt; insert into emp1 select * from emp;</span><br><span class="line">或者</span><br><span class="line">mysql&gt; create table emp2 select * from emp;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之DML(data query language)操作。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之DCL</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-dcl/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-dcl/</id>
    <published>2018-08-10T03:20:08.000Z</published>
    <updated>2018-08-10T06:12:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之DCL(data control language)操作。<br><a id="more"></a></p><h4 id="1-MySQL数据控制语言"><a href="#1-MySQL数据控制语言" class="headerlink" title="1.MySQL数据控制语言"></a>1.MySQL数据控制语言</h4><p>用来定义数据库的访问权限和安全级别，及创建用户。包括GRANT、REVOKE等。</p><h4 id="2-GRANT语句"><a href="#2-GRANT语句" class="headerlink" title="2.GRANT语句"></a>2.GRANT语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建用户和授权</span><br><span class="line">mysql&gt; create user &apos;jerry&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;</span><br><span class="line">mysql&gt; grant select,insert on db1.emp to &apos;jerry&apos;@&apos;localhost&apos;;</span><br><span class="line"></span><br><span class="line"># 直接授权</span><br><span class="line">mysql&gt; grant select,insert on db1.emp to &apos;jerry&apos;@&apos;localhost&apos; identified by &apos;123456&apos; with grant option;</span><br><span class="line"># with grant option表示允许用户将自己的权限授权给其它用户</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>  <strong>有哪些权限可以用于授权？</strong></p><table><thead><tr><th>Privilege</th><th>Column</th><th>Context</th></tr></thead><tbody><tr><td>ALL</td><td><code>Synonym for “all privileges”</code></td><td>Server administration</td></tr><tr><td>ALTER</td><td><code>Alter_priv</code></td><td>Tables</td></tr><tr><td>ALTER ROUTINE</td><td><code>Alter_routine_priv</code></td><td>Stored routines</td></tr><tr><td>CREATE</td><td><code>Create_priv</code></td><td>Databases, tables, or indexes</td></tr><tr><td>CREATE ROUTINE</td><td><code>Create_routine_priv</code></td><td>Stored routines</td></tr><tr><td>CREATE TABLESPACE</td><td><code>Create_tablespace_priv</code></td><td>Server administration</td></tr><tr><td>CREATE TEMPORARY TABLES</td><td><code>Create_tmp_table_priv</code></td><td>Tables</td></tr><tr><td>CREATE USER</td><td><code>Create_user_priv</code></td><td>Server administration</td></tr><tr><td>CREATE VIEW</td><td><code>Create_view_priv</code></td><td>Views</td></tr><tr><td>DELETE</td><td><code>Delete_priv</code></td><td>Tables</td></tr><tr><td>DROP</td><td><code>Drop_priv</code></td><td>Databases, tables, or views</td></tr><tr><td>EVENT</td><td><code>Event_priv</code></td><td>Databases</td></tr><tr><td>EXECUTE</td><td><code>Execute_priv</code></td><td>Stored routines</td></tr><tr><td>FILE</td><td><code>File_priv</code></td><td>File access on server host</td></tr><tr><td>GRANT OPTION</td><td><code>Grant_priv</code></td><td>Databases, tables, or stored routines</td></tr><tr><td>INDEX</td><td><code>Index_priv</code></td><td>Tables</td></tr><tr><td>INSERT</td><td><code>Insert_priv</code></td><td>Tables or columns</td></tr><tr><td>LOCK TABLES</td><td><code>Lock_tables_priv</code></td><td>Databases</td></tr><tr><td>PROCESS</td><td><code>Process_priv</code></td><td>Server administration</td></tr><tr><td>PROXY</td><td>See <code>proxies_priv</code> table</td><td>Server administration</td></tr><tr><td>REFERENCES</td><td><code>References_priv</code></td><td>Databases or tables</td></tr><tr><td>RELOAD</td><td><code>Reload_priv</code></td><td>Server administration</td></tr><tr><td>REPLICATION CLIENT</td><td><code>Repl_client_priv</code></td><td>Server administration</td></tr><tr><td>REPLICATION SLAVE</td><td><code>Repl_slave_priv</code></td><td>Server administration</td></tr><tr><td>SELECT</td><td><code>Select_priv</code></td><td>Tables or columns</td></tr><tr><td>SHOW DATABASES</td><td><code>Show_db_priv</code></td><td>Server administration</td></tr><tr><td>SHOW VIEW</td><td><code>Show_view_priv</code></td><td>Views</td></tr><tr><td>SHUTDOWN</td><td><code>Shutdown_priv</code></td><td>Server administration</td></tr><tr><td>SUPER</td><td><code>Super_priv</code></td><td>Server administration</td></tr><tr><td>TRIGGER</td><td><code>Trigger_priv</code></td><td>Tables</td></tr><tr><td>UPDATE</td><td><code>Update_priv</code></td><td>Tables or columns</td></tr><tr><td>USAGE</td><td><code>Synonym for “no privileges”</code></td><td>Server administration</td></tr></tbody></table><h4 id="3-REVOKE语句"><a href="#3-REVOKE语句" class="headerlink" title="3.REVOKE语句"></a>3.REVOKE语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 创建用户和授权</span><br><span class="line">mysql&gt; revoke select on db1.emp from &apos;jerry&apos;@&apos;localhost&apos;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h4 id="4-查看权限"><a href="#4-查看权限" class="headerlink" title="4.查看权限"></a>4.查看权限</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看权限</span><br><span class="line">mysql&gt; show grants for &apos;jerry&apos;@&apos;localhost&apos;;</span><br></pre></td></tr></table></figure><h4 id="5-删除用户"><a href="#5-删除用户" class="headerlink" title="5.删除用户"></a>5.删除用户</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user &apos;jerry&apos;@&apos;localhost&apos;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之DCL(data control language)操作。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之DML</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-dml/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-dml/</id>
    <published>2018-08-10T02:47:31.000Z</published>
    <updated>2018-08-10T03:25:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之DML(data manipulate language)操作。<br><a id="more"></a></p><h4 id="1-数据操纵语言"><a href="#1-数据操纵语言" class="headerlink" title="1.数据操纵语言"></a>1.数据操纵语言</h4><p>DML主要是对数据库里的数据进行操作的语言。包括INSERT、UPDATE、DELETE等。</p><h4 id="2-INSERT语句"><a href="#2-INSERT语句" class="headerlink" title="2.INSERT语句"></a>2.INSERT语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 插入单条数据</span><br><span class="line">mysql&gt; insert into emp values (1,&apos;boss&apos;,&apos;m&apos;,&apos;1964-08-08&apos;,&apos;1995-01-01&apos;,&apos;20000&apos;,&apos;1&apos;,&apos;1&apos;);</span><br><span class="line"># 插入多条数据</span><br><span class="line">mysql&gt;insert into emp values</span><br><span class="line">  -&gt; (1,&apos;boss&apos;,&apos;m&apos;,&apos;1964-08-08&apos;,&apos;1995-01-01&apos;,&apos;20000&apos;,&apos;1&apos;,&apos;1&apos;),</span><br><span class="line">  -&gt;(2,&apos;zhangsan&apos;,&apos;m&apos;,&apos;1967-04-05&apos;,&apos;1995-04-11&apos;,&apos;15000&apos;,&apos;2&apos;,&apos;1&apos;);</span><br><span class="line"># 还可以插入特定的列（非所有列），那么没有插入的就成了空值（空值不是0，它做任何运算结果还是空值)</span><br><span class="line">mysql&gt; insert into emp (ename,sex) values (&apos;lisi&apos;,&apos;m&apos;);</span><br><span class="line"># 从其他表中查询到数据后插入</span><br><span class="line">mysql&gt; insert into emp (ename,sex) select ename,sex from emp1 limit 2;</span><br></pre></td></tr></table></figure><h4 id="3-UPDATE语句"><a href="#3-UPDATE语句" class="headerlink" title="3.UPDATE语句"></a>3.UPDATE语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">准备好2个表格：</span><br><span class="line">mysql&gt; create table emp  ( ename varchar(20), sex char(1), hiredate date, sal decimal(10,2), deptno tinyint(1)) engine=memory default charset=utf8;</span><br><span class="line">mysql&gt; create table dept (deptno tinyint(1),deptname varchar(30),location varchar(50));</span><br><span class="line">mysql&gt; insert into emp values (1,&apos;boss&apos;,&apos;m&apos;,&apos;1964-08-08&apos;,&apos;1995-01-01&apos;,&apos;20000&apos;,&apos;1&apos;,&apos;1&apos;),(2,&apos;zhangsan&apos;,&apos;m&apos;,&apos;1967-04-05&apos;,&apos;1995-04-11&apos;,&apos;15000&apos;,&apos;2&apos;,&apos;1&apos;),(3,&apos;lisi&apos;,&apos;f&apos;,&apos;1973-01-28&apos;,&apos;1998-11-21&apos;,&apos;13000&apos;,&apos;3&apos;,&apos;1&apos;),(4,&apos;wangwu&apos;,&apos;f&apos;,&apos;1975-06-03&apos;,&apos;1999-12-12&apos;,&apos;12000&apos;,&apos;4&apos;,&apos;1&apos;),(5,&apos;maliu&apos;,&apos;m&apos;,&apos;1982-08-18&apos;,&apos;2001-07-03&apos;,&apos;8000&apos;,&apos;2&apos;,&apos;2&apos;),(6,&apos;tianqi&apos;,&apos;f&apos;,&apos;1983-02-15&apos;,&apos;2002-11-01&apos;,&apos;7000&apos;,&apos;2&apos;,&apos;2&apos;),(7,&apos;mark&apos;,&apos;m&apos;,&apos;1984-08-12&apos;,&apos;2003-10-02&apos;,&apos;6500&apos;,&apos;3&apos;,&apos;3&apos;),(8,&apos;john&apos;,&apos;m&apos;,&apos;1985-09-14&apos;,&apos;2005-04-03&apos;,&apos;6000&apos;,&apos;3&apos;,&apos;3&apos;),(9,&apos;mm&apos;,&apos;f&apos;,&apos;1990-06-08&apos;,&apos;2008-09-13&apos;,&apos;4000&apos;,&apos;4&apos;,&apos;4&apos;);</span><br><span class="line"></span><br><span class="line"># 把wangwu性别改成m</span><br><span class="line">mysql&gt; update emp set sex=&apos;m&apos; where ename=&apos;wangwu&apos;;</span><br><span class="line"></span><br><span class="line"># wangwu的工资加500</span><br><span class="line">mysql&gt; update emp set sal=sal+500 where ename=&apos;wangwu&apos;;</span><br><span class="line"></span><br><span class="line"># 2号部门的所有员工工资涨10%</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where deptno=2;</span><br><span class="line"></span><br><span class="line"># mark由3号部门换成2号部门，同时工资加1000</span><br><span class="line">mysql&gt; update emp set deptno=2 and sal=sal+1000 where ename=&apos;mark&apos;;--错误写法，两个执行动作不能用and</span><br><span class="line">mysql&gt; update emp set deptno=2,sal=sal+1000 where ename=&apos;mark&apos;;--正确写法</span><br><span class="line"></span><br><span class="line"># 工资就john和mark涨10%,其它人不涨</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where ename=&apos;john&apos; or  ename=&apos;mark&apos;;</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where ename in (&apos;john&apos;,&apos;mark&apos;);</span><br><span class="line"></span><br><span class="line"># 工资都涨10%，john和mark犯错误，就他们不涨</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where ename!=&apos;john&apos; and  ename!=&apos;mark&apos;</span><br><span class="line">mysql&gt; update emp set sal=sal*1.1 where ename not in (&apos;john&apos;,&apos;mark&apos;);</span><br></pre></td></tr></table></figure><h4 id="4-DELETE语句"><a href="#4-DELETE语句" class="headerlink" title="4.DELETE语句"></a>4.DELETE语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 指定条件删除</span><br><span class="line">mysql&gt; delete from emp where empno=9;</span><br><span class="line"># 不指定条件删除</span><br><span class="line">mysql&gt; delete from emp;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之DML(data manipulate language)操作。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之DDL</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-ddl/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-ddl/</id>
    <published>2018-08-10T01:50:31.000Z</published>
    <updated>2018-08-13T01:39:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之DDL(data define language)操作。<br><a id="more"></a></p><h4 id="1-MySQL数据定义语言"><a href="#1-MySQL数据定义语言" class="headerlink" title="1.MySQL数据定义语言"></a>1.MySQL数据定义语言</h4><p>用于定义和管理数据对象，包括数据库、数据表等。包括CREATE、DROP、ALTER、TRUNCATE、RENAME等。</p><h4 id="2-CREATE语句"><a href="#2-CREATE语句" class="headerlink" title="2. CREATE语句"></a>2. CREATE语句</h4><ul><li><p>CREATE DATABASE建库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 建库语句</span><br><span class="line">mysql&gt; CREATE DATABASE IF NOT EXISTS db1 DEFAULT CHARACTER SET UTF8;</span><br><span class="line"># 其中有一部分可以省略</span><br><span class="line">mysql&gt; CREATE DATABASE db1;</span><br><span class="line"># 查看系统是如何建库的</span><br><span class="line">mysql&gt; SHOW CREATE DATABASE db1;</span><br></pre></td></tr></table></figure></li><li><p>CREATE TABLE建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 建表语句</span><br><span class="line">mysql&gt; CREATE TABLE IF NOT EXISTS emp(id int) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line">mysql&gt; CREATE TABLE IF NOT EXISTS emp1(ID INT NOT NULL DEFAULT 1, NAME CHAR);</span><br><span class="line">mysql&gt; CREATE TABLE IF NOT EXISTS emp2(ID INT NOT NULL AUTO_INCREMENT, NAME CHAR);</span><br><span class="line"># 其中有一部分可以省略</span><br><span class="line">mysql&gt; CREATE TABLE emp(id int);</span><br><span class="line"># 查看系统是如何建表的</span><br><span class="line">mysql&gt; SHOW CREATE TABLE emp;</span><br><span class="line"># 使用like建表，快速建立相同表结构的表</span><br><span class="line"># CREATE TABLE imp LIKE emp;</span><br><span class="line"># DESC emp;</span><br><span class="line"># DESC imp;</span><br></pre></td></tr></table></figure><ul><li>CREATE USER建用户<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个用户</span><br><span class="line">mysql&gt; CREATE USER &apos;jeffrey&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;new_password&apos; PASSWORD EXPIRE;</span><br><span class="line"># 查看系统是如何创建的</span><br><span class="line">mysql&gt; SHOW CREATE USER &apos;jeffrey&apos;@&apos;localhost&apos;;</span><br><span class="line"># 创建一个用户，指定过期时间</span><br><span class="line">mysql&gt; CREATE USER &apos;tom&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;new_password&apos; PASSWORD EXPIRE INTERVAL 180 DAY;</span><br><span class="line"># 查看系统是如何创建的</span><br><span class="line">mysql&gt; SHOW CREATE USER &apos;tom&apos;@&apos;localhost&apos;;</span><br><span class="line"># 查看user.assword_last_changed 列来看对应账号密码的最近一次的修改时间</span><br><span class="line">mysql&gt; select user,host,password_expired,password_last_changed,password_lifetime from mysql.user;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li>CREATE VIEW建视图<br>视图是一个虚拟存在的表，视图的使用方式与表的使用方式一致，不需要实际上的物理存储，数据还是存储在原来的表里。<br>视图可以只展现数据表的一部分数据，对于我们不希望让用户看到全部数据，只希望用户看到部分数据的时候，可以选择使用视图。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 创建视图</span><br><span class="line">mysql&gt; create view emp_view as SELECT * from emp;</span><br><span class="line"># 查看视图表结构</span><br><span class="line">mysql&gt; desc emp_view;</span><br><span class="line"># 查看视图内容</span><br><span class="line">mysql&gt; select * from emp_view limit 1;</span><br><span class="line"># 修改视图</span><br><span class="line">msyql&gt; alter view emp_view as SELECT * FROM emp;</span><br><span class="line">mysql&gt; UPDATE emp_view set ename=&apos;lisi&apos; WHERE ename=&apos;zhangsan&apos;;</span><br><span class="line"># 删除视图</span><br><span class="line">mysql&gt; drop view emp_view;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-ALTER语句"><a href="#3-ALTER语句" class="headerlink" title="3. ALTER语句"></a>3. ALTER语句</h4>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 建一个测试表</span><br><span class="line">mysql&gt; create table emp  ( ename varchar(20), sex char(1), hiredate date, sal decimal(10,2), deptno tinyint(1)) engine=memory default charset=utf8;</span><br><span class="line">mysql&gt; SHOW COLUMNS FROM emp;</span><br><span class="line"># 修改存储引擎</span><br><span class="line">mysql&gt; ALTER TABLE emp ENGINE=MEMORY;</span><br><span class="line"># 修改字符集</span><br><span class="line">mysql&gt; ALTER TABLE emp DEFAULT CHARSET=utf8;</span><br><span class="line"># 增加一个列，默认增加到最后</span><br><span class="line">mysql&gt; alter table emp add  age tinyint(1);</span><br><span class="line">mysql&gt; SHOW COLUMNS FROM emp;</span><br><span class="line"># 删除某一列</span><br><span class="line">mysql&gt; alter table emp drop age;</span><br><span class="line">在hiredate这列后面增加一列，使用after关键字</span><br><span class="line">mysql&gt; alter table emp add  manager varchar(30) after hiredate;</span><br><span class="line"># 把一列加到最前面，使用first关键字</span><br><span class="line">mysql&gt; alter table emp add  manager varchar(30) first; </span><br><span class="line"># 使用modify修改一列的数据类型</span><br><span class="line">mysql&gt; alter table emp  modify manager varchar(40);</span><br><span class="line"># 修改列名要使用change去修改</span><br><span class="line">mysql&gt; alter table emp  change manager boss varchar(30);  --</span><br><span class="line"># modify和change的区别，都可以修改数据类型，但change要写原列名;只有change可以修改列名，modify不可以</span><br><span class="line"># 修改mysql字符集</span><br><span class="line">mysql&gt; alter database app_relation character set utf8;</span><br></pre></td></tr></table></figure><h4 id="4-其他DDL语句"><a href="#4-其他DDL语句" class="headerlink" title="4.其他DDL语句"></a>4.其他DDL语句</h4><ul><li>TRUNCATE语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 截断表，清空了表内的所有数据，但是表的结构还在</span><br><span class="line">mysql&gt; truncate table emp;</span><br></pre></td></tr></table></figure></li></ul><ul><li>RENAME语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改表的名字</span><br><span class="line">mysql&gt; rename table emp to emp1;</span><br></pre></td></tr></table></figure></li></ul><ul><li>DROP语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 删库</span><br><span class="line">mysql&gt; DROP DATABASE IF EXISTS db1;</span><br><span class="line"># 删表</span><br><span class="line">mysql&gt; DROP TABLE IF EXISTS emp;</span><br><span class="line"># 删视图</span><br><span class="line">mysql&gt; drop view emp_view;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之DDL(data define language)操作。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语法之列属性和索引</title>
    <link href="https://dsxlinux.github.io/2018/08/10/mysql-columns/"/>
    <id>https://dsxlinux.github.io/2018/08/10/mysql-columns/</id>
    <published>2018-08-10T01:50:31.000Z</published>
    <updated>2018-08-13T03:49:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍MySQL语法之列属性。<br><a id="more"></a></p><h4 id="1-关于列属性"><a href="#1-关于列属性" class="headerlink" title="1.关于列属性"></a>1.关于列属性</h4><p>  MySQL中，真正约束字段的是数据类型，但是数据类型的约束太单一，需要有一些额外的约束，来更加保证数据的合法性。<br>  MySQL中的常用列属性有：null、not null、default、primary key、auto_increment和comment。</p><h4 id="2-列属性"><a href="#2-列属性" class="headerlink" title="2.列属性"></a>2.列属性</h4><ul><li><p>空属性<br>两个值：NULL(默认的)/NOT NULL(不为空) 虽然默认的，数据库基本都是字段为空，但是实际上在真实开发的时候，尽可能的要保证所有的数据都不应该为空：空数据没有意义;空数据没有办法参与运算</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table user(id varchar(40) not null, name varchar(20) not null,age tinyint,address varchar(40) null,gender enum(&apos;boy&apos;,&apos;girl&apos;,&apos;secret&apos;) default &apos;secret&apos;);</span><br></pre></td></tr></table></figure></li><li><p>列描述<br>列描述 ：comment描述，没有实际含义：是专门用来描述字段，会根据表创建语句保存：用来给程序猿(数据库管理员)来进行了解的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table user(id varchar(40) not null comment &apos;身份证号&apos;, name varchar(20) not null comment &apos;姓名&apos;,age tinyint comment &apos;年龄&apos;,address varchar(40) null comment &apos;地址&apos;,gender enum(&apos;boy&apos;,&apos;girl&apos;,&apos;secret&apos;) default &apos;secret&apos; comment &apos;性别&apos;);</span><br></pre></td></tr></table></figure></li></ul><ul><li>默认值<br>默认值：某一种数据会经常性的出现某个具体的值，可以在一开始就指d定好，在需要真实数据的时候，用户可以选择性的使用默认值 默认值关键字：default<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table user(id varchar(40) not null comment &apos;身份证号&apos;, name varchar(20) not null comment &apos;姓名&apos;,age tinyint comment &apos;年龄&apos;,address varchar(40) null comment &apos;地址&apos;,gender enum(&apos;boy&apos;,&apos;girl&apos;,&apos;secret&apos;) default &apos;secret&apos; comment &apos;性别&apos;);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>主键<br>主键：primary key，一张表只能有一个字段可以使用对应的键,用来唯一的约束该字段里面的数据，不能重复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table user(id varchar(40) not null primary key comment &apos;身份证号&apos;, name varchar(20) not null comment &apos;姓名&apos;,age tinyint comment &apos;年龄&apos;);</span><br></pre></td></tr></table></figure></li><li><p>唯一键<br>一张表往往有很多字段需要具有唯一性，数据不能重复。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table student(id varchar(30) not null, stu_num int unique,name varchar(20));</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table student add unique key(stu_num);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>自动增长<br>自动增长通常是跟主键进行搭配,一般而言,声明为自动增长属性的字段,插入数据的时候系统会自动的在当前最大值的基础上对指定的数据+1。<br>自动增长(auto_increment)有几个必要的条件。<br>任何一个字段要做自动增长的前提是本身是一个索引(key一栏有值)。<br>自动增长必须是数字而且是整型。<br>一张表只能有一个自增长,自动增长的起始默认值是1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">  create table my_auto(id int primary key auto_increment comment &apos;自动增长&apos;,name varchar(10) not null);</span><br><span class="line"></span><br><span class="line">  修改自动增长的步长:</span><br><span class="line">  set auto_increment_increment=5;</span><br><span class="line"></span><br><span class="line">  删除字段的自动增长的属性:</span><br><span class="line">  alter table my_auto modify id int;</span><br><span class="line">  ``` </span><br><span class="line"></span><br><span class="line">#### 3.索引</span><br><span class="line">  索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。更通俗的说，数据库索引好比是一本书前面的目录，能加快数据库的查询速度。上述SQL语句，在没有索引的情况下，数据库会遍历全部数据后选择符合条件的；而有了相应的索引之后，数据库会直接在索引中查找符合条件的选项。如果我们把SQL语句换成“SELECT * FROM article WHERE id=2000000”，那么你是希望数据库按照顺序读取完200万行数据以后给你结果还是直接在索引中定位呢？上面的两个图片鲜明的用时对比已经给出了答案（注：一般数据库默认都会为主键生成索引）。</span><br><span class="line">  索引分为聚簇索引和非聚簇索引两种，聚簇索引是按照数据存放的物理位置为顺序的，而非聚簇索引就不一样了；聚簇索引能提高多行检索的速度，而非聚簇索引对于单行的检索很快。</span><br><span class="line">  索引是一种数据结构，可以是B-tree, R-tree, 或者 hash 结构。其中R-tree 常用于查询比较接近的数据；B-trees适合用于查找某范围内的数据，可以很快的从当前数据找到下条数据；hash结构则适用于随机访问的场合，查找每条数据的时间几乎相同。显然，若要查找某个时间段的数据，用B-tree结构要比hash结构快好多。 </span><br><span class="line">  </span><br><span class="line"> - 普通索引</span><br><span class="line"> 这是最基本的索引，它没有任何限制。</span><br><span class="line">  ```mysql</span><br><span class="line">  mysql&gt; CREATE TABLE mytable(</span><br><span class="line">ID INT NOT NULL,  </span><br><span class="line">username VARCHAR(16) NOT NULL,</span><br><span class="line">INDEX (username(16))</span><br><span class="line">);</span><br><span class="line">  直接创建索引:</span><br><span class="line">  mysql&gt; CREATE INDEX index_name ON table(column(length))</span><br><span class="line">  </span><br><span class="line">  mysql&gt; CREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL );</span><br><span class="line">  mysql&gt; create index user_index on mytable(username(16));</span><br><span class="line">  </span><br><span class="line">  查看索引：</span><br><span class="line">  mysql&gt; show index from mytable;</span><br><span class="line">  </span><br><span class="line">  修改表结构的方式添加索引:</span><br><span class="line">  mysql&gt; ALTER TABLE table_name ADD INDEX index_name (column(length))</span><br><span class="line">  mysql&gt; alter table mytable add index user_index  (username(16));</span><br><span class="line">  </span><br><span class="line">  删除索引:</span><br><span class="line">  mysql&gt; DROP INDEX index_name ON table</span><br><span class="line">  </span><br><span class="line">  mysql&gt; drop index user_index on mytable;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>唯一索引<br>与普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值（注意和主键不同）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE mytable(  </span><br><span class="line">ID INT NOT NULL,    </span><br><span class="line">username VARCHAR(16) NOT NULL,   </span><br><span class="line">INDEX (username(16))   </span><br><span class="line">); </span><br><span class="line">直接创建索引:</span><br><span class="line">mysql&gt; CREATE INDEX index_name ON table(column(length))</span><br><span class="line">mysql&gt; create index user_index on mytable(username(16));</span><br><span class="line"></span><br><span class="line">修改表结构的方式添加索引:</span><br><span class="line">mysql&gt; ALTER TABLE table_name ADD UNIQUE indexName (column(length))</span><br><span class="line">mysql&gt; alter table mytable add UNIQUE user_index  (username(16));</span><br><span class="line"></span><br><span class="line">删除索引:</span><br><span class="line">mysql&gt; DROP INDEX index_name ON table</span><br><span class="line">mysql&gt; drop index user_index on mytable;</span><br></pre></td></tr></table></figure><p>其他索引都是类似的，本文不涉及。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍MySQL语法之列属性。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://dsxlinux.github.io/2018/07/19/linux-live/"/>
    <id>https://dsxlinux.github.io/2018/07/19/linux-live/</id>
    <published>2018-07-19T07:23:47.545Z</published>
    <updated>2018-07-19T07:23:47.532Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html><head>    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">    <meta property="og:title" content="直播地址">    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">    <title>直播</title></head><body><div style="width:100%; height:auto;"><p> 这里是直播的观看地址，可以直接观看，不需要其他播放器的支持。<b style="color:red">请允许您的浏览器支持flash插件。</b>原来使用播放器播放的方式也是可以的。<br><div><div id="id_video_container" style="width:100%; height:auto;"></div><script src="//qzonestyle.gtimg.cn/open/qcloud/video/live/h5/live_connect.js" charset="utf-8"></script><script type="text/javascript">    (function () {        var player = new qcVideo.Player("id_video_container", {            "live_url" : "http://2117.liveplay.myqcloud.com/live/2117_332e62ae51.flv",    "live_url2" : "http://2117.liveplay.myqcloud.com/live/2117_332e62ae51.m3u8",            "width" : 480,            "height" : 320        });    })()</script></div></p></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot;&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>lftp命令详解</title>
    <link href="https://dsxlinux.github.io/2018/07/12/linux-lftp/"/>
    <id>https://dsxlinux.github.io/2018/07/12/linux-lftp/</id>
    <published>2018-07-12T09:16:50.000Z</published>
    <updated>2018-07-12T10:11:43.105Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍FTP客户端工具lftp的使用方法。<br><a id="more"></a></p><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install lftp</span></span><br></pre></td></tr></table></figure><h4 id="2-登录"><a href="#2-登录" class="headerlink" title="2.登录"></a>2.登录</h4><p>登录方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lftp ftp://ftpuser:123456@192.168.0.213:21# ftp://可以省略，ftp协议端口是21</span></span><br><span class="line"><span class="comment"># lftp ftp://ftpuser@192.168.0.213:21# 密码可以单独输入</span></span><br><span class="line"><span class="comment"># lftp sftp://ftpuser:123456@192.168.0.213:22# sftp协议，端口是22</span></span><br><span class="line"><span class="comment"># lftp sftp://ftpuser@192.168.0.213:22# 密码可以单独输入</span></span><br></pre></td></tr></table></figure><h4 id="3-用法"><a href="#3-用法" class="headerlink" title="3.用法"></a>3.用法</h4><ul><li>查看或者改变目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span><span class="comment"># 进入远程目录</span></span><br><span class="line"><span class="built_in">cd</span> ..<span class="comment"># 进入上一级目录</span></span><br><span class="line">ls<span class="comment"># 查看文件列表</span></span><br></pre></td></tr></table></figure><ul><li>文件下载</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">get xxx<span class="comment"># 下载xxx文件</span></span><br><span class="line">mget *.txt<span class="comment"># 使用通配符下载</span></span><br><span class="line">mget -c xxx<span class="comment"># 断点续传</span></span><br><span class="line">mirror aaa/ <span class="comment"># 将aaa目录整个的下载下来，子目录也会自动复制</span></span><br><span class="line">pget -c -n 10 file.dat  <span class="comment"># 可以多线程下载</span></span><br></pre></td></tr></table></figure><ul><li>文件上传</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">put xxx</span><br><span class="line">mput xxx1 xxx2 xxx3</span><br><span class="line">mirror -R 本地目录名<span class="comment"># 将本地目录以迭代（包括子目录）的方式反向上传</span></span><br></pre></td></tr></table></figure><ul><li>其他</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p a/b/c<span class="comment"># 创建多级目录</span></span><br><span class="line">rm -rf a/<span class="comment"># 删除文件或目录</span></span><br><span class="line">cata.txt<span class="comment"># 查看远程文件内容</span></span><br><span class="line">queue get 123.txt <span class="comment"># 将任务加入任务列表</span></span><br><span class="line">queue put 234.txt</span><br><span class="line">queue mirror aaa/</span><br><span class="line">queue <span class="comment"># 查看任务列表</span></span><br><span class="line">queue start<span class="comment"># 开始任务列表</span></span><br><span class="line">queue stop<span class="comment"># 停止任务列表</span></span><br><span class="line"><span class="built_in">jobs</span>   <span class="comment"># 查看后台任务列表</span></span><br><span class="line"><span class="built_in">kill</span> all<span class="comment"># 删除全部的jobs</span></span><br><span class="line">mv<span class="comment"># 重命名文件</span></span><br><span class="line">open 127.0.0.1 <span class="comment"># 连接ftp</span></span><br></pre></td></tr></table></figure><h4 id="4-脚本"><a href="#4-脚本" class="headerlink" title="4.脚本"></a>4.脚本</h4><ul><li>上传脚本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"script start at  `date "</span>+%Y-%m-%d %H:%M:%S<span class="string">"` "</span></span><br><span class="line"></span><br><span class="line">lftp &lt;&lt; EOF</span><br><span class="line">open ftp://ftpuser:123456@127.0.0.1:21</span><br><span class="line">mirror -R /root/upload/<span class="built_in">test</span>  /code/</span><br><span class="line">close </span><br><span class="line"><span class="built_in">bye</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"script  end  at  `date "</span>+%Y-%m-%d %H:%M:%S<span class="string">"` "</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍FTP客户端工具lftp的使用方法。&lt;br&gt;
    
    </summary>
    
      <category term="linux-basic" scheme="https://dsxlinux.github.io/categories/linux-basic/"/>
    
    
      <category term="linux-basic" scheme="https://dsxlinux.github.io/tags/linux-basic/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装vsftpd及配置详解</title>
    <link href="https://dsxlinux.github.io/2018/07/02/vsftpd/"/>
    <id>https://dsxlinux.github.io/2018/07/02/vsftpd/</id>
    <published>2018-07-02T03:50:21.000Z</published>
    <updated>2018-07-03T02:06:24.408Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x安装vsftpd、配置文件、以及客户端的使用。<br><a id="more"></a></p><h4 id="1-FTP服务端和客户端的安装"><a href="#1-FTP服务端和客户端的安装" class="headerlink" title="1.FTP服务端和客户端的安装"></a>1.FTP服务端和客户端的安装</h4><p>Centos默认Yum源自带了ftp的服务端和客户端软件，直接使用Yum安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install vsftpd ftp</span></span><br></pre></td></tr></table></figure></p><h4 id="2-FTP主动模式与FTP被动模式"><a href="#2-FTP主动模式与FTP被动模式" class="headerlink" title="2.FTP主动模式与FTP被动模式"></a>2.FTP主动模式与FTP被动模式</h4><ul><li>主动模式</li></ul><p>主动：默认情况下，ftp服务是开放了21端口，用来接受控制命令，服务器用20端口去发送数据（连接客户端大于1024的随机端口）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">serverclient</span><br><span class="line">21 &lt;-----------命令----------- 随机端口</span><br><span class="line">20 ------------数据----------&gt; 随机端口</span><br></pre></td></tr></table></figure><ul><li>被动模式</li></ul><p>被动：ftp服务也是开放21端口，用来接受命令控制，进行数据传输时，客户端会告知服务端打开一个大于1024的端口，然后客户端去主动连接服务</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">serverclient</span><br><span class="line">21 &lt;-----------命令----------- 随机端口</span><br><span class="line">随机端口 ---------数据-----------&gt; 随机端口</span><br></pre></td></tr></table></figure><p>主动模式：建立数据链路时由sever端去主动连接客户端的大于1024的随机端口<br>被动模式：建立数据链路时由client端去主动连服务端的随机端口</p><p>vsftpd默认使用被动模式。</p><h4 id="3-FTP匿名登录"><a href="#3-FTP匿名登录" class="headerlink" title="3. FTP匿名登录"></a>3. FTP匿名登录</h4><p>先启动vsftpd服务端：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># /etc/init.d/vsftpd start</span></span><br></pre></td></tr></table></figure><p>使用ftp客户端连接：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># ftp localhost</span></span><br><span class="line">Trying ::1...</span><br><span class="line">ftp: connect to address ::1Connection refused</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to localhost (127.0.0.1).</span><br><span class="line">220 (vsFTPd 2.2.2)</span><br><span class="line">Name (localhost:root): ftp</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password:</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure><p>匿名用户有两个：</p><p>用户名：anonymous    密码：空</p><p>用户名：ftp     密码：空</p><h4 id="4-配置文件"><a href="#4-配置文件" class="headerlink" title="4.配置文件"></a>4.配置文件</h4><ul><li>默认配置文件</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># cat  /etc/vsftpd/vsftpd.conf  |grep -v ^# |grep -v ^$</span></span><br><span class="line">anonymous_enable=YES#允许匿名用户登录</span><br><span class="line">local_enable=YES#允许本地用户登录</span><br><span class="line">write_enable=YES#允许本地用户登录后可写</span><br><span class="line">local_umask=022#建立文件或者目录的权限掩码</span><br><span class="line">dirmessage_enable=YES#启用目录的说明或者欢迎信息</span><br><span class="line">xferlog_enable=YES#打开日志功能 （只记录文件的上传和下载信息）</span><br><span class="line">connect<span class="emphasis">_from_</span>port_20=YES#默认支持主动模式（两个模式都是开启的，直接使用的话是使用的被动模式）</span><br><span class="line">xferlog<span class="emphasis">_std_</span>format=YES#日志使用xferlog而不是vsftpd.log，改为NO的话，则相反</span><br><span class="line">listen=YES#默认运行在stand alone下</span><br><span class="line">pam<span class="emphasis">_service_</span>name=vsftpd#支持pam（可植入模块）</span><br><span class="line">userlist_enable=YES#打开用户列表的功能</span><br><span class="line">tcp<span class="emphasis">_wrappers=YES#支持tcp_</span>wrappers</span><br></pre></td></tr></table></figure><ul><li><p>匿名用户（anonymous）设置</p><ul><li>不允许匿名用户登录</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">anonymous_enable=NO#修改配置文件</span><br><span class="line"><span class="section"># /etc/init.d/vsftpd   reload</span></span><br></pre></td></tr></table></figure><ul><li>匿名用户下载</li></ul><p>匿名用户默认是可以登录，也可以下载。默认使用匿名用户登录的服务端的/var/ftp目录下。</p><ul><li>匿名用户上传</li></ul><p>默认是不允许匿名用户上传的</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">anonymous_enable=YES#允许匿名用户登录</span><br><span class="line">anon<span class="emphasis">_upload_</span>enable=YES#允许匿名用户上传文件</span><br><span class="line">anon<span class="emphasis">_mkdir_</span>write_enable=YES#允许匿名用户创建目录</span><br><span class="line">anon<span class="emphasis">_other_</span>write_enable=yes#允许匿名用户可以删除文件和重命名文件</span><br><span class="line"><span class="section"># chmod 777 /var/ftp/pub#把pub改为可写，用于上传</span></span><br></pre></td></tr></table></figure></li><li><p>普通用户（local）设置</p><ul><li>普通用户登录</li></ul><p>配置文件中local_enable=YES，默认是允许普通用户登录的。如果要限制普通用户登录，可以通过户列表来控制。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">userlist_enable=yes#打开用户列表功能</span><br><span class="line">userlist_deny=YES#这一句可加可不加，默认就是有这一句的</span><br><span class="line"><span class="section"># vim /etc/vsftpd/user_list#加上要禁止的用户，一个用户写一行</span></span><br></pre></td></tr></table></figure><ul><li>普通用户的下载和上传</li></ul><p>默认是允许下载和上传的。允许上传除了系统目录有写权限外，还有与服务的参数write_enable=YES有关。</p><p>所有的本地用户（非匿名用户）登录后，都统一登录到/ftpdata/目录下：</p><p>方法一：把所有的用户家目录改成/ftpdata/。但这样做会影响到系统用户登录到自己的家目录</p><p>方法二：使用下面的参数，它不影响你系统用户登录到自己的家目录<br>local_root=/ftpdata</p><ul><li>关于chroot环境</li></ul><p>默认情况下，普通用户（匿名用户除外）可以登录ftp后，cd切换到/下的任何地方，只要有r权限，就可以get文件，那么显示是不安全的。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; ls /</span><br><span class="line">227 Entering Passive Mode (127,0,0,1,182,179).</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">dr-xr-xr-x    2 0        0            4096 Jun 26 19:11 bin</span><br><span class="line">dr-xr-xr-x    5 0        0            1024 Apr 10 13:58 boot</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Oct 04  2017 cgroup</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Apr 10 13:38 data</span><br><span class="line">drwxr-xr-x   18 0        0            3820 Jun 04 00:52 dev</span><br><span class="line">drwxr-xr-x  129 0        0           12288 Jun 29 19:19 etc</span><br><span class="line">drwxr-xr-x    4 0        0            4096 Jun 26 08:19 home</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Apr 16 07:58 ks</span><br><span class="line">dr-xr-xr-x   11 0        0            4096 Apr 10 16:22 lib</span><br><span class="line">dr-xr-xr-x   10 0        0           12288 Jun 26 19:11 lib64</span><br><span class="line">drwx------    2 0        0           16384 Apr 10 13:38 lost+found</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Jun 01 06:05 media</span><br><span class="line">drwxr-xr-x    2 0        0               0 Jun 04 00:51 misc</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Apr 10 16:13 mnt</span><br><span class="line">drwxr-xr-x    2 0        0               0 Jun 04 00:51 net</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Jun 26 09:25 opt</span><br><span class="line">dr-xr-xr-x  151 0        0               0 Jun 04 00:51 proc</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Jun 21 06:52 pydash</span><br><span class="line">dr-xr-x---   38 0        0            4096 Jul 02 06:38 root</span><br><span class="line">dr-xr-xr-x    2 0        0           12288 Jun 26 19:11 sbin</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Apr 10 13:42 selinux</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Sep 23  2011 srv</span><br><span class="line">drwxr-xr-x   13 0        0               0 Jun 04 00:51 sys</span><br><span class="line">drwxrwxrwt    8 0        0            4096 Jul 01 19:19 tmp</span><br><span class="line">drwxr-xr-x   13 0        0            4096 Apr 10 13:42 usr</span><br><span class="line">drwxr-xr-x   23 0        0            4096 Jun 26 08:16 var</span><br><span class="line">dr-xr-xr-x    7 0        0            4096 Nov 29  2013 yum</span><br><span class="line">226 Directory send OK.</span><br></pre></td></tr></table></figure><p>普通用户ls /，可以看到系统的根目录，进入相应的目录就可以下载。</p><p>通过chroot将普通用户限制在它的家目录。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">chroot<span class="emphasis">_list_</span>enable=YES</span><br><span class="line">chroot<span class="emphasis">_list_</span>file=/etc/vsftpd/chroot_list</span><br><span class="line"><span class="section"># vim /etc/vsftpd/chroot_list  #创建这个文件，并写上要加入笼环境的用户名，一行写一个</span></span><br><span class="line"><span class="section"># /etc/init.d/vsftpd reload</span></span><br></pre></td></tr></table></figure><p>如何把所有的普通用户（匿名用户默认就是笼环境)加入到chroot环境？</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># chroot_local_user=YES</span></span><br></pre></td></tr></table></figure><p>注意：</p><p>对于chroot_local_user与chroot_list_enable的组合效果，可以参考下表： </p></li></ul><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">chroot_local_user=YES</th><th>chroot_local_user=NO</th></tr></thead><tbody><tr><td style="text-align:left">chroot_list_enable=YES</td><td style="text-align:left">(1)所有用户都被限制在其主目录下 (2)使用chroot_list_file指定的用户列表，这些用户作为“例外”，不受限制</td><td>(1)所有用户都不被限制其主目录下  (2)使用chroot_list_file指定的用户列表，这些用户作为“例外”，受到限制</td></tr><tr><td style="text-align:left">chroot_list_enable=NO</td><td style="text-align:left">(1)所有用户都被限制在其主目录下  (2)不使用chroot_list_file指定的用户列表，没有任何“例外”用户</td><td>(1)所有用户都不被限制其主目录下  (2)不使用chroot_list_file指定的用户列表，没有任何“例外”用户</td></tr></tbody></table><ul><li>被动连接模式，控制服务器数据传输端口的范围</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># vim /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">pasv_enable=YES#这一句默认不加也可以</span><br><span class="line">pasv<span class="emphasis">_min_</span>port=3000</span><br><span class="line">pasv<span class="emphasis">_max_</span>port=3005#最小端口范围和最大端口范围可以自定义，也可以使用同一个端口</span><br><span class="line"></span><br><span class="line"><span class="section"># netstat -nt |grep TIME_</span></span><br><span class="line">tcp        0      0 127.0.0.1:3000              127.0.0.1:38206             TIME_WAIT</span><br></pre></td></tr></table></figure><h4 id="5-客户端工具的使用"><a href="#5-客户端工具的使用" class="headerlink" title="5.客户端工具的使用"></a>5.客户端工具的使用</h4><ul><li><p>ftp使用</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># ftp 127.0.0.1</span></span><br><span class="line">ftp&gt; ls#查看远程文件</span><br><span class="line">ftp&gt; !ls#感叹号后面执行本地命令</span><br><span class="line">ftp&gt; !#退出ftp命令行</span><br><span class="line">ftp&gt; append ks.cfg a.txt#把本地的ks.cfg文件的内容追加到远程的a.txt</span><br><span class="line">ftp&gt; cd ftp#进入远程的ftp目录</span><br><span class="line">ftp&gt; lcd /root/#改变本地工作目录</span><br><span class="line">ftp&gt; get hello.txt#复制单个远程文件到本地</span><br><span class="line">ftp&gt; put a.txt#复制一个本地文件到远程</span><br><span class="line">ftp&gt; del ftp.txt#删除远程单个文件</span><br><span class="line">ftp&gt; open 127.0.0.1#连接到远程服务器</span><br><span class="line">ftp&gt; close#结束FTP会话并返回命令行</span><br><span class="line">ftp&gt; bye#结束FTP会话并退出</span><br><span class="line">ftp&gt; glob#开关文件名通配符（默认ON）</span><br><span class="line"></span><br><span class="line">ftp&gt; mget 1.tmp 2.tmp 3.tmp#复制一个或多个远程文件至本地 （ftp -i 127.0.0.1）</span><br><span class="line">ftp&gt; mdel *.php#删除远程一个或多个文件</span><br><span class="line">ftp&gt; mkdir tmp#创建一个远程目录</span><br><span class="line">ftp&gt; mput *.txt#复制一个或多个本地文件到远程</span><br><span class="line">ftp&gt; pwd#显示远程当前工作目录</span><br><span class="line">ftp&gt; recv 1.tmp#复制远程文件到本地</span><br><span class="line">ftp&gt; rename 1.tmp 1.tmp.bak#重命名远程文件</span><br><span class="line">ftp&gt; rmdir tmp#删除远程目录</span><br><span class="line">ftp&gt; send 1.tmp#复制一个本地文件到远程（功能同put）</span><br><span class="line">ftp&gt; passive#主被动模式切换</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x安装vsftpd、配置文件、以及客户端的使用。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Apache服务器开启webDAV模块</title>
    <link href="https://dsxlinux.github.io/2018/06/26/httpd-webdav/"/>
    <id>https://dsxlinux.github.io/2018/06/26/httpd-webdav/</id>
    <published>2018-06-26T07:39:24.000Z</published>
    <updated>2018-06-26T08:37:16.397Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统Apache服务器开启webDAV模块。<br><a id="more"></a></p><h4 id="1-安装Apache"><a href="#1-安装Apache" class="headerlink" title="1.安装Apache"></a>1.安装Apache</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install httpd apr apr-util httpd-devel安装</span></span><br><span class="line"><span class="comment"># chkconfig httpd on开机启动</span></span><br></pre></td></tr></table></figure><h4 id="2-配置WebDAV模块"><a href="#2-配置WebDAV模块" class="headerlink" title="2.配置WebDAV模块"></a>2.配置WebDAV模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/httpd/conf.d/webdav.conf在Apache的子配置文件目录新建文件</span></span><br><span class="line">&lt;IfModule mod_dav.c&gt;</span><br><span class="line">LimitXMLRequestBody 131072</span><br><span class="line">Alias /webdav <span class="string">"/var/www/webdav"</span></span><br><span class="line">&lt;Directory /var/www/webdav&gt;</span><br><span class="line">    Dav On</span><br><span class="line">    Options +Indexes</span><br><span class="line">    IndexOptions FancyIndexing</span><br><span class="line">    AddDefaultCharset UTF-8</span><br><span class="line">    AuthType Basic</span><br><span class="line">    AuthName <span class="string">"WebDAV Server"</span></span><br><span class="line">    AuthUserFile /etc/httpd/webdav.users.pwd</span><br><span class="line">    Require valid-user</span><br><span class="line">    Order allow,deny</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir -p /var/www/webdav</span></span><br><span class="line"><span class="comment"># chown apache:apache /var/www/webdav</span></span><br><span class="line"><span class="comment"># htpasswd -c /etc/httpd/webdav.users.pwd test 根据提示输入密码，切记一定要设置密码，否则会有安全问题</span></span><br><span class="line"><span class="comment"># service httpd restart重启apache服务</span></span><br></pre></td></tr></table></figure><h4 id="3-测试"><a href="#3-测试" class="headerlink" title="3.测试"></a>3.测试</h4><p>通过浏览器访问：访问本机 , 访问远程：<a href="http://ip/webdav" target="_blank" rel="noopener">http://ip/webdav</a></p><h4 id="4-将webdav映射成本地磁盘"><a href="#4-将webdav映射成本地磁盘" class="headerlink" title="4.将webdav映射成本地磁盘"></a>4.将webdav映射成本地磁盘</h4><p>在windows上映射成本地磁盘，需要注意：<br>WIN7以上版本的操作系统微软禁用了http形式的基本WebDAV验证形式（KB841215），此时我们需要修改注册表来实现。修改HKEY_LOCAL_MACHINE&gt;&gt;SYSTEM&gt;&gt;CurrentControlSet&gt;&gt;Services&gt;&gt;WebClient&gt;&gt;Parameters&gt;&gt;BasicAuthLevel<br>把这个值从1改为2，然后进控制面板，服务，把WebClient服务重启（没有启动的就启动它）。</p><p>具体操作如下：<br>在桌面上【我的电脑】图标上点击【右键】，选择【映射网络驱动器】，在弹出框中填入上面的地址，比如：<a href="http://192.168.0.215/webdav/" target="_blank" rel="noopener">http://192.168.0.215/webdav/</a> ，勾选【登录时重新连接】和【使用其他凭据连接】，然后点击【完成】。输入【账号和密码】就可以进入了。</p><h4 id="5-将webdav挂载到linux上"><a href="#5-将webdav挂载到linux上" class="headerlink" title="5.将webdav挂载到linux上"></a>5.将webdav挂载到linux上</h4><p>linux系统上有多个办法来使用webdav服务。<br>(1) davfs2工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install epel-release -y安装epel源</span></span><br><span class="line"><span class="comment"># yum install davfs2 -y安装davfs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir /mnt/webdav创建用于挂载的目录</span></span><br><span class="line"><span class="comment"># mount -t davfs http://192.168.0.215/webdav /mnt/webdav/挂载</span></span><br><span class="line">Please enter the username to authenticate with server</span><br><span class="line">http://192.168.0.215/webdav or hit enter <span class="keyword">for</span> none.</span><br><span class="line">  Username: <span class="built_in">test</span>用户名</span><br><span class="line">Please enter the password to authenticate user <span class="built_in">test</span> with server</span><br><span class="line">http://192.168.0.215/webdav or hit enter <span class="keyword">for</span> none.</span><br><span class="line">  Password:  密码</span><br><span class="line">  </span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line">Filesystem                    Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/VolGroup-lv_root   50G   19G   29G  40% /</span><br><span class="line">tmpfs                         3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">/dev/sda1                     485M   39M  421M   9% /boot</span><br><span class="line">/dev/mapper/VolGroup-lv_home  435G  199M  413G   1% /home</span><br><span class="line">http://192.168.0.215/webdav    26G   13G   13G  50% /mnt/webdav</span><br></pre></td></tr></table></figure></p><p>(2) cadaver工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install cadaver -y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cadaver http://192.168.0.215/webdav</span></span><br><span class="line">Authentication required <span class="keyword">for</span> WebDAV Server on server `192.168.0.215<span class="string">':</span></span><br><span class="line"><span class="string">Username: test</span></span><br><span class="line"><span class="string">Password: </span></span><br><span class="line"><span class="string">dav:/webdav/&gt; ls</span></span><br><span class="line"><span class="string">Listing collection `/webdav/'</span>: collection is empty.</span><br><span class="line">dav:/webdav/&gt; <span class="built_in">help</span></span><br><span class="line">Available commands: </span><br><span class="line"> ls         <span class="built_in">cd</span>         <span class="built_in">pwd</span>        put        get        mget       mput       </span><br><span class="line"> edit       less       mkcol      cat        delete     rmcol      copy       </span><br><span class="line"> move       lock       unlock     discover   steal      showlocks  version    </span><br><span class="line"> checkin    checkout   uncheckout <span class="built_in">history</span>    label      propnames  chexec     </span><br><span class="line"> propget    propdel    propset    search     <span class="built_in">set</span>        open       close      </span><br><span class="line"> <span class="built_in">echo</span>       quit       <span class="built_in">unset</span>      lcd        lls        lpwd       <span class="built_in">logout</span>     </span><br><span class="line"> <span class="built_in">help</span>       describe   about      </span><br><span class="line">Aliases: rm=delete, mkdir=mkcol, mv=move, cp=copy, more=less, quit=<span class="built_in">exit</span>=<span class="built_in">bye</span></span><br></pre></td></tr></table></figure></p><p>(3) curl命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">上传：</span><br><span class="line"><span class="comment"># curl -v --user test:123456 -T install.log http://192.168.0.215/webdav/</span></span><br><span class="line">下载：</span><br><span class="line"><span class="comment"># curl --user test:123456  http://192.168.0.215/webdav/install.log &gt; install.txt</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统Apache服务器开启webDAV模块。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://dsxlinux.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://dsxlinux.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Memcache安装和配置</title>
    <link href="https://dsxlinux.github.io/2018/06/25/memcached-install/"/>
    <id>https://dsxlinux.github.io/2018/06/25/memcached-install/</id>
    <published>2018-06-25T13:12:04.000Z</published>
    <updated>2018-07-13T08:47:19.468Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统通过YUM安装Memcache安装和配置。<br><a id="more"></a></p><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum search memcached</span></span><br></pre></td></tr></table></figure><h4 id="2-启停和连接"><a href="#2-启停和连接" class="headerlink" title="2.启停和连接"></a>2.启停和连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># memcached -h</span></span><br><span class="line"><span class="comment"># service memcached start</span></span><br><span class="line"><span class="comment"># service memcached stop</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># netstat -antp | grep memcached </span></span><br><span class="line">tcp        0      0 0.0.0.0:11211               0.0.0.0:*                   LISTEN      2608/memcached      </span><br><span class="line">tcp        0      0 :::11211                    :::*                        LISTEN      2608/memcached</span><br></pre></td></tr></table></figure><h4 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h4><p>配置文件：/etc/sysconfig/memcached<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Properties file with JDBC-related settings.</span></span><br><span class="line"><span class="comment"># Applied by PropertyPlaceholderConfigurer from "applicationcontext-*.xml".</span></span><br><span class="line"><span class="comment"># Targeted at system administrators, to avoid touching the context XML files.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#memcached.servers=127.0.0.1:11211</span></span><br><span class="line"><span class="comment">#memcached.weights=1</span></span><br><span class="line">memcached.servers=127.0.0.1:11211</span><br><span class="line">memcached.weights=1</span><br><span class="line"><span class="comment">#初始连接数</span></span><br><span class="line">memcached.initConn=5</span><br><span class="line"><span class="comment">#最小连接数</span></span><br><span class="line">memcached.minConn=5</span><br><span class="line"><span class="comment">#最大连接数</span></span><br><span class="line">memcached.maxConn=250</span><br><span class="line"><span class="comment">#最大处理时间(豪秒)</span></span><br><span class="line">memcached.maxIdle=21600000</span><br><span class="line"><span class="comment">#主线程睡眠时间(豪秒) 连接池维护线程的睡眠时间 设置为0，维护线程不启动 维护线程主要通过log输出socket的运行状况，监测连接数目及空闲等待时间等参数以控制连接创建和关闭。</span></span><br><span class="line">memcached.maintSleep=30</span><br><span class="line"><span class="comment">#是否使用Nagle算法，因为我们的通讯数据量通常都比较大（相对TCP控制数据）而且要求响应及时，因此该值需要设置为false（默认是true）</span></span><br><span class="line">memcached.nagle=<span class="literal">false</span></span><br><span class="line"><span class="comment">#socket连接读取超时时间(豪秒)</span></span><br><span class="line">memcached.socketTo=3000</span><br><span class="line"><span class="comment">#设置socket的连接等待超时值</span></span><br><span class="line">memcached.socketConnectTo=0</span><br><span class="line"><span class="comment">#是否压缩数据 默认值是ture</span></span><br><span class="line">memcached.compressEnable=<span class="literal">true</span></span><br><span class="line"><span class="comment">#指定压缩大小(单位:K) 默认值是30K</span></span><br><span class="line">memcached.compressThreshold=65530</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#连接心跳监测开关。设为true则每次通信都要进行连接是否有效的监测，造成通信次数倍增，加大网络负载，因此该参数应该在对HA要求比较高的场合设为TRUE，默认状态是false。</span></span><br><span class="line">memcached.alivecheck=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接失败恢复开关 设置为TRUE，当宕机的服务器启动或中断的网络连接后，这个socket连接还可继续使用，否则将不再使用，默认状态是true，建议保持默认。</span></span><br><span class="line">memcached.failback=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 容错开关 设置为TRUE，当当前socket不可用时，程序会自动查找可用连接并返回，否则返回NULL，默认状态是true，建议保持默认。</span></span><br><span class="line">memcached.failover=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#cache数据的原始类型是String 默认值是false 只有在确定cache的数据类型是string的情况下才设为true，这样可以加快处理速度。</span></span><br><span class="line">memcached.primitiveasstring=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当primitiveAsString为true时使用的编码转化格式 默认值是utf-8 如果确认主要写入数据是中文等非ASCII编码字符，建议采用GBK等更短的编码格式</span></span><br><span class="line">memcached.defaultencoding=utf-8</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统通过YUM安装Memcache安装和配置。&lt;br&gt;
    
    </summary>
    
      <category term="nosql" scheme="https://dsxlinux.github.io/categories/nosql/"/>
    
    
      <category term="nosql" scheme="https://dsxlinux.github.io/tags/nosql/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB安装和配置</title>
    <link href="https://dsxlinux.github.io/2018/06/25/mongodb-install/"/>
    <id>https://dsxlinux.github.io/2018/06/25/mongodb-install/</id>
    <published>2018-06-25T12:40:53.000Z</published>
    <updated>2018-07-13T08:46:40.686Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统通过YUM安装MongoDB和配置。<br><a id="more"></a></p><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><p>配置YUM源：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/yum.repos.d/mongodb.repo</span></span><br><span class="line">[mongodb]</span><br><span class="line">name=mongodb Repository</span><br><span class="line">baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64</span><br><span class="line"><span class="comment">#baseurl=https://repo.mongodb.org/yum/redhat/6/mongodb-org/3.7/x86_64/</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install mongodb mongodb-server</span></span><br></pre></td></tr></table></figure></p><h4 id="2-启停和连接"><a href="#2-启停和连接" class="headerlink" title="2.启停和连接"></a>2.启停和连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mongod start</span></span><br><span class="line"><span class="comment"># netstat -atnp | grep mongod</span></span><br><span class="line">tcp        0      0 127.0.0.1:27017             0.0.0.0:*                   LISTEN      2021/mongod</span><br><span class="line"><span class="comment"># service mongod stop</span></span><br></pre></td></tr></table></figure><h4 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h4><p>配置文件：/etc/mongod.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mongo.conf   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#where to log   </span></span><br><span class="line">logpath=/var/<span class="built_in">log</span>/mongo/mongod.log   </span><br><span class="line">  </span><br><span class="line">logappend=<span class="literal">true</span> <span class="comment">#以追加方式写入日志   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># fork and run in background   </span></span><br><span class="line">fork = <span class="literal">true</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#port = 27017 #端口   </span></span><br><span class="line">  </span><br><span class="line">dbpath=/var/lib/mongo <span class="comment">#数据库文件保存位置   </span></span><br><span class="line">directoryperdb=<span class="literal">true</span></span><br><span class="line"><span class="comment"># Enables periodic logging of CPU utilization and I/O wait   </span></span><br><span class="line"><span class="comment">#启用定期记录CPU利用率和 I/O 等待   </span></span><br><span class="line"><span class="comment">#cpu = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Turn on/off security.  Off is currently the default  </span></span><br><span class="line"><span class="comment"># 是否以安全认证方式运行，默认是不认证的非安全方式   </span></span><br><span class="line"><span class="comment">#noauth = true  </span></span><br><span class="line"><span class="comment">#auth = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Verbose logging output.   </span></span><br><span class="line"><span class="comment"># 详细记录输出   </span></span><br><span class="line"><span class="comment">#verbose = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Inspect all client data for validity on receipt (useful for  </span></span><br><span class="line"><span class="comment"># developing drivers)用于开发驱动程序时的检查客户端接收数据的有效性   </span></span><br><span class="line"><span class="comment">#objcheck = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Enable db quota management 启用数据库配额管理，默认每个db可以有8个文件，可以用quotaFiles参数设置   </span></span><br><span class="line"><span class="comment">#quota = true  </span></span><br><span class="line"><span class="comment"># 设置oplog记录等级   </span></span><br><span class="line"><span class="comment"># Set oplogging level where n is   </span></span><br><span class="line"><span class="comment">#   0=off (default)   </span></span><br><span class="line"><span class="comment">#   1=W   </span></span><br><span class="line"><span class="comment">#   2=R   </span></span><br><span class="line"><span class="comment">#   3=both   </span></span><br><span class="line"><span class="comment">#   7=W+some reads   </span></span><br><span class="line"><span class="comment">#oplog = 0  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Diagnostic/debugging option 动态调试项   </span></span><br><span class="line"><span class="comment">#nocursors = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Ignore query hints 忽略查询提示   </span></span><br><span class="line"><span class="comment">#nohints = true  </span></span><br><span class="line"><span class="comment"># 禁用http界面，默认为localhost：28017  </span></span><br><span class="line"><span class="comment"># Disable the HTTP interface (Defaults to localhost:27018).这个端口号写的是错的   </span></span><br><span class="line"><span class="comment">#nohttpinterface = true  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 关闭服务器端脚本，这将极大的限制功能   </span></span><br><span class="line"><span class="comment"># Turns off server-side scripting.  This will result in greatly limited   </span></span><br><span class="line"><span class="comment"># functionality   </span></span><br><span class="line"><span class="comment">#noscripting = true  </span></span><br><span class="line"><span class="comment"># 关闭扫描表，任何查询将会是扫描失败   </span></span><br><span class="line"><span class="comment"># Turns off table scans.  Any query that would do a table scan fails.   </span></span><br><span class="line"><span class="comment">#notablescan = true  </span></span><br><span class="line"><span class="comment"># 关闭数据文件预分配   </span></span><br><span class="line"><span class="comment"># Disable data file preallocation.   </span></span><br><span class="line"><span class="comment">#noprealloc = true  </span></span><br><span class="line"><span class="comment"># 为新数据库指定.ns文件的大小，单位:MB   </span></span><br><span class="line"><span class="comment"># Specify .ns file size for new databases.   </span></span><br><span class="line"><span class="comment"># nssize = &lt;size&gt;   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Accout token for Mongo monitoring server.   </span></span><br><span class="line"><span class="comment">#mms-token = &lt;token&gt;   </span></span><br><span class="line"><span class="comment"># mongo监控服务器的名称   </span></span><br><span class="line"><span class="comment"># Server name for Mongo monitoring server.   </span></span><br><span class="line"><span class="comment">#mms-name = &lt;server-name&gt;   </span></span><br><span class="line"><span class="comment"># mongo监控服务器的ping 间隔   </span></span><br><span class="line"><span class="comment"># Ping interval for Mongo monitoring server.   </span></span><br><span class="line"><span class="comment">#mms-interval = &lt;seconds&gt;   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Replication Options 复制选项   </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># in replicated mongo databases, specify here whether this is a slave or master 在复制中，指定当前是从属关系   </span></span><br><span class="line"><span class="comment">#slave = true  </span></span><br><span class="line"><span class="comment">#source = master.example.com   </span></span><br><span class="line"><span class="comment"># Slave only: specify a single database to replicate   </span></span><br><span class="line"><span class="comment">#only = master.example.com   </span></span><br><span class="line"><span class="comment"># or   </span></span><br><span class="line"><span class="comment">#master = true  </span></span><br><span class="line"><span class="comment">#source = slave.example.com</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统通过YUM安装MongoDB和配置。&lt;br&gt;
    
    </summary>
    
      <category term="nosql" scheme="https://dsxlinux.github.io/categories/nosql/"/>
    
    
      <category term="nosql" scheme="https://dsxlinux.github.io/tags/nosql/"/>
    
  </entry>
  
  <entry>
    <title>redis安装和配置</title>
    <link href="https://dsxlinux.github.io/2018/06/25/redis-install/"/>
    <id>https://dsxlinux.github.io/2018/06/25/redis-install/</id>
    <published>2018-06-25T09:56:15.000Z</published>
    <updated>2018-07-13T08:47:26.152Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统通过YUM安装redis安装和配置。<br><a id="more"></a></p><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install epel-releaseyum添加epel源</span></span><br><span class="line"><span class="comment"># yum -y install redis</span></span><br></pre></td></tr></table></figure><h4 id="2-启停和连接"><a href="#2-启停和连接" class="headerlink" title="2.启停和连接"></a>2.启停和连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service redis start</span></span><br><span class="line"><span class="comment"># ps -ef | grep redis</span></span><br><span class="line"><span class="comment"># redis-cli -h localhost -p 6379进入redis</span></span><br><span class="line">localhost:6379&gt;</span><br></pre></td></tr></table></figure><h4 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h4><p>配置文件：/etc/redis.conf<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#是否作为守护进程运行  </span></span><br><span class="line">daemonize yes  </span><br><span class="line"><span class="comment">#如以后台进程运行，则需指定一个pid，默认为/var/run/redis.pid  </span></span><br><span class="line"><span class="comment">#pidfile redis.pid  </span></span><br><span class="line"><span class="comment">#绑定主机IP，默认值为127.0.0.1  </span></span><br><span class="line"><span class="built_in">bind</span> 182.92.168.171  </span><br><span class="line"><span class="comment">#Redis默认监听端口  </span></span><br><span class="line">port 6379  </span><br><span class="line"><span class="comment">#客户端闲置多少秒后，断开连接，默认为300（秒）  </span></span><br><span class="line">timeout 300  </span><br><span class="line"><span class="comment">#日志记录等级，有4个可选值，debug，verbose（默认值），notice，warning  </span></span><br><span class="line">loglevel verbose  </span><br><span class="line"><span class="comment">#指定日志输出的文件名，默认值为stdout，也可设为/dev/null屏蔽日志  </span></span><br><span class="line">logfile stdout  </span><br><span class="line"><span class="comment">#可用数据库数，默认值为16，默认数据库为0  </span></span><br><span class="line">databases 16  </span><br><span class="line"><span class="comment">#保存数据到disk的策略  </span></span><br><span class="line"><span class="comment">#当有一条Keys数据被改变是，900秒刷新到disk一次  </span></span><br><span class="line">save 900 1  </span><br><span class="line"><span class="comment">#当有10条Keys数据被改变时，300秒刷新到disk一次  </span></span><br><span class="line">save 300 10  </span><br><span class="line"><span class="comment">#当有1w条keys数据被改变时，60秒刷新到disk一次  </span></span><br><span class="line">save 60 10000  </span><br><span class="line"><span class="comment">#当dump .rdb数据库的时候是否压缩数据对象  </span></span><br><span class="line">rdbcompression yes  </span><br><span class="line"><span class="comment">#本地数据库文件名，默认值为dump.rdb  </span></span><br><span class="line">dbfilename dump.rdb  </span><br><span class="line"><span class="comment">#本地数据库存放路径，默认值为 ./  </span></span><br><span class="line">dir /var/lib/redis/  </span><br><span class="line"><span class="comment">########### Replication #####################  </span></span><br><span class="line"><span class="comment">#Redis的复制配置  </span></span><br><span class="line"><span class="comment"># slaveof &lt;masterip&gt; &lt;masterport&gt; 当本机为从服务时，设置主服务的IP及端口  </span></span><br><span class="line"><span class="comment"># masterauth &lt;master-password&gt; 当本机为从服务时，设置主服务的连接密码  </span></span><br><span class="line"><span class="comment">#连接密码  </span></span><br><span class="line"><span class="comment"># requirepass foobared  </span></span><br><span class="line"><span class="comment">#最大客户端连接数，默认不限制  </span></span><br><span class="line"><span class="comment"># maxclients 128  </span></span><br><span class="line"><span class="comment">#最大内存使用设置，达到最大内存设置后，Redis会先尝试清除已到期或即将到期的Key，当此方法处理后，任到达最大内存设置，将无法再进行写入操作。  </span></span><br><span class="line"><span class="comment"># maxmemory &lt;bytes&gt;  </span></span><br><span class="line"><span class="comment">#是否在每次更新操作后进行日志记录，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认值为no  </span></span><br><span class="line">appendonly no  </span><br><span class="line"><span class="comment">#更新日志文件名，默认值为appendonly.aof  </span></span><br><span class="line"><span class="comment">#appendfilename  </span></span><br><span class="line"><span class="comment">#更新日志条件，共有3个可选值。no表示等操作系统进行数据缓存同步到磁盘，always表示每次更新操作后手动调用fsync()将数据写到磁盘，everysec表示每秒同步一次（默认值）。  </span></span><br><span class="line"><span class="comment"># appendfsync always  </span></span><br><span class="line">appendfsync everysec  </span><br><span class="line"><span class="comment"># appendfsync no  </span></span><br><span class="line"><span class="comment">################ VIRTUAL MEMORY ###########  </span></span><br><span class="line"><span class="comment">#是否开启VM功能，默认值为no  </span></span><br><span class="line">vm-enabled no  </span><br><span class="line"><span class="comment"># vm-enabled yes  </span></span><br><span class="line"><span class="comment">#虚拟内存文件路径，默认值为/tmp/redis.swap，不可多个Redis实例共享  </span></span><br><span class="line">vm-swap-file /tmp/redis.swap  </span><br><span class="line"><span class="comment">#将所有大于vm-max-memory的数据存入虚拟内存,无论vm-max-memory设置多小,所有索引数据都是内存存储的 (Redis的索引数据就是keys),也就是说,当vm-max-memory设置为0的时候,其实是所有value都存在于磁盘。默认值为0。  </span></span><br><span class="line">vm-max-memory 0  </span><br><span class="line">vm-page-size 32  </span><br><span class="line">vm-pages 134217728  </span><br><span class="line">vm-max-threads 4  </span><br><span class="line"><span class="comment">############# ADVANCED CONFIG ###############  </span></span><br><span class="line">glueoutputbuf yes  </span><br><span class="line"><span class="built_in">hash</span>-max-zipmap-entries 64  </span><br><span class="line"><span class="built_in">hash</span>-max-zipmap-value 512  </span><br><span class="line"><span class="comment">#是否重置Hash表  </span></span><br><span class="line">activerehashing yes</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统通过YUM安装redis安装和配置。&lt;br&gt;
    
    </summary>
    
      <category term="nosql" scheme="https://dsxlinux.github.io/categories/nosql/"/>
    
    
      <category term="nosql" scheme="https://dsxlinux.github.io/tags/nosql/"/>
    
  </entry>
  
  <entry>
    <title>Docker入门</title>
    <link href="https://dsxlinux.github.io/2018/06/25/docker-basic/"/>
    <id>https://dsxlinux.github.io/2018/06/25/docker-basic/</id>
    <published>2018-06-25T07:08:25.000Z</published>
    <updated>2018-06-25T09:27:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统安装docker，以及docker的基本操作。<br><a id="more"></a></p><h4 id="1-Docker概述"><a href="#1-Docker概述" class="headerlink" title="1.Docker概述"></a>1.Docker概述</h4><p>Docker是一种虚拟化技术，即容器。容器不是模拟一个完整的操作系统，而是对进程进行隔离。<br>对于容器里面的进程来说，它接触到的各种资源都是虚拟的，从而实现与底层系统的隔离。</p><h4 id="2-Docker安装"><a href="#2-Docker安装" class="headerlink" title="2.Docker安装"></a>2.Docker安装</h4><p>Docker 是一个开源的商业产品，有两个版本：社区版（Community Edition，缩写为 CE）和企业版（Enterprise Edition，缩写为 EE）。下面的介绍都针对社区版。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install epel-release -y安装epel源</span></span><br><span class="line"><span class="comment"># yum install docker-io安装docker</span></span><br></pre></td></tr></table></figure></p><p>安装完成后，运行下面的命令，验证是否安装成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker version</span></span><br></pre></td></tr></table></figure></p><p>启动docker服务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service docker start</span></span><br><span class="line"><span class="comment"># chkconfig docker on</span></span><br></pre></td></tr></table></figure></p><h4 id="3-镜像操作"><a href="#3-镜像操作" class="headerlink" title="3.镜像操作"></a>3.镜像操作</h4><ul><li>列出本地镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker images可以看到没有镜像</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br></pre></td></tr></table></figure><ul><li>创建镜像</li></ul><p>创建镜像有很多方法，用户可以从 Docker Hub 获取已有镜像，也可以利用本地文件系统创建一个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker pull busybox</span></span><br><span class="line"><span class="comment"># docker run busybox echo "hello world"</span></span><br><span class="line"><span class="comment"># # docker images </span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line">busybox             latest              bc538d5908c7        4 weeks ago         1.146 MB</span><br></pre></td></tr></table></figure><ul><li>删除镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker kill $(docker ps -a -q)杀死所有running状态的容器</span></span><br><span class="line"><span class="comment"># docker rm $(docker ps -a -q)</span></span><br><span class="line"><span class="comment"># docker rmi bc538d5908c7删除镜像</span></span><br></pre></td></tr></table></figure><ul><li>搜索镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker search centos</span></span><br></pre></td></tr></table></figure><ul><li>下载镜像并启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker pull centos</span></span><br><span class="line"><span class="comment"># docker run -i -t centos /bin/bash</span></span><br></pre></td></tr></table></figure><h4 id="4-docker应用"><a href="#4-docker应用" class="headerlink" title="4.docker应用"></a>4.docker应用</h4><ul><li>docker安装mysql服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker pull hub.c.163.com/library/mysql:5.7拉取mysql镜像，采用网易加速地址</span></span><br><span class="line"><span class="comment"># docker images</span></span><br><span class="line">REPOSITORY                    TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line">centos                        latest              88ec626ba223        2 weeks ago         199.7 MB</span><br><span class="line">hub.c.163.com/library/mysql   5.7                 573ca163b053        14 months ago       407.1 MB</span><br><span class="line"><span class="comment"># docker tag hub.c.163.com/library/mysql:5.7 mysql:5.7 重命名镜像名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir /opt/mysql/datadir #用于挂载mysql数据文件</span></span><br><span class="line"><span class="comment"># mkdir /opt/mysql/conf.d #用于挂载mysql配置文件</span></span><br><span class="line"><span class="comment"># docker run --name mysql5.7 -p 3306:3306 -v /opt/mysql/datadir:/var/lib/mysql -v /opt/mysql/conf.d:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span></span><br><span class="line">参数说明：</span><br><span class="line">--name：容器名</span><br><span class="line">--p：映射宿主主机端口</span><br><span class="line">-v：挂载宿主目录到容器目录</span><br><span class="line">-e：设置环境变量，此处指定root密码</span><br><span class="line">-d：后台运行容器</span><br><span class="line"><span class="comment"># mysql -h192.168.0.215 -p3306 -uroot -p连接测试</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统安装docker，以及docker的基本操作。&lt;br&gt;
    
    </summary>
    
      <category term="docker" scheme="https://dsxlinux.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://dsxlinux.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>mysqld_multi实现单机主从复制</title>
    <link href="https://dsxlinux.github.io/2018/06/24/mysql-replication/"/>
    <id>https://dsxlinux.github.io/2018/06/24/mysql-replication/</id>
    <published>2018-06-24T10:32:46.000Z</published>
    <updated>2018-06-24T10:57:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍mysqld_multi实现单机主从复制。<br><a id="more"></a></p><h4 id="1-使用mysqld-multi配置三个实例"><a href="#1-使用mysqld-multi配置三个实例" class="headerlink" title="1.使用mysqld_multi配置三个实例"></a>1.使用mysqld_multi配置三个实例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqld_multi start</span></span><br><span class="line"><span class="comment"># mysqld_multi report</span></span><br><span class="line"><span class="comment"># netstat -an|grep 330</span></span><br></pre></td></tr></table></figure><h4 id="2-设置一个复制使用的账户"><a href="#2-设置一个复制使用的账户" class="headerlink" title="2.设置一个复制使用的账户"></a>2.设置一个复制使用的账户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p123456 -S  /tmp/mysql.sock3306主库</span></span><br><span class="line">mysql&gt; grant replication slave on *.* to <span class="string">'repl'</span>@<span class="string">'localhost'</span> identified by <span class="string">'123'</span>;</span><br><span class="line">mysql&gt; grant replication slave on *.* to <span class="string">'repl'</span>@<span class="string">'%'</span> identified by <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><h4 id="3-开启BINLOG"><a href="#3-开启BINLOG" class="headerlink" title="3.开启BINLOG"></a>3.开启BINLOG</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/my.cnf</span></span><br><span class="line">[mysqld_multi]</span><br><span class="line">mysqld = /usr/bin/mysqld_safe</span><br><span class="line">mysqladmin = /usr/bin/mysqladmin</span><br><span class="line">user=root</span><br><span class="line">pass=123456</span><br><span class="line"><span class="built_in">log</span>=/usr/<span class="built_in">local</span>/mysql/mysql_multi.log </span><br><span class="line"></span><br><span class="line">[mysqld3306]</span><br><span class="line">basedir=/usr</span><br><span class="line">datadir=/usr/<span class="built_in">local</span>/mysql/data3306</span><br><span class="line">port=3306</span><br><span class="line">user=mysql</span><br><span class="line">socket=/tmp/mysql.sock3306</span><br><span class="line">server_id=1</span><br><span class="line">log_bin=/usr/<span class="built_in">local</span>/mysql/mysql-bin-3306</span><br><span class="line"> </span><br><span class="line">[mysqld3307]</span><br><span class="line">basedir=/usr</span><br><span class="line">datadir=/usr/<span class="built_in">local</span>/mysql/data3307</span><br><span class="line">port=3307</span><br><span class="line">user=mysql</span><br><span class="line">socket=/tmp/mysql.sock3307</span><br><span class="line">server_id=2</span><br><span class="line">log_bin=/usr/<span class="built_in">local</span>/mysql/mysql-bin-3307</span><br><span class="line"> </span><br><span class="line">[mysqld3308]</span><br><span class="line">basedir=/usr</span><br><span class="line">datadir=/usr/<span class="built_in">local</span>/mysql/data3308</span><br><span class="line">port=3308</span><br><span class="line">user=mysql</span><br><span class="line">socket=/tmp/mysql.sock3308</span><br><span class="line">server_id=3</span><br><span class="line">log_bin=/usr/<span class="built_in">local</span>/mysql/mysql-bin-3308</span><br></pre></td></tr></table></figure><h4 id="4-主库配置"><a href="#4-主库配置" class="headerlink" title="4.主库配置"></a>4.主库配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p123456 -S  /tmp/mysql.sock3307</span></span><br><span class="line">mysql&gt; flush tables with <span class="built_in">read</span> lock;</span><br><span class="line">mysql&gt; show master status \G</span><br><span class="line">mysql&gt; unlock tables;</span><br><span class="line">mysql&gt; start slave;</span><br></pre></td></tr></table></figure><h4 id="5-从库配置"><a href="#5-从库配置" class="headerlink" title="5.从库配置"></a>5.从库配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p123456 -S  /tmp/mysql.sock3307</span></span><br><span class="line">mysql&gt; show variables like <span class="string">'%log_bin%'</span>;</span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; change master to master_host=<span class="string">'127.0.0.1'</span>,master_user=<span class="string">'repl'</span>,master_password=<span class="string">'123'</span>,master_log_file=<span class="string">'mysql-bin.000001'</span>,master_log_pos=0;</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status \G</span><br><span class="line">mysql&gt; show processlist \G</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍mysqld_multi实现单机主从复制。&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://dsxlinux.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://dsxlinux.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Nginx系列教程03</title>
    <link href="https://dsxlinux.github.io/2018/06/24/nginx-rewrite/"/>
    <id>https://dsxlinux.github.io/2018/06/24/nginx-rewrite/</id>
    <published>2018-06-24T07:58:19.000Z</published>
    <updated>2018-06-24T08:20:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍nginx服务器的rewrite规则。<br><a id="more"></a></p><h4 id="1-Nginx-URL重写（rewrite）介绍"><a href="#1-Nginx-URL重写（rewrite）介绍" class="headerlink" title="1.Nginx URL重写（rewrite）介绍"></a>1.Nginx URL重写（rewrite）介绍</h4><p>rewrite功能是实现RUL地址的重定向。Nginx的rewrite功能需要PCRE软件的支持，即通过perl兼容正则表达式语句进行规则匹配的。</p><ul><li><p>rewrite语法格式及参数语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rewrite &lt;regex&gt; &lt;replacement&gt; [flag]</span><br><span class="line">关键字   正则     替代内容    flag标记</span><br><span class="line"></span><br><span class="line">关键字：其中关键字error_log不能改变</span><br><span class="line">正则：perl兼容正则表达式语句进行规则匹配</span><br><span class="line">替代内容：将正则匹配的内容替换成replacement</span><br><span class="line">flag标记：rewrite支持的flag标记</span><br><span class="line"></span><br><span class="line">flag标记说明：</span><br><span class="line">last<span class="comment">#本条规则匹配完成后，继续向下匹配新的location URI规则</span></span><br><span class="line"><span class="built_in">break</span><span class="comment">#本条规则匹配完成即终止，不再匹配后面的任何规则</span></span><br><span class="line">redirect<span class="comment">#返回302临时重定向，浏览器地址会显示跳转后的URL地址</span></span><br><span class="line">permanent<span class="comment">#返回301永久重定向，浏览器地址栏会显示跳转后的URL地址</span></span><br></pre></td></tr></table></figure></li><li><p>rewrite参数的标签段位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server,location,<span class="keyword">if</span></span><br></pre></td></tr></table></figure></li><li><p>regex常用正则表达式说明<br>| 字符 | 描述 |<br>| - | :-: |<br>| \ | 转移字符，如”\n”匹配一个换行符，而”\$”则匹配”$” |<br>| ^ | 匹配输入字符串的起始位置 |<br>| $ | 匹配输入字符串的结束位置 |<br>| <em> | 匹配前面的字符零次或多次。如”ol</em>“能匹配”o”及”ol”、”oll” |<br>| + | 匹配前面的字符一次或多次。如“ol+”能匹配“ol”及“oll”、“oll”，但不能匹配“o” |<br>| ? | 匹配前面的字符零次或一次，例如“do(es)?”能匹配“do”或者“does”，”?”等效于”{0,1}” |<br>| . | 匹配除“\n”之外的任何单个字符 |<br>| (pattern) | 常用$0…$9属性获取小括号中的匹配内容，要匹配圆括号字符需要(Content) |</p></li></ul><p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">location = / &#123;  </span><br><span class="line">    <span class="comment">#规则A  </span></span><br><span class="line">&#125;  </span><br><span class="line">location = /login &#123;  </span><br><span class="line">    <span class="comment">#规则B  </span></span><br><span class="line">&#125;  </span><br><span class="line">location ^~ /static/ &#123;  </span><br><span class="line">    <span class="comment">#规则C  </span></span><br><span class="line">&#125;  </span><br><span class="line">location ~ \.(gif|jpg|png|js|css)$ &#123;  </span><br><span class="line">    <span class="comment">#规则D  </span></span><br><span class="line">&#125;  </span><br><span class="line">location ~* \.png$ &#123;  </span><br><span class="line">    <span class="comment">#规则E  </span></span><br><span class="line">&#125;  </span><br><span class="line">location !~ \.xhtml$ &#123;  </span><br><span class="line">    <span class="comment">#规则F  </span></span><br><span class="line">&#125;  </span><br><span class="line">location !~* \.xhtml$ &#123;  </span><br><span class="line">    <span class="comment">#规则G  </span></span><br><span class="line">&#125;  </span><br><span class="line">location / &#123;  </span><br><span class="line">    <span class="comment">#规则H  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="2-常用的变量"><a href="#2-常用的变量" class="headerlink" title="2.常用的变量"></a>2.常用的变量</h4><p>$args ： #这个变量等于请求行中的参数，同$query_string<br>$content_length ： 请求头中的Content-length字段。<br>$content_type ： 请求头中的Content-Type字段。<br>$document_root ： 当前请求在root指令中指定的值。<br>$host ： 请求主机头字段，否则为服务器名称。<br>$http_user_agent ： 客户端agent信息<br>$http_cookie ： 客户端cookie信息<br>$limit_rate ： 这个变量可以限制连接速率。<br>$request_method ： 客户端请求的动作，通常为GET或POST。<br>$remote_addr ： 客户端的IP地址。<br>$remote_port ： 客户端的端口。<br>$remote_user ： 已经经过Auth Basic Module验证的用户名。<br>$request_filename ： 当前请求的文件路径，由root或alias指令与URI请求生成。<br>$scheme ： HTTP方法（如http，https）。<br>$server_protocol ： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。<br>$server_addr ： 服务器地址，在完成一次系统调用后可以确定这个值。<br>$server_name ： 服务器名称。<br>$server_port ： 请求到达服务器的端口号。<br>$request_uri ： 包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。<br>$uri ： 不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。<br>$document_uri ： 与$uri相同。</p><h4 id="3-rewrite应用"><a href="#3-rewrite应用" class="headerlink" title="3.rewrite应用"></a>3.rewrite应用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">if ($http_user_agent ~ MSIE) &#123;</span><br><span class="line">    rewrite ^(.*)$ /msie/$1 break;</span><br><span class="line">&#125; //如果UA包含"MSIE"，rewrite请求到/msid/目录下</span><br><span class="line"></span><br><span class="line">if ($http_cookie ~* "id=([^;]+)(?:;|$)") &#123;</span><br><span class="line">    set $id $1;</span><br><span class="line"> &#125; //如果cookie匹配正则，设置变量$id等于正则引用部分</span><br><span class="line"></span><br><span class="line">if ($request_method = POST) &#123;</span><br><span class="line">    return 405;</span><br><span class="line">&#125; //如果提交方法为POST，则返回状态405（Method not allowed）。return不能返回301,302</span><br><span class="line"></span><br><span class="line">if ($slow) &#123;</span><br><span class="line">    limit_rate 10k;</span><br><span class="line">&#125; //限速，$slow可以通过 set 指令设置</span><br><span class="line"></span><br><span class="line">if (!-f $request_filename)&#123;</span><br><span class="line">    break;</span><br><span class="line">    proxy_pass  http://127.0.0.1; </span><br><span class="line">&#125; //如果请求的文件名不存在，则反向代理到localhost 。这里的break也是停止rewrite检查</span><br><span class="line"></span><br><span class="line">if ($args ~ post=140)&#123;</span><br><span class="line">    rewrite ^ http://mysite.com/ permanent;</span><br><span class="line">&#125; //如果query string中包含"post=140"，永久重定向到mysite.com</span><br></pre></td></tr></table></figure><ul><li><p>301永久定向到新域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name www.old-name.com old-name.com;</span><br><span class="line">    <span class="built_in">return</span> 301 <span class="variable">$scheme</span>://www.new-name.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>不带www的域名301跳转到带www的域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name mysite.com;</span><br><span class="line">    <span class="built_in">return</span> 301 <span class="variable">$scheme</span>://www.mysite.com<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>http站点301跳转到https站点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.mysite.com;</span><br><span class="line">    <span class="built_in">return</span> 301 https://www.mysite.com<span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍nginx服务器的rewrite规则。&lt;br&gt;
    
    </summary>
    
      <category term="nginx" scheme="https://dsxlinux.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://dsxlinux.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx系列教程02</title>
    <link href="https://dsxlinux.github.io/2018/06/24/nginx-apply/"/>
    <id>https://dsxlinux.github.io/2018/06/24/nginx-apply/</id>
    <published>2018-06-24T06:25:30.000Z</published>
    <updated>2018-06-24T08:26:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍nginx服务器的各种应用方式。<br><a id="more"></a></p><h4 id="1-静态HTTP服务器"><a href="#1-静态HTTP服务器" class="headerlink" title="1.静态HTTP服务器"></a>1.静态HTTP服务器</h4><p>Nginx是一个HTTP服务器，可以将服务器上的静态文件（如HTML、图片）通过HTTP协议展现给客户端。<br>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80; <span class="comment"># 端口号</span></span><br><span class="line">location / &#123;</span><br><span class="line">root /usr/share/nginx/html; <span class="comment"># 静态文件路径</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="2-反向代理服务器"><a href="#2-反向代理服务器" class="headerlink" title="2.反向代理服务器"></a>2.反向代理服务器</h4><p>反向代理服务器原理：<br>客户端—&gt; nginx反向代理—&gt; 应用服务器<br>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://192.168.0.112:8080; <span class="comment"># 应用服务器HTTP地址</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="3-负载均衡"><a href="#3-负载均衡" class="headerlink" title="3.负载均衡"></a>3.负载均衡</h4><p>负载均衡原理：<br>                          |—- 应用服务器<br>                          |<br>客户端—&gt; nginx反向代理—–|—- 应用服务器<br>                          |<br>                          |—- 应用服务器</p><p>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">upstream myapp &#123;</span><br><span class="line">server 192.168.0.111:8080; <span class="comment"># 应用服务器1</span></span><br><span class="line">server 192.168.0.112:8080; <span class="comment"># 应用服务器2</span></span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://myweb;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="4-虚拟主机"><a href="#4-虚拟主机" class="headerlink" title="4.虚拟主机"></a>4.虚拟主机</h4><p>将多个网站部署在同一台服务器上。<br>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80 default_server;</span><br><span class="line">server_name _;</span><br><span class="line"><span class="built_in">return</span> 444; <span class="comment"># 过滤其他域名的请求，返回444状态码</span></span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.aaa.com; <span class="comment"># www.aaa.com域名</span></span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://localhost:8080; <span class="comment"># 对应端口号8080</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.bbb.com; <span class="comment"># www.bbb.com域名</span></span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://localhost:8081; <span class="comment"># 对应端口号8081</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="5-FastCGI"><a href="#5-FastCGI" class="headerlink" title="5.FastCGI"></a>5.FastCGI</h4><p>Nginx本身不支持PHP等语言，但是它可以通过FastCGI来将请求扔给某些语言或框架处理（例如PHP、Python、Perl）。<br>配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">include fastcgi_params;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME /PHP文件路径<span class="variable">$fastcgi_script_name</span>; <span class="comment"># PHP文件路径</span></span><br><span class="line">fastcgi_pass 127.0.0.1:9000; <span class="comment"># PHP-FPM地址和端口号</span></span><br><span class="line"><span class="comment"># 另一种方式：fastcgi_pass unix:/var/run/php5-fpm.sock;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍nginx服务器的各种应用方式。&lt;br&gt;
    
    </summary>
    
      <category term="nginx" scheme="https://dsxlinux.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://dsxlinux.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx系列教程01</title>
    <link href="https://dsxlinux.github.io/2018/06/24/nginx-basic/"/>
    <id>https://dsxlinux.github.io/2018/06/24/nginx-basic/</id>
    <published>2018-06-24T05:20:53.000Z</published>
    <updated>2018-06-24T06:34:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Centos6.x系统安装nginx和nginx基本使用。<br><a id="more"></a></p><h4 id="1-Nginx下载安装"><a href="#1-Nginx下载安装" class="headerlink" title="1.Nginx下载安装"></a>1.Nginx下载安装</h4><p>可以下载ngxin源码包来安装，也可以通过nginx官网的YUM源安装。</p><ul><li><p>配置YUM源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx]</span><br><span class="line">name=nginx</span><br><span class="line">baseurl=http://nginx.org/packages/centos/6/x86_64/</span><br><span class="line">failovermethod=priority</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></li><li><p>安装nginx</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install nginx</span></span><br></pre></td></tr></table></figure><h4 id="2-Nginx配置文件"><a href="#2-Nginx配置文件" class="headerlink" title="2.Nginx配置文件"></a>2.Nginx配置文件</h4><ul><li>查看nginx配置文件。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qc nginx</span></span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/etc/nginx/conf.d/default.conf</span><br><span class="line">/etc/nginx/fastcgi_params</span><br><span class="line">/etc/nginx/koi-utf</span><br><span class="line">/etc/nginx/koi-win</span><br><span class="line">/etc/nginx/mime.types</span><br><span class="line">/etc/nginx/nginx.conf</span><br><span class="line">/etc/nginx/scgi_params</span><br><span class="line">/etc/nginx/uwsgi_params</span><br><span class="line">/etc/nginx/win-utf</span><br><span class="line">/etc/sysconfig/nginx</span><br><span class="line">/etc/sysconfig/nginx-debug</span><br></pre></td></tr></table></figure><ul><li>nginx主配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment">#运行用户</span></span><br><span class="line">user  nginx;</span><br><span class="line"><span class="comment">#工作进程：数目。</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误日志：存放路径。</span></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;</span><br><span class="line"><span class="comment"># pid（进程标识符）：存放路径。</span></span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 事件配置</span></span><br><span class="line">events &#123;</span><br><span class="line">    <span class="comment">#每个进程可以处理的最大连接数</span></span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># http参数</span></span><br><span class="line">http &#123;</span><br><span class="line"><span class="comment"># 文件扩展名与文件类型映射表</span></span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    <span class="comment"># 默认文件类型</span></span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志相关定义</span></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#连接日志的路径，指定的日志格式放在最后</span></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启高效传输模式</span></span><br><span class="line">    sendfile        on; </span><br><span class="line">    <span class="comment">#防止网络阻塞</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on; </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#客户端连接超时时间，单位是秒</span></span><br><span class="line">    keepalive_timeout  65; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">#客户端请求头读取超时时间</span></span><br><span class="line">    client_header_timeout 10;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置客户端请求主体读取超时时间</span></span><br><span class="line">    client_body_timeout 10;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#响应客户端超时时间</span></span><br><span class="line">    send_timeout 10;</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启gzip压缩输出</span></span><br><span class="line">    <span class="comment">#gzip  on; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 子配置文件</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>子配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nginx/conf.d/default.conf</span></span><br><span class="line"><span class="comment"># 虚拟主机定义</span></span><br><span class="line">server &#123;</span><br><span class="line"><span class="comment"># 监听端口</span></span><br><span class="line">    listen       80;</span><br><span class="line">    <span class="comment"># 访问域名</span></span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 编码格式，若网页格式与此不同，将被自动转码</span></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment"># 虚拟主机访问日志定义</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对URL进行匹配</span></span><br><span class="line">    location / &#123;</span><br><span class="line">    <span class="comment"># 访问路径，可相对也可绝对路径</span></span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        <span class="comment"># 首页文件。以下按顺序匹配</span></span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 错误信息返回页面</span></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 访问URL以.php结尾则自动转交给127.0.0.1</span></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># php脚本请求全部转发给FastCGI处理</span></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 禁止访问.ht页面 （需ngx_http_access_module模块）</span></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx's one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># HTTPS虚拟主机定义</span></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>其他配置</li></ul><p>​    Nginx状态监控 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Nginx运行状态，StubStatus模块获取Nginx自启动的工作状态（编译时要开启对应功能）</span></span><br><span class="line"><span class="comment">#location /NginxStatus &#123;</span></span><br><span class="line"><span class="comment">#    #启用StubStatus的工作访问状态    </span></span><br><span class="line"><span class="comment">#    stub_status    on;</span></span><br><span class="line"><span class="comment">#    #指定StubStaus模块的访问日志文件</span></span><br><span class="line"><span class="comment">#    access_log    logs/Nginxstatus.log;</span></span><br><span class="line"><span class="comment">#    #Nginx认证机制（需Apache的htpasswd命令生成）</span></span><br><span class="line"><span class="comment">#    #auth_basic    "NginxStatus";</span></span><br><span class="line"><span class="comment">#    #用来认证的密码文件</span></span><br><span class="line"><span class="comment">#    #auth_basic_user_file    ../htpasswd;    </span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line">访问：http://IP/NginxStatus(测试就不加密码验证相关)</span><br></pre></td></tr></table></figure><p>​    反向代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#以下配置追加在HTTP的全局变量中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">proxy_connect_timeout      5;</span><br><span class="line"></span><br><span class="line"><span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">proxy_send_timeout         5;</span><br><span class="line"></span><br><span class="line"><span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">proxy_read_timeout         60;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">proxy_buffer_size          16k;</span><br><span class="line"></span><br><span class="line"><span class="comment">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span></span><br><span class="line">proxy_buffers              4 32k;</span><br><span class="line"></span><br><span class="line"><span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">proxy_busy_buffers_size    64k;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span><br><span class="line">proxy_temp_file_write_size 64k;</span><br><span class="line"></span><br><span class="line"><span class="comment">#反向代理缓存目录</span></span><br><span class="line">proxy_cache_path /data/proxy/cache levels=1:2 keys_zone=cache_one:500m inactive=1d max_size=1g;</span><br><span class="line"></span><br><span class="line"><span class="comment">#levels=1:2 设置目录深度，第一层目录是1个字符，第2层是2个字符</span></span><br><span class="line"><span class="comment">#keys_zone:设置web缓存名称和内存缓存空间大小</span></span><br><span class="line"><span class="comment">#inactive:自动清除缓存文件时间。</span></span><br><span class="line"><span class="comment">#max_size:硬盘空间最大可使用值。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定临时缓存文件的存储路径(路径需和上面路径在同一分区)</span></span><br><span class="line">proxy_temp_path /data/proxy/temp</span><br><span class="line"></span><br><span class="line"><span class="comment">#服务配置</span></span><br><span class="line">server &#123;</span><br><span class="line">    <span class="comment">#侦听的80端口</span></span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">        <span class="comment">#反向代理缓存设置命令(proxy_cache zone|off,默认关闭所以要设置)</span></span><br><span class="line">        proxy_cache cache_one;</span><br><span class="line">        <span class="comment">#对不同的状态码缓存不同时间</span></span><br><span class="line">        proxy_cache_valid 200 304 12h;</span><br><span class="line">        <span class="comment">#设置以什么样参数获取缓存文件名</span></span><br><span class="line">        proxy_cache_key <span class="variable">$host</span><span class="variable">$uri</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">        <span class="comment">#后7端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>; </span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;   </span><br><span class="line">        <span class="comment">#代理设置</span></span><br><span class="line">        proxy_pass   http://IP; </span><br><span class="line">        <span class="comment">#文件过期时间控制</span></span><br><span class="line">        expires    1d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#配置手动清楚缓存(实现此功能需第三方模块 ngx_cache_purge)</span></span><br><span class="line">    <span class="comment">#http://www.123.com/2017/0316/17.html访问</span></span><br><span class="line">    <span class="comment">#http://www.123.com/purge/2017/0316/17.html清楚URL缓存</span></span><br><span class="line">    location ~ /purge(/.*) &#123;</span><br><span class="line">        allow    127.0.0.1;</span><br><span class="line">        deny    all;</span><br><span class="line">        proxy_cache_purge    cache_one    <span class="variable">$host</span><span class="variable">$1</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#设置扩展名以.jsp、.php、.jspx结尾的动态应用程序不做缓存</span></span><br><span class="line">    location ~.*\.(jsp|php|jspx)?$ &#123; </span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>; </span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>; </span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;   </span><br><span class="line">        proxy_pass http://http://IP;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​    负载均衡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#负载均衡服务器池</span></span><br><span class="line">upstream my_server_pool &#123;</span><br><span class="line">    <span class="comment">#调度算法</span></span><br><span class="line">    <span class="comment">#1.轮循（默认）（weight轮循权值）</span></span><br><span class="line">    <span class="comment">#2.ip_hash：根据每个请求访问IP的hash结果分配。（会话保持）</span></span><br><span class="line">    <span class="comment">#3.fair:根据后端服务器响应时间最短请求。（upstream_fair模块）</span></span><br><span class="line">    <span class="comment">#4.url_hash:根据访问的url的hash结果分配。（需hash软件包）</span></span><br><span class="line">    <span class="comment">#参数：</span></span><br><span class="line">    <span class="comment">#down：表示不参与负载均衡</span></span><br><span class="line">    <span class="comment">#backup:备份服务器</span></span><br><span class="line">    <span class="comment">#max_fails:允许最大请求错误次数</span></span><br><span class="line">    <span class="comment">#fail_timeout:请求失败后暂停服务时间。</span></span><br><span class="line">    server 192.168.1.109:80 weight=1 max_fails=2 fail_timeout=30;</span><br><span class="line">    server 192.168.1.108:80 weight=2 max_fails=2 fail_timeout=30;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#负载均衡调用</span></span><br><span class="line">server &#123;</span><br><span class="line">    ...</span><br><span class="line">    location / &#123;</span><br><span class="line">    proxy_pass http://my_server_pool;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    URL重写 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据不同的浏览器URL重写</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$http_user_agent</span> ~ Firefox)&#123;</span><br><span class="line">  rewrite ^(.*)$  /firefox/<span class="variable">$1</span> <span class="built_in">break</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$http_user_agent</span> ~ MSIE)&#123;</span><br><span class="line">  rewrite ^(.*)$  /msie/<span class="variable">$1</span> <span class="built_in">break</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">#实现域名跳转</span></span><br><span class="line">  location / &#123;</span><br><span class="line">  rewrite ^/(.*)$ https://web8.example.com<span class="variable">$1</span> permanent;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>​    IP限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#限制IP访问</span></span><br><span class="line">location / &#123;</span><br><span class="line">    deny 192.168.0.2；</span><br><span class="line">    allow 192.168.0.0/24;</span><br><span class="line">    allow 192.168.1.1;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-Nginx启停"><a href="#3-Nginx启停" class="headerlink" title="3. Nginx启停"></a>3. Nginx启停</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/init.d/nginx start</span></span><br><span class="line"><span class="comment"># /etc/init.d/nginx stop</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍Centos6.x系统安装nginx和nginx基本使用。&lt;br&gt;
    
    </summary>
    
      <category term="nginx" scheme="https://dsxlinux.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://dsxlinux.github.io/tags/nginx/"/>
    
  </entry>
  
</feed>
